

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 26 11:16:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.35
    50                           ; Generated 13/04/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F15244 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  0119                     	;# 
   115  011A                     	;# 
   116  011B                     	;# 
   117  011B                     	;# 
   118  011C                     	;# 
   119  011D                     	;# 
   120  011E                     	;# 
   121  011F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  018E                     	;# 
   125  018F                     	;# 
   126  0190                     	;# 
   127  0191                     	;# 
   128  0192                     	;# 
   129  020C                     	;# 
   130  020D                     	;# 
   131  020E                     	;# 
   132  020E                     	;# 
   133  020F                     	;# 
   134  020F                     	;# 
   135  0210                     	;# 
   136  0210                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  028C                     	;# 
   140  028C                     	;# 
   141  028D                     	;# 
   142  028D                     	;# 
   143  028E                     	;# 
   144  028F                     	;# 
   145  0290                     	;# 
   146  0291                     	;# 
   147  030C                     	;# 
   148  030C                     	;# 
   149  030D                     	;# 
   150  030E                     	;# 
   151  030F                     	;# 
   152  0310                     	;# 
   153  0310                     	;# 
   154  0311                     	;# 
   155  0312                     	;# 
   156  0313                     	;# 
   157  0314                     	;# 
   158  0314                     	;# 
   159  0315                     	;# 
   160  0316                     	;# 
   161  0318                     	;# 
   162  0318                     	;# 
   163  0319                     	;# 
   164  031A                     	;# 
   165  059C                     	;# 
   166  059C                     	;# 
   167  059D                     	;# 
   168  059D                     	;# 
   169  059E                     	;# 
   170  059F                     	;# 
   171  070C                     	;# 
   172  070D                     	;# 
   173  070E                     	;# 
   174  0716                     	;# 
   175  0717                     	;# 
   176  0718                     	;# 
   177  080C                     	;# 
   178  0811                     	;# 
   179  0813                     	;# 
   180  0814                     	;# 
   181  081A                     	;# 
   182  081A                     	;# 
   183  081B                     	;# 
   184  081C                     	;# 
   185  081C                     	;# 
   186  081D                     	;# 
   187  081E                     	;# 
   188  081F                     	;# 
   189  088E                     	;# 
   190  0890                     	;# 
   191  0891                     	;# 
   192  0892                     	;# 
   193  0893                     	;# 
   194  090C                     	;# 
   195  1E8F                     	;# 
   196  1E90                     	;# 
   197  1E91                     	;# 
   198  1E92                     	;# 
   199  1E93                     	;# 
   200  1E9C                     	;# 
   201  1EA1                     	;# 
   202  1EA2                     	;# 
   203  1EC3                     	;# 
   204  1EC5                     	;# 
   205  1EC6                     	;# 
   206  1EC7                     	;# 
   207  1ECB                     	;# 
   208  1ECB                     	;# 
   209  1ECB                     	;# 
   210  1ECC                     	;# 
   211  1ECC                     	;# 
   212  1ECC                     	;# 
   213  1F10                     	;# 
   214  1F11                     	;# 
   215  1F12                     	;# 
   216  1F14                     	;# 
   217  1F15                     	;# 
   218  1F1C                     	;# 
   219  1F1D                     	;# 
   220  1F1E                     	;# 
   221  1F1F                     	;# 
   222  1F20                     	;# 
   223  1F21                     	;# 
   224  1F22                     	;# 
   225  1F23                     	;# 
   226  1F24                     	;# 
   227  1F25                     	;# 
   228  1F26                     	;# 
   229  1F27                     	;# 
   230  1F38                     	;# 
   231  1F39                     	;# 
   232  1F3A                     	;# 
   233  1F3B                     	;# 
   234  1F3C                     	;# 
   235  1F3D                     	;# 
   236  1F3E                     	;# 
   237  1F3F                     	;# 
   238  1F43                     	;# 
   239  1F44                     	;# 
   240  1F45                     	;# 
   241  1F46                     	;# 
   242  1F47                     	;# 
   243  1F48                     	;# 
   244  1F49                     	;# 
   245  1F4A                     	;# 
   246  1F4E                     	;# 
   247  1F4F                     	;# 
   248  1F50                     	;# 
   249  1F51                     	;# 
   250  1F52                     	;# 
   251  1F53                     	;# 
   252  1F54                     	;# 
   253  1F55                     	;# 
   254  1FE4                     	;# 
   255  1FE5                     	;# 
   256  1FE6                     	;# 
   257  1FE7                     	;# 
   258  1FE8                     	;# 
   259  1FE8                     	;# 
   260  1FE9                     	;# 
   261  1FEA                     	;# 
   262  1FEB                     	;# 
   263  1FED                     	;# 
   264  1FEE                     	;# 
   265  1FEF                     	;# 
   266                           
   267                           	psect	idataBANK1
   268  000B                     __pidataBANK1:
   269                           
   270                           ;initializer for _MAX
   271  000B  3432               	retlw	50
   272                           
   273                           	psect	stringtext1
   274  0800                     __pstringtext1:
   275  0800                     _LDR:
   276  0800  34B6               	retlw	182
   277  0801  3403               	retlw	3
   278  0802                     __end_of_LDR:
   279  001A                     _LATCbits	set	26
   280  000C                     _PORTAbits	set	12
   281  0018                     _LATAbits	set	24
   282  0014                     _TRISC	set	20
   283  0013                     _TRISB	set	19
   284  0012                     _TRISA	set	18
   285  001A                     _LATC	set	26
   286  0019                     _LATB	set	25
   287  0018                     _LATA	set	24
   288  000D                     _PORTBbits	set	13
   289  000E                     _PORTCbits	set	14
   290  0013                     _TRISBbits	set	19
   291  0014                     _TRISCbits	set	20
   292  1F52                     _INLVLC	set	8018
   293  1F47                     _INLVLB	set	8007
   294  1F3C                     _INLVLA	set	7996
   295  1F51                     _SLRCONC	set	8017
   296  1F46                     _SLRCONB	set	8006
   297  1F3B                     _SLRCONA	set	7995
   298  1F50                     _ODCONC	set	8016
   299  1F45                     _ODCONB	set	8005
   300  1F3A                     _ODCONA	set	7994
   301  1F4F                     _WPUC	set	8015
   302  1F38                     _ANSELA	set	7992
   303  1F43                     _ANSELB	set	8003
   304  1F4E                     _ANSELC	set	8014
   305  0802                     STR_2:
   306  0802  344C               	retlw	76	;'L'
   307  0803  3449               	retlw	73	;'I'
   308  0804  344D               	retlw	77	;'M'
   309  0805  3449               	retlw	73	;'I'
   310  0806  3454               	retlw	84	;'T'
   311  0807  3445               	retlw	69	;'E'
   312  0808  3420               	retlw	32	;' '
   313  0809  3450               	retlw	80	;'P'
   314  080A  3445               	retlw	69	;'E'
   315  080B  3452               	retlw	82	;'R'
   316  080C  3453               	retlw	83	;'S'
   317  080D  344F               	retlw	79	;'O'
   318  080E  344E               	retlw	78	;'N'
   319  080F  3441               	retlw	65	;'A'
   320  0810  3453               	retlw	83	;'S'
   321  0811  3400               	retlw	0
   322                           
   323                           	psect	stringtext2
   324  0812                     __pstringtext2:
   325  0812                     STR_11:
   326  0812  344E               	retlw	78	;'N'
   327  0813  3475               	retlw	117	;'u'
   328  0814  346D               	retlw	109	;'m'
   329  0815  3450               	retlw	80	;'P'
   330  0816  3465               	retlw	101	;'e'
   331  0817  3472               	retlw	114	;'r'
   332  0818  3473               	retlw	115	;'s'
   333  0819  346F               	retlw	111	;'o'
   334  081A  346E               	retlw	110	;'n'
   335  081B  3461               	retlw	97	;'a'
   336  081C  3473               	retlw	115	;'s'
   337  081D  3420               	retlw	32	;' '
   338  081E  3425               	retlw	37	;'%'
   339  081F  3430               	retlw	48	;'0'
   340  0820  3464               	retlw	100	;'d'
   341  0821  3400               	retlw	0
   342                           
   343                           	psect	stringtext3
   344  0822                     __pstringtext3:
   345  0822                     STR_9:
   346  0822  344D               	retlw	77	;'M'
   347  0823  346F               	retlw	111	;'o'
   348  0824  3464               	retlw	100	;'d'
   349  0825  346F               	retlw	111	;'o'
   350  0826  3420               	retlw	32	;' '
   351  0827  3463               	retlw	99	;'c'
   352  0828  346F               	retlw	111	;'o'
   353  0829  346E               	retlw	110	;'n'
   354  082A  3474               	retlw	116	;'t'
   355  082B  3461               	retlw	97	;'a'
   356  082C  3464               	retlw	100	;'d'
   357  082D  346F               	retlw	111	;'o'
   358  082E  3472               	retlw	114	;'r'
   359  082F  3420               	retlw	32	;' '
   360  0830  3400               	retlw	0
   361                           
   362                           	psect	stringtext4
   363  0831                     __pstringtext4:
   364  0831                     STR_5:
   365  0831  3443               	retlw	67	;'C'
   366  0832  346F               	retlw	111	;'o'
   367  0833  346E               	retlw	110	;'n'
   368  0834  3466               	retlw	102	;'f'
   369  0835  3469               	retlw	105	;'i'
   370  0836  3467               	retlw	103	;'g'
   371  0837  3475               	retlw	117	;'u'
   372  0838  3472               	retlw	114	;'r'
   373  0839  3461               	retlw	97	;'a'
   374  083A  3463               	retlw	99	;'c'
   375  083B  3469               	retlw	105	;'i'
   376  083C  346F               	retlw	111	;'o'
   377  083D  346E               	retlw	110	;'n'
   378  083E  3400               	retlw	0
   379                           
   380                           	psect	stringtext5
   381  083F                     __pstringtext5:
   382  083F                     STR_6:
   383  083F  344D               	retlw	77	;'M'
   384  0840  3461               	retlw	97	;'a'
   385  0841  3478               	retlw	120	;'x'
   386  0842  3469               	retlw	105	;'i'
   387  0843  346D               	retlw	109	;'m'
   388  0844  346F               	retlw	111	;'o'
   389  0845  343A               	retlw	58	;':'
   390  0846  3420               	retlw	32	;' '
   391  0847  3425               	retlw	37	;'%'
   392  0848  3464               	retlw	100	;'d'
   393  0849  3400               	retlw	0
   394                           
   395                           	psect	stringtext6
   396  084A                     __pstringtext6:
   397  084A                     STR_18:
   398  084A  344C               	retlw	76	;'L'
   399  084B  3449               	retlw	73	;'I'
   400  084C  344D               	retlw	77	;'M'
   401  084D  3449               	retlw	73	;'I'
   402  084E  3454               	retlw	84	;'T'
   403  084F  3445               	retlw	69	;'E'
   404  0850  3420               	retlw	32	;' '
   405  0851  3425               	retlw	37	;'%'
   406  0852  3430               	retlw	48	;'0'
   407  0853  3464               	retlw	100	;'d'
   408  0854  3400               	retlw	0
   409                           
   410                           	psect	stringtext7
   411  0855                     __pstringtext7:
   412  0855                     STR_12:
   413  0855  344C               	retlw	76	;'L'
   414  0856  3449               	retlw	73	;'I'
   415  0857  344D               	retlw	77	;'M'
   416  0858  3449               	retlw	73	;'I'
   417  0859  3454               	retlw	84	;'T'
   418  085A  3445               	retlw	69	;'E'
   419  085B  3420               	retlw	32	;' '
   420  085C  3425               	retlw	37	;'%'
   421  085D  3464               	retlw	100	;'d'
   422  085E  3400               	retlw	0
   423                           
   424                           	psect	stringtext8
   425  085F                     __pstringtext8:
   426  085F                     STR_1:
   427  085F  3441               	retlw	65	;'A'
   428  0860  344A               	retlw	74	;'J'
   429  0861  3455               	retlw	85	;'U'
   430  0862  3453               	retlw	83	;'S'
   431  0863  3454               	retlw	84	;'T'
   432  0864  3445               	retlw	69	;'E'
   433  0865  3420               	retlw	32	;' '
   434  0866  3400               	retlw	0
   435                           
   436                           	psect	stringtext9
   437  0867                     __pstringtext9:
   438  0867                     STR_16:
   439  0867  3441               	retlw	65	;'A'
   440  0868  344A               	retlw	74	;'J'
   441  0869  3455               	retlw	85	;'U'
   442  086A  3453               	retlw	83	;'S'
   443  086B  3454               	retlw	84	;'T'
   444  086C  3441               	retlw	65	;'A'
   445  086D  3452               	retlw	82	;'R'
   446  086E  3400               	retlw	0
   447                           
   448                           	psect	stringtext10
   449  086F                     __pstringtext10:
   450  086F                     STR_10:
   451  086F  3442               	retlw	66	;'B'
   452  0870  3475               	retlw	117	;'u'
   453  0871  3465               	retlw	101	;'e'
   454  0872  346E               	retlw	110	;'n'
   455  0873  3444               	retlw	68	;'D'
   456  0874  3469               	retlw	105	;'i'
   457  0875  3461               	retlw	97	;'a'
   458  0876  3400               	retlw	0
   459                           
   460                           	psect	stringtext11
   461  0877                     __pstringtext11:
   462  0877                     STR_15:
   463  0877  3443               	retlw	67	;'C'
   464  0878  344F               	retlw	79	;'O'
   465  0879  344E               	retlw	78	;'N'
   466  087A  3454               	retlw	84	;'T'
   467  087B  3441               	retlw	65	;'A'
   468  087C  3452               	retlw	82	;'R'
   469  087D  3400               	retlw	0
   470                           
   471                           	psect	stringtext12
   472  087E                     __pstringtext12:
   473  087E                     STR_3:
   474  087E  3445               	retlw	69	;'E'
   475  087F  344C               	retlw	76	;'L'
   476  0880  3449               	retlw	73	;'I'
   477  0881  344A               	retlw	74	;'J'
   478  0882  3441               	retlw	65	;'A'
   479  0883  3400               	retlw	0
   480                           
   481                           	psect	stringtext13
   482  0000                     __pstringtext13:
   483  0802                     
   484                           	psect	cinit
   485  07E8                     start_initialization:	
   486                           ; #config settings
   487                           
   488  07E8                     __initialization:
   489                           
   490                           ; Initialize objects allocated to BANK1
   491  07E8  0141               	movlb	1	; select bank1
   492  07E9  3180  200B  3187   	fcall	__pidataBANK1	;fetch initializer
   493  07EC  00EA               	movwf	__pdataBANK1& (0+127)
   494                           
   495                           ; Clear objects allocated to BANK1
   496  07ED  30A0               	movlw	low __pbssBANK1
   497  07EE  0084               	movwf	4
   498  07EF  3000               	movlw	high __pbssBANK1
   499  07F0  0085               	movwf	5
   500  07F1  303D               	movlw	61
   501  07F2  3180  200C  3187   	fcall	clear_ram0
   502                           
   503                           ; Clear objects allocated to BANK2
   504  07F5  3020               	movlw	low __pbssBANK2
   505  07F6  0084               	movwf	4
   506  07F7  3001               	movlw	high __pbssBANK2
   507  07F8  0085               	movwf	5
   508  07F9  3020               	movlw	32
   509  07FA  3180  200C  3187   	fcall	clear_ram0
   510  07FD                     end_of_initialization:	
   511                           ;End of C runtime variable initialization code
   512                           
   513  07FD                     __end_of__initialization:
   514  07FD  0140               	movlb	0
   515  07FE  3185  2DCA         	ljmp	_main	;jump to C main() function
   516                           
   517                           	psect	bssBANK1
   518  00A0                     __pbssBANK1:
   519  00A0                     _selec:
   520  00A0                     	ds	3
   521  00A3                     _S:
   522  00A3                     	ds	3
   523  00A6                     _nout:
   524  00A6                     	ds	2
   525  00A8                     _width:
   526  00A8                     	ds	2
   527  00AA                     _prec:
   528  00AA                     	ds	2
   529  00AC                     _flags:
   530  00AC                     	ds	2
   531  00AE                     _SU:
   532  00AE                     	ds	2
   533  00B0                     _contado:
   534  00B0                     	ds	2
   535  00B2                     _S_2:
   536  00B2                     	ds	1
   537  00B3                     _S_1:
   538  00B3                     	ds	1
   539  00B4                     _contador:
   540  00B4                     	ds	1
   541  00B5                     _CONT:
   542  00B5                     	ds	20
   543  00C9                     _s:
   544  00C9                     	ds	20
   545                           
   546                           	psect	dataBANK1
   547  00EA                     __pdataBANK1:
   548  00EA                     _MAX:
   549  00EA                     	ds	1
   550                           
   551                           	psect	bssBANK2
   552  0120                     __pbssBANK2:
   553  0120                     _dbuf:
   554  0120                     	ds	32
   555                           
   556                           	psect	clrtext
   557  000C                     clear_ram0:	
   558                           ;	Called with FSR0 containing the base address, and
   559                           ;	WREG with the size to clear
   560                           
   561  000C  0064               	clrwdt	;clear the watchdog before getting into this loop
   562  000D                     clrloop0:
   563  000D  0180               	clrf	0	;clear RAM location pointed to by FSR
   564  000E  3101               	addfsr 0,1
   565  000F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   566  0010  280D               	goto	clrloop0	;have we reached the end yet?
   567  0011  3400               	retlw	0	;all done for this memory range, return
   568                           
   569                           	psect	cstackBANK1
   570  00DD                     __pcstackBANK1:
   571  00DD                     sprintf@ap:
   572                           
   573                           ; 1 bytes @ 0x0
   574  00DD                     	ds	1
   575  00DE                     sprintf@f:
   576                           
   577                           ; 5 bytes @ 0x1
   578  00DE                     	ds	5
   579  00E3                     sprintf@s:
   580                           
   581                           ; 1 bytes @ 0x6
   582  00E3                     	ds	1
   583  00E4                     menu@variable:
   584                           
   585                           ; 3 bytes @ 0x7
   586  00E4                     	ds	3
   587  00E7                     menu@operacion:
   588                           
   589                           ; 1 bytes @ 0xA
   590  00E7                     	ds	1
   591  00E8                     menu@ok:
   592                           
   593                           ; 2 bytes @ 0xB
   594  00E8                     	ds	2
   595                           
   596                           	psect	cstackCOMMON
   597  0070                     __pcstackCOMMON:
   598  0070                     ?_Lcd_Cmd:
   599  0070                     ??_Lcd_Cmd:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Lcd_Chr_CP:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ??_Lcd_Chr_CP:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_putch:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ??_putch:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_Lcd_Init:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_PIN_MANAGER_Initialize:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ??_PIN_MANAGER_Initialize:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_menu:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_main:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ??___aodiv:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ??___aomod:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_fputc:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_strlen:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0070                     putch@c:	
   642                           ; 2 bytes @ 0x0
   643                           
   644  0070                     fputc@c:	
   645                           ; 1 bytes @ 0x0
   646                           
   647                           
   648                           ; 2 bytes @ 0x0
   649  0070                     	ds	1
   650  0071                     ___aodiv@counter:
   651  0071                     ___aomod@counter:	
   652                           ; 1 bytes @ 0x1
   653                           
   654                           
   655                           ; 1 bytes @ 0x1
   656  0071                     	ds	1
   657  0072                     ??_strlen:
   658  0072                     Lcd_Chr_CP@data:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0072                     Lcd_Cmd@data:	
   662                           ; 1 bytes @ 0x2
   663                           
   664  0072                     ___aodiv@sign:	
   665                           ; 1 bytes @ 0x2
   666                           
   667  0072                     ___aomod@sign:	
   668                           ; 1 bytes @ 0x2
   669                           
   670  0072                     fputc@fp:	
   671                           ; 1 bytes @ 0x2
   672                           
   673                           
   674                           ; 1 bytes @ 0x2
   675  0072                     	ds	1
   676  0073                     ??_fputc:
   677  0073                     ??_Lcd_Init:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0073                     ?_Lcd_Out:	
   681                           ; 1 bytes @ 0x3
   682                           
   683  0073                     ?_Lcd_Out2:	
   684                           ; 1 bytes @ 0x3
   685                           
   686  0073                     ?_abs:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     Lcd_Out@x:	
   690                           ; 2 bytes @ 0x3
   691                           
   692  0073                     Lcd_Out2@x:	
   693                           ; 1 bytes @ 0x3
   694                           
   695  0073                     strlen@a:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     abs@a:	
   699                           ; 1 bytes @ 0x3
   700                           
   701  0073                     ___aodiv@quotient:	
   702                           ; 2 bytes @ 0x3
   703                           
   704                           
   705                           ; 8 bytes @ 0x3
   706  0073                     	ds	1
   707  0074                     Lcd_Init@data:
   708  0074                     Lcd_Out2@buffer:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     strlen@s:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     Lcd_Out@buffer:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 2 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     ??_abs:
   721  0075                     ??_Lcd_Out2:	
   722                           ; 1 bytes @ 0x5
   723                           
   724                           
   725                           ; 1 bytes @ 0x5
   726  0075                     	ds	1
   727  0076                     ??_Lcd_Out:
   728                           
   729                           ; 1 bytes @ 0x6
   730  0076                     	ds	1
   731  0077                     Lcd_Out2@y:
   732                           
   733                           ; 1 bytes @ 0x7
   734  0077                     	ds	1
   735  0078                     ?_fputs:
   736  0078                     Lcd_Out@y:	
   737                           ; 2 bytes @ 0x8
   738                           
   739  0078                     Lcd_Out2@data:	
   740                           ; 1 bytes @ 0x8
   741                           
   742  0078                     fputs@fp:	
   743                           ; 1 bytes @ 0x8
   744                           
   745                           
   746                           ; 1 bytes @ 0x8
   747  0078                     	ds	1
   748  0079                     ??_fputs:
   749  0079                     Lcd_Out@data:	
   750                           ; 1 bytes @ 0x9
   751                           
   752                           
   753                           ; 1 bytes @ 0x9
   754  0079                     	ds	3
   755  007C                     ??_pad:
   756                           
   757                           ; 1 bytes @ 0xC
   758  007C                     	ds	1
   759  007D                     ??_sprintf:
   760                           
   761                           ; 1 bytes @ 0xD
   762  007D                     	ds	1
   763                           
   764                           	psect	cstackBANK0
   765  0020                     __pcstackBANK0:
   766  0020                     ?___aodiv:
   767  0020                     ?___aomod:	
   768                           ; 8 bytes @ 0x0
   769                           
   770  0020                     fputs@c:	
   771                           ; 8 bytes @ 0x0
   772                           
   773  0020                     ___aodiv@divisor:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0020                     ___aomod@divisor:	
   777                           ; 8 bytes @ 0x0
   778                           
   779                           
   780                           ; 8 bytes @ 0x0
   781  0020                     	ds	1
   782  0021                     fputs@i:
   783                           
   784                           ; 2 bytes @ 0x1
   785  0021                     	ds	2
   786  0023                     fputs@s:
   787                           
   788                           ; 1 bytes @ 0x3
   789  0023                     	ds	1
   790  0024                     ?_pad:
   791  0024                     pad@buf:	
   792                           ; 2 bytes @ 0x4
   793                           
   794                           
   795                           ; 1 bytes @ 0x4
   796  0024                     	ds	1
   797  0025                     pad@p:
   798                           
   799                           ; 2 bytes @ 0x5
   800  0025                     	ds	2
   801  0027                     pad@i:
   802                           
   803                           ; 2 bytes @ 0x7
   804  0027                     	ds	1
   805  0028                     ___aodiv@dividend:
   806  0028                     ___aomod@dividend:	
   807                           ; 8 bytes @ 0x8
   808                           
   809                           
   810                           ; 8 bytes @ 0x8
   811  0028                     	ds	1
   812  0029                     pad@w:
   813                           
   814                           ; 2 bytes @ 0x9
   815  0029                     	ds	2
   816  002B                     pad@fp:
   817                           
   818                           ; 1 bytes @ 0xB
   819  002B                     	ds	5
   820  0030                     ?_dtoa:
   821  0030                     dtoa@d:	
   822                           ; 2 bytes @ 0x10
   823                           
   824                           
   825                           ; 8 bytes @ 0x10
   826  0030                     	ds	8
   827  0038                     ??_dtoa:
   828                           
   829                           ; 1 bytes @ 0x18
   830  0038                     	ds	3
   831  003B                     _dtoa$683:
   832                           
   833                           ; 2 bytes @ 0x1B
   834  003B                     	ds	2
   835  003D                     dtoa@fp:
   836                           
   837                           ; 1 bytes @ 0x1D
   838  003D                     	ds	1
   839  003E                     dtoa@p:
   840                           
   841                           ; 2 bytes @ 0x1E
   842  003E                     	ds	2
   843  0040                     dtoa@w:
   844                           
   845                           ; 2 bytes @ 0x20
   846  0040                     	ds	2
   847  0042                     dtoa@s:
   848                           
   849                           ; 2 bytes @ 0x22
   850  0042                     	ds	2
   851  0044                     dtoa@n:
   852                           
   853                           ; 8 bytes @ 0x24
   854  0044                     	ds	8
   855  004C                     dtoa@i:
   856                           
   857                           ; 2 bytes @ 0x2C
   858  004C                     	ds	2
   859  004E                     ?_vfpfcnvrt:
   860  004E                     vfpfcnvrt@fmt:	
   861                           ; 2 bytes @ 0x2E
   862                           
   863                           
   864                           ; 1 bytes @ 0x2E
   865  004E                     	ds	1
   866  004F                     vfpfcnvrt@ap:
   867                           
   868                           ; 1 bytes @ 0x2F
   869  004F                     	ds	1
   870  0050                     ??_vfpfcnvrt:
   871                           
   872                           ; 1 bytes @ 0x30
   873  0050                     	ds	5
   874  0055                     vfpfcnvrt@ll:
   875                           
   876                           ; 8 bytes @ 0x35
   877  0055                     	ds	8
   878  005D                     vfpfcnvrt@done:
   879                           
   880                           ; 2 bytes @ 0x3D
   881  005D                     	ds	2
   882  005F                     vfpfcnvrt@fp:
   883                           
   884                           ; 1 bytes @ 0x3F
   885  005F                     	ds	1
   886  0060                     ?_vfprintf:
   887  0060                     vfprintf@fmt:	
   888                           ; 2 bytes @ 0x40
   889                           
   890                           
   891                           ; 2 bytes @ 0x40
   892  0060                     	ds	2
   893  0062                     vfprintf@ap:
   894                           
   895                           ; 1 bytes @ 0x42
   896  0062                     	ds	1
   897  0063                     ??_vfprintf:
   898                           
   899                           ; 1 bytes @ 0x43
   900  0063                     	ds	2
   901  0065                     vfprintf@fp:
   902                           
   903                           ; 1 bytes @ 0x45
   904  0065                     	ds	1
   905  0066                     vfprintf@cfmt:
   906                           
   907                           ; 2 bytes @ 0x46
   908  0066                     	ds	2
   909  0068                     ?_sprintf:
   910  0068                     sprintf@fmt:	
   911                           ; 2 bytes @ 0x48
   912                           
   913                           
   914                           ; 2 bytes @ 0x48
   915  0068                     	ds	4
   916  006C                     ??_menu:
   917                           
   918                           ; 1 bytes @ 0x4C
   919  006C                     	ds	2
   920  006E                     ??_main:
   921                           
   922                           ; 1 bytes @ 0x4E
   923  006E                     	ds	2
   924                           
   925                           	psect	maintext
   926  05CA                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 238 in file "Control_paso.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;                  1    wreg      void 
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : B3F/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   946 ;;      Params:         0       0       0       0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0       0       0       0
   948 ;;      Temps:          0       2       0       0       0       0       0       0
   949 ;;      Totals:         0       2       0       0       0       0       0       0
   950 ;;Total ram usage:        2 bytes
   951 ;; Hardware stack levels required when called: 9
   952 ;; This function calls:
   953 ;;		_Lcd_Cmd
   954 ;;		_Lcd_Init
   955 ;;		_Lcd_Out
   956 ;;		_Lcd_Out2
   957 ;;		_PIN_MANAGER_Initialize
   958 ;;		_menu
   959 ;;		_sprintf
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function _main
   967  05CA                     _main:
   968  05CA                     l2119:	
   969                           ;incstack = 0
   970                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   971                           
   972                           
   973                           ;Control_paso.c: 240:     PIN_MANAGER_Initialize();
   974  05CA  318B  23BB  3185   	fcall	_PIN_MANAGER_Initialize
   975  05CD                     l2121:
   976                           
   977                           ;Control_paso.c: 242:     LATAbits.LATA1=0;
   978  05CD  0140               	movlb	0	; select bank0
   979  05CE  1098               	bcf	24,1	;volatile
   980                           
   981                           ;Control_paso.c: 245:     Lcd_Init();
   982  05CF  318D  2565  3185   	fcall	_Lcd_Init
   983                           
   984                           ;Control_paso.c: 246:     Lcd_Cmd(1);
   985  05D2  3001               	movlw	1
   986  05D3  318D  25F1  3185   	fcall	_Lcd_Cmd
   987                           
   988                           ;Control_paso.c: 247:     Lcd_Cmd(12);
   989  05D6  300C               	movlw	12
   990  05D7  318D  25F1  3185   	fcall	_Lcd_Cmd
   991  05DA                     l2123:
   992                           
   993                           ;Control_paso.c: 249:     _delay((unsigned long)((600)*(1000000/4000.0)));
   994  05DA  30C3               	movlw	195
   995  05DB  0140               	movlb	0	; select bank0
   996  05DC  00EE               	movwf	??_main
   997  05DD  30CD               	movlw	205
   998  05DE                     u2017:
   999  05DE  0B89               	decfsz	9,f
  1000  05DF  2DDE               	goto	u2017
  1001  05E0  0BEE               	decfsz	??_main,f
  1002  05E1  2DDE               	goto	u2017
  1003  05E2                     l2125:
  1004                           
  1005                           ;Control_paso.c: 250:       Lcd_Out(2,2,"BuenDia");
  1006  05E2  3002               	movlw	2
  1007  05E3  0140               	movlb	0	; select bank0
  1008  05E4  00EE               	movwf	??_main
  1009  05E5  086E               	movf	??_main,w
  1010  05E6  00F3               	movwf	Lcd_Out@x
  1011  05E7  306F               	movlw	low (STR_10| (0+32768))
  1012  05E8  00F4               	movwf	Lcd_Out@buffer
  1013  05E9  3088               	movlw	high (STR_10| (0+32768))
  1014  05EA  00F5               	movwf	Lcd_Out@buffer+1
  1015  05EB  3002               	movlw	2
  1016  05EC  318C  2472  3185   	fcall	_Lcd_Out
  1017  05EF                     l2127:
  1018                           
  1019                           ;Control_paso.c: 251:       _delay((unsigned long)((500)*(1000000/4000.0)));
  1020  05EF  30A3               	movlw	163
  1021  05F0  0140               	movlb	0	; select bank0
  1022  05F1  00EE               	movwf	??_main
  1023  05F2  3055               	movlw	85
  1024  05F3                     u2027:
  1025  05F3  0B89               	decfsz	9,f
  1026  05F4  2DF3               	goto	u2027
  1027  05F5  0BEE               	decfsz	??_main,f
  1028  05F6  2DF3               	goto	u2027
  1029  05F7                     l2129:
  1030                           
  1031                           ;Control_paso.c: 255:       if(PORTBbits.RB5==0){
  1032  05F7  0140               	movlb	0	; select bank0
  1033  05F8  1A8D               	btfsc	13,5	;volatile
  1034  05F9  2DFB               	goto	u1891
  1035  05FA  2DFC               	goto	u1890
  1036  05FB                     u1891:
  1037  05FB  2E01               	goto	l2133
  1038  05FC                     u1890:
  1039  05FC                     l2131:
  1040                           
  1041                           ;Control_paso.c: 256:          contado++;
  1042  05FC  3001               	movlw	1
  1043  05FD  0141               	movlb	1	; select bank1
  1044  05FE  07B0               	addwf	_contado^(0+128),f
  1045  05FF  3000               	movlw	0
  1046  0600  3DB1               	addwfc	(_contado+1)^(0+128),f
  1047  0601                     l2133:
  1048                           
  1049                           ;Control_paso.c: 258:       sprintf(CONT, "NumPersonas %0d",contado);
  1050  0601  3012               	movlw	low (STR_11| (0+32768))
  1051  0602  0140               	movlb	0	; select bank0
  1052  0603  00E8               	movwf	sprintf@fmt
  1053  0604  3088               	movlw	high (STR_11| (0+32768))
  1054  0605  00E9               	movwf	sprintf@fmt+1
  1055  0606  0141               	movlb	1	; select bank1
  1056  0607  0831               	movf	(_contado+1)^(0+128),w
  1057  0608  0140               	movlb	0	; select bank0
  1058  0609  00EB               	movwf	?_sprintf+3
  1059  060A  0141               	movlb	1	; select bank1
  1060  060B  0830               	movf	_contado^(0+128),w
  1061  060C  0140               	movlb	0	; select bank0
  1062  060D  00EA               	movwf	?_sprintf+2
  1063  060E  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1064  060F  318B  23DC  3185   	fcall	_sprintf
  1065  0612                     l2135:
  1066                           
  1067                           ;Control_paso.c: 259:         Lcd_Out2(1,2,CONT);
  1068  0612  3002               	movlw	2
  1069  0613  0140               	movlb	0	; select bank0
  1070  0614  00EE               	movwf	??_main
  1071  0615  086E               	movf	??_main,w
  1072  0616  00F3               	movwf	Lcd_Out2@x
  1073  0617  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1074  0618  00EF               	movwf	??_main+1
  1075  0619  086F               	movf	??_main+1,w
  1076  061A  00F4               	movwf	Lcd_Out2@buffer
  1077  061B  3001               	movlw	1
  1078  061C  318C  2429  3185   	fcall	_Lcd_Out2
  1079  061F                     l2137:
  1080                           
  1081                           ;Control_paso.c: 260:         sprintf(CONT, "LIMITE %d",MAX);
  1082  061F  3055               	movlw	low (STR_12| (0+32768))
  1083  0620  0140               	movlb	0	; select bank0
  1084  0621  00E8               	movwf	sprintf@fmt
  1085  0622  3088               	movlw	high (STR_12| (0+32768))
  1086  0623  00E9               	movwf	sprintf@fmt+1
  1087  0624  0141               	movlb	1	; select bank1
  1088  0625  086A               	movf	_MAX^(0+128),w
  1089  0626  0140               	movlb	0	; select bank0
  1090  0627  00EE               	movwf	??_main
  1091  0628  01EF               	clrf	??_main+1
  1092  0629  086E               	movf	??_main,w
  1093  062A  00EA               	movwf	?_sprintf+2
  1094  062B  086F               	movf	??_main+1,w
  1095  062C  00EB               	movwf	?_sprintf+3
  1096  062D  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1097  062E  318B  23DC  3185   	fcall	_sprintf
  1098  0631                     l2139:
  1099                           
  1100                           ;Control_paso.c: 261:        Lcd_Out2(2,1,CONT);
  1101  0631  01F3               	clrf	Lcd_Out2@x
  1102  0632  0AF3               	incf	Lcd_Out2@x,f
  1103  0633  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1104  0634  0140               	movlb	0	; select bank0
  1105  0635  00EE               	movwf	??_main
  1106  0636  086E               	movf	??_main,w
  1107  0637  00F4               	movwf	Lcd_Out2@buffer
  1108  0638  3002               	movlw	2
  1109  0639  318C  2429  3185   	fcall	_Lcd_Out2
  1110                           
  1111                           ;Control_paso.c: 262:         _delay((unsigned long)((100)*(1000000/4000.0)));
  1112  063C  3021               	movlw	33
  1113  063D  0140               	movlb	0	; select bank0
  1114  063E  00EE               	movwf	??_main
  1115  063F  3076               	movlw	118
  1116  0640                     u2037:
  1117  0640  0B89               	decfsz	9,f
  1118  0641  2E40               	goto	u2037
  1119  0642  0BEE               	decfsz	??_main,f
  1120  0643  2E40               	goto	u2037
  1121  0644  0000               	nop
  1122  0645                     l2141:
  1123                           
  1124                           ;Control_paso.c: 267:      if(PORTBbits.RB7==0){
  1125  0645  0140               	movlb	0	; select bank0
  1126  0646  1B8D               	btfsc	13,7	;volatile
  1127  0647  2E49               	goto	u1901
  1128  0648  2E4A               	goto	u1900
  1129  0649                     u1901:
  1130  0649  2E4F               	goto	l2145
  1131  064A                     u1900:
  1132  064A                     l2143:
  1133                           
  1134                           ;Control_paso.c: 268:          contado--;
  1135  064A  30FF               	movlw	255
  1136  064B  0141               	movlb	1	; select bank1
  1137  064C  07B0               	addwf	_contado^(0+128),f
  1138  064D  30FF               	movlw	255
  1139  064E  3DB1               	addwfc	(_contado+1)^(0+128),f
  1140  064F                     l2145:
  1141                           
  1142                           ;Control_paso.c: 270:       sprintf(CONT, "NumPersonas %0d",contado);
  1143  064F  3012               	movlw	low (STR_11| (0+32768))
  1144  0650  0140               	movlb	0	; select bank0
  1145  0651  00E8               	movwf	sprintf@fmt
  1146  0652  3088               	movlw	high (STR_11| (0+32768))
  1147  0653  00E9               	movwf	sprintf@fmt+1
  1148  0654  0141               	movlb	1	; select bank1
  1149  0655  0831               	movf	(_contado+1)^(0+128),w
  1150  0656  0140               	movlb	0	; select bank0
  1151  0657  00EB               	movwf	?_sprintf+3
  1152  0658  0141               	movlb	1	; select bank1
  1153  0659  0830               	movf	_contado^(0+128),w
  1154  065A  0140               	movlb	0	; select bank0
  1155  065B  00EA               	movwf	?_sprintf+2
  1156  065C  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1157  065D  318B  23DC  3185   	fcall	_sprintf
  1158  0660                     l2147:
  1159                           
  1160                           ;Control_paso.c: 271:         Lcd_Out2(1,2,CONT);
  1161  0660  3002               	movlw	2
  1162  0661  0140               	movlb	0	; select bank0
  1163  0662  00EE               	movwf	??_main
  1164  0663  086E               	movf	??_main,w
  1165  0664  00F3               	movwf	Lcd_Out2@x
  1166  0665  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1167  0666  00EF               	movwf	??_main+1
  1168  0667  086F               	movf	??_main+1,w
  1169  0668  00F4               	movwf	Lcd_Out2@buffer
  1170  0669  3001               	movlw	1
  1171  066A  318C  2429  3185   	fcall	_Lcd_Out2
  1172  066D                     l2149:
  1173                           
  1174                           ;Control_paso.c: 272:         sprintf(CONT, "LIMITE %d",MAX);
  1175  066D  3055               	movlw	low (STR_12| (0+32768))
  1176  066E  0140               	movlb	0	; select bank0
  1177  066F  00E8               	movwf	sprintf@fmt
  1178  0670  3088               	movlw	high (STR_12| (0+32768))
  1179  0671  00E9               	movwf	sprintf@fmt+1
  1180  0672  0141               	movlb	1	; select bank1
  1181  0673  086A               	movf	_MAX^(0+128),w
  1182  0674  0140               	movlb	0	; select bank0
  1183  0675  00EE               	movwf	??_main
  1184  0676  01EF               	clrf	??_main+1
  1185  0677  086E               	movf	??_main,w
  1186  0678  00EA               	movwf	?_sprintf+2
  1187  0679  086F               	movf	??_main+1,w
  1188  067A  00EB               	movwf	?_sprintf+3
  1189  067B  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1190  067C  318B  23DC  3185   	fcall	_sprintf
  1191  067F                     l2151:
  1192                           
  1193                           ;Control_paso.c: 273:        Lcd_Out2(2,1,CONT);
  1194  067F  01F3               	clrf	Lcd_Out2@x
  1195  0680  0AF3               	incf	Lcd_Out2@x,f
  1196  0681  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1197  0682  0140               	movlb	0	; select bank0
  1198  0683  00EE               	movwf	??_main
  1199  0684  086E               	movf	??_main,w
  1200  0685  00F4               	movwf	Lcd_Out2@buffer
  1201  0686  3002               	movlw	2
  1202  0687  318C  2429  3185   	fcall	_Lcd_Out2
  1203                           
  1204                           ;Control_paso.c: 274:         _delay((unsigned long)((100)*(1000000/4000.0)));
  1205  068A  3021               	movlw	33
  1206  068B  0140               	movlb	0	; select bank0
  1207  068C  00EE               	movwf	??_main
  1208  068D  3076               	movlw	118
  1209  068E                     u2047:
  1210  068E  0B89               	decfsz	9,f
  1211  068F  2E8E               	goto	u2047
  1212  0690  0BEE               	decfsz	??_main,f
  1213  0691  2E8E               	goto	u2047
  1214  0692  0000               	nop
  1215  0693                     l2153:
  1216                           
  1217                           ;Control_paso.c: 278:         if(PORTCbits.RC2==0){
  1218  0693  0140               	movlb	0	; select bank0
  1219  0694  190E               	btfsc	14,2	;volatile
  1220  0695  2E97               	goto	u1911
  1221  0696  2E98               	goto	u1910
  1222  0697                     u1911:
  1223  0697  2EF6               	goto	l2175
  1224  0698                     u1910:
  1225  0698                     l2155:
  1226                           
  1227                           ;Control_paso.c: 279:             _delay((unsigned long)((500)*(1000000/4000.0)));
  1228  0698  30A3               	movlw	163
  1229  0699  0140               	movlb	0	; select bank0
  1230  069A  00EE               	movwf	??_main
  1231  069B  3055               	movlw	85
  1232  069C                     u2057:
  1233  069C  0B89               	decfsz	9,f
  1234  069D  2E9C               	goto	u2057
  1235  069E  0BEE               	decfsz	??_main,f
  1236  069F  2E9C               	goto	u2057
  1237  06A0                     l2157:
  1238                           
  1239                           ;Control_paso.c: 280:             if(PORTCbits.RC2!=0){
  1240  06A0  0140               	movlb	0	; select bank0
  1241  06A1  1D0E               	btfss	14,2	;volatile
  1242  06A2  2EA4               	goto	u1921
  1243  06A3  2EA5               	goto	u1920
  1244  06A4                     u1921:
  1245  06A4  2EF6               	goto	l2175
  1246  06A5                     u1920:
  1247  06A5                     l2159:
  1248                           
  1249                           ;Control_paso.c: 281:                 sprintf(CONT,"CONTAR",contado);
  1250  06A5  3077               	movlw	low (STR_15| (0+32768))
  1251  06A6  00E8               	movwf	sprintf@fmt
  1252  06A7  3088               	movlw	high (STR_15| (0+32768))
  1253  06A8  00E9               	movwf	sprintf@fmt+1
  1254  06A9  0141               	movlb	1	; select bank1
  1255  06AA  0831               	movf	(_contado+1)^(0+128),w
  1256  06AB  0140               	movlb	0	; select bank0
  1257  06AC  00EB               	movwf	?_sprintf+3
  1258  06AD  0141               	movlb	1	; select bank1
  1259  06AE  0830               	movf	_contado^(0+128),w
  1260  06AF  0140               	movlb	0	; select bank0
  1261  06B0  00EA               	movwf	?_sprintf+2
  1262  06B1  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1263  06B2  318B  23DC  3185   	fcall	_sprintf
  1264                           
  1265                           ;Control_paso.c: 282:                 Lcd_Out2(1,0,CONT);
  1266  06B5  01F3               	clrf	Lcd_Out2@x
  1267  06B6  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1268  06B7  0140               	movlb	0	; select bank0
  1269  06B8  00EE               	movwf	??_main
  1270  06B9  086E               	movf	??_main,w
  1271  06BA  00F4               	movwf	Lcd_Out2@buffer
  1272  06BB  3001               	movlw	1
  1273  06BC  318C  2429  3185   	fcall	_Lcd_Out2
  1274  06BF  2EF6               	goto	l2175
  1275  06C0                     l2161:
  1276                           
  1277                           ;Control_paso.c: 287:         selec++;
  1278  06C0  3001               	movlw	1
  1279  06C1  0141               	movlb	1	; select bank1
  1280  06C2  07A0               	addwf	_selec^(0+128),f
  1281  06C3  3000               	movlw	0
  1282  06C4  1803               	skipnc
  1283  06C5  3001               	movlw	1
  1284  06C6  07A1               	addwf	(_selec+1)^(0+128),f
  1285  06C7  3000               	movlw	0
  1286  06C8  1803               	skipnc
  1287  06C9  3001               	movlw	1
  1288  06CA  07A2               	addwf	(_selec+2)^(0+128),f
  1289  06CB                     l2163:
  1290                           
  1291                           ;Control_paso.c: 288:         if(selec==3000){
  1292  06CB  30B8               	movlw	184
  1293  06CC  0620               	xorwf	_selec^(0+128),w
  1294  06CD  300B               	movlw	11
  1295  06CE  1903               	skipnz
  1296  06CF  0621               	xorwf	(_selec+1)^(0+128),w
  1297  06D0  0422               	iorwf	(_selec+2)^(0+128),w
  1298  06D1  1D03               	btfss	3,2
  1299  06D2  2ED4               	goto	u1931
  1300  06D3  2ED5               	goto	u1930
  1301  06D4                     u1931:
  1302  06D4  2EF6               	goto	l2175
  1303  06D5                     u1930:
  1304  06D5                     l2165:
  1305                           
  1306                           ;Control_paso.c: 289:             selec=0;
  1307  06D5  3000               	movlw	0
  1308  06D6  0141               	movlb	1	; select bank1
  1309  06D7  00A0               	movwf	_selec^(0+128)
  1310  06D8  3000               	movlw	0
  1311  06D9  00A1               	movwf	(_selec+1)^(0+128)
  1312  06DA  3000               	movlw	0
  1313  06DB  00A2               	movwf	(_selec+2)^(0+128)
  1314  06DC                     l2167:
  1315                           
  1316                           ;Control_paso.c: 290:             Lcd_Cmd(1);
  1317  06DC  3001               	movlw	1
  1318  06DD  318D  25F1  3185   	fcall	_Lcd_Cmd
  1319  06E0                     l2169:
  1320                           
  1321                           ;Control_paso.c: 291:             sprintf(CONT,"AJUSTAR");
  1322  06E0  3067               	movlw	low (STR_16| (0+32768))
  1323  06E1  0140               	movlb	0	; select bank0
  1324  06E2  00E8               	movwf	sprintf@fmt
  1325  06E3  3088               	movlw	high (STR_16| (0+32768))
  1326  06E4  00E9               	movwf	sprintf@fmt+1
  1327  06E5  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1328  06E6  318B  23DC  3185   	fcall	_sprintf
  1329  06E9                     l2171:
  1330                           
  1331                           ;Control_paso.c: 292:             Lcd_Out2(1, 0, CONT);
  1332  06E9  01F3               	clrf	Lcd_Out2@x
  1333  06EA  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1334  06EB  0140               	movlb	0	; select bank0
  1335  06EC  00EE               	movwf	??_main
  1336  06ED  086E               	movf	??_main,w
  1337  06EE  00F4               	movwf	Lcd_Out2@buffer
  1338  06EF  3001               	movlw	1
  1339  06F0  318C  2429  3185   	fcall	_Lcd_Out2
  1340  06F3                     l2173:
  1341                           
  1342                           ;Control_paso.c: 293:             menu();
  1343  06F3  3183  23E3  3185   	fcall	_menu
  1344  06F6                     l2175:
  1345                           
  1346                           ;Control_paso.c: 286:     while(PORTCbits.RC2==0){
  1347  06F6  0140               	movlb	0	; select bank0
  1348  06F7  1D0E               	btfss	14,2	;volatile
  1349  06F8  2EFA               	goto	u1941
  1350  06F9  2EFB               	goto	u1940
  1351  06FA                     u1941:
  1352  06FA  2EC0               	goto	l2161
  1353  06FB                     u1940:
  1354  06FB                     l2177:
  1355                           
  1356                           ;Control_paso.c: 297:     selec=0;
  1357  06FB  3000               	movlw	0
  1358  06FC  0141               	movlb	1	; select bank1
  1359  06FD  00A0               	movwf	_selec^(0+128)
  1360  06FE  3000               	movlw	0
  1361  06FF  00A1               	movwf	(_selec+1)^(0+128)
  1362  0700  3000               	movlw	0
  1363  0701  00A2               	movwf	(_selec+2)^(0+128)
  1364  0702                     l2179:
  1365                           
  1366                           ;Control_paso.c: 301:     if(PORTAbits.RA4==0){
  1367  0702  0140               	movlb	0	; select bank0
  1368  0703  1A0C               	btfsc	12,4	;volatile
  1369  0704  2F06               	goto	u1951
  1370  0705  2F07               	goto	u1950
  1371  0706                     u1951:
  1372  0706  2F0F               	goto	l2183
  1373  0707                     u1950:
  1374  0707                     l2181:
  1375                           
  1376                           ;Control_paso.c: 302:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1377  0707  3007               	movlw	7
  1378  0708  0140               	movlb	0	; select bank0
  1379  0709  00EE               	movwf	??_main
  1380  070A  307D               	movlw	125
  1381  070B                     u2067:
  1382  070B  0B89               	decfsz	9,f
  1383  070C  2F0B               	goto	u2067
  1384  070D  0BEE               	decfsz	??_main,f
  1385  070E  2F0B               	goto	u2067
  1386  070F                     l2183:
  1387                           
  1388                           ;Control_paso.c: 304:     if(PORTAbits.RA4==1){
  1389  070F  0140               	movlb	0	; select bank0
  1390  0710  1E0C               	btfss	12,4	;volatile
  1391  0711  2F13               	goto	u1961
  1392  0712  2F14               	goto	u1960
  1393  0713                     u1961:
  1394  0713  2F5C               	goto	l2195
  1395  0714                     u1960:
  1396  0714                     l2185:
  1397                           
  1398                           ;Control_paso.c: 305:         contado++;
  1399  0714  3001               	movlw	1
  1400  0715  0141               	movlb	1	; select bank1
  1401  0716  07B0               	addwf	_contado^(0+128),f
  1402  0717  3000               	movlw	0
  1403  0718  3DB1               	addwfc	(_contado+1)^(0+128),f
  1404  0719                     l2187:
  1405                           
  1406                           ;Control_paso.c: 306:          sprintf(CONT, "NumPersonas %0d",contado);
  1407  0719  3012               	movlw	low (STR_11| (0+32768))
  1408  071A  0140               	movlb	0	; select bank0
  1409  071B  00E8               	movwf	sprintf@fmt
  1410  071C  3088               	movlw	high (STR_11| (0+32768))
  1411  071D  00E9               	movwf	sprintf@fmt+1
  1412  071E  0141               	movlb	1	; select bank1
  1413  071F  0831               	movf	(_contado+1)^(0+128),w
  1414  0720  0140               	movlb	0	; select bank0
  1415  0721  00EB               	movwf	?_sprintf+3
  1416  0722  0141               	movlb	1	; select bank1
  1417  0723  0830               	movf	_contado^(0+128),w
  1418  0724  0140               	movlb	0	; select bank0
  1419  0725  00EA               	movwf	?_sprintf+2
  1420  0726  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1421  0727  318B  23DC  3185   	fcall	_sprintf
  1422  072A                     l2189:
  1423                           
  1424                           ;Control_paso.c: 307:         Lcd_Out2(1,2,CONT);
  1425  072A  3002               	movlw	2
  1426  072B  0140               	movlb	0	; select bank0
  1427  072C  00EE               	movwf	??_main
  1428  072D  086E               	movf	??_main,w
  1429  072E  00F3               	movwf	Lcd_Out2@x
  1430  072F  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1431  0730  00EF               	movwf	??_main+1
  1432  0731  086F               	movf	??_main+1,w
  1433  0732  00F4               	movwf	Lcd_Out2@buffer
  1434  0733  3001               	movlw	1
  1435  0734  318C  2429  3185   	fcall	_Lcd_Out2
  1436  0737                     l2191:
  1437                           
  1438                           ;Control_paso.c: 308:         sprintf(CONT, "LIMITE %0d",MAX);
  1439  0737  304A               	movlw	low (STR_18| (0+32768))
  1440  0738  0140               	movlb	0	; select bank0
  1441  0739  00E8               	movwf	sprintf@fmt
  1442  073A  3088               	movlw	high (STR_18| (0+32768))
  1443  073B  00E9               	movwf	sprintf@fmt+1
  1444  073C  0141               	movlb	1	; select bank1
  1445  073D  086A               	movf	_MAX^(0+128),w
  1446  073E  0140               	movlb	0	; select bank0
  1447  073F  00EE               	movwf	??_main
  1448  0740  01EF               	clrf	??_main+1
  1449  0741  086E               	movf	??_main,w
  1450  0742  00EA               	movwf	?_sprintf+2
  1451  0743  086F               	movf	??_main+1,w
  1452  0744  00EB               	movwf	?_sprintf+3
  1453  0745  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1454  0746  318B  23DC  3185   	fcall	_sprintf
  1455  0749                     l2193:
  1456                           
  1457                           ;Control_paso.c: 309:        Lcd_Out2(2,1,CONT);
  1458  0749  01F3               	clrf	Lcd_Out2@x
  1459  074A  0AF3               	incf	Lcd_Out2@x,f
  1460  074B  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1461  074C  0140               	movlb	0	; select bank0
  1462  074D  00EE               	movwf	??_main
  1463  074E  086E               	movf	??_main,w
  1464  074F  00F4               	movwf	Lcd_Out2@buffer
  1465  0750  3002               	movlw	2
  1466  0751  318C  2429  3185   	fcall	_Lcd_Out2
  1467                           
  1468                           ;Control_paso.c: 310:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1469  0754  30A3               	movlw	163
  1470  0755  0140               	movlb	0	; select bank0
  1471  0756  00EE               	movwf	??_main
  1472  0757  3055               	movlw	85
  1473  0758                     u2077:
  1474  0758  0B89               	decfsz	9,f
  1475  0759  2F58               	goto	u2077
  1476  075A  0BEE               	decfsz	??_main,f
  1477  075B  2F58               	goto	u2077
  1478  075C                     l2195:
  1479                           
  1480                           ;Control_paso.c: 313:     if(PORTAbits.RA5==1){
  1481  075C  0140               	movlb	0	; select bank0
  1482  075D  1E8C               	btfss	12,5	;volatile
  1483  075E  2F60               	goto	u1971
  1484  075F  2F61               	goto	u1970
  1485  0760                     u1971:
  1486  0760  2F66               	goto	l2199
  1487  0761                     u1970:
  1488  0761                     l2197:
  1489                           
  1490                           ;Control_paso.c: 314:         contado--;
  1491  0761  30FF               	movlw	255
  1492  0762  0141               	movlb	1	; select bank1
  1493  0763  07B0               	addwf	_contado^(0+128),f
  1494  0764  30FF               	movlw	255
  1495  0765  3DB1               	addwfc	(_contado+1)^(0+128),f
  1496  0766                     l2199:
  1497                           
  1498                           ;Control_paso.c: 316:     sprintf(CONT, "NumPersonas %0d",contado);
  1499  0766  3012               	movlw	low (STR_11| (0+32768))
  1500  0767  0140               	movlb	0	; select bank0
  1501  0768  00E8               	movwf	sprintf@fmt
  1502  0769  3088               	movlw	high (STR_11| (0+32768))
  1503  076A  00E9               	movwf	sprintf@fmt+1
  1504  076B  0141               	movlb	1	; select bank1
  1505  076C  0831               	movf	(_contado+1)^(0+128),w
  1506  076D  0140               	movlb	0	; select bank0
  1507  076E  00EB               	movwf	?_sprintf+3
  1508  076F  0141               	movlb	1	; select bank1
  1509  0770  0830               	movf	_contado^(0+128),w
  1510  0771  0140               	movlb	0	; select bank0
  1511  0772  00EA               	movwf	?_sprintf+2
  1512  0773  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1513  0774  318B  23DC  3185   	fcall	_sprintf
  1514  0777                     l2201:
  1515                           
  1516                           ;Control_paso.c: 317:         Lcd_Out2(1,2,CONT);
  1517  0777  3002               	movlw	2
  1518  0778  0140               	movlb	0	; select bank0
  1519  0779  00EE               	movwf	??_main
  1520  077A  086E               	movf	??_main,w
  1521  077B  00F3               	movwf	Lcd_Out2@x
  1522  077C  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1523  077D  00EF               	movwf	??_main+1
  1524  077E  086F               	movf	??_main+1,w
  1525  077F  00F4               	movwf	Lcd_Out2@buffer
  1526  0780  3001               	movlw	1
  1527  0781  318C  2429  3185   	fcall	_Lcd_Out2
  1528  0784                     l2203:
  1529                           
  1530                           ;Control_paso.c: 318:         sprintf(CONT, "LIMITE %0d",MAX);
  1531  0784  304A               	movlw	low (STR_18| (0+32768))
  1532  0785  0140               	movlb	0	; select bank0
  1533  0786  00E8               	movwf	sprintf@fmt
  1534  0787  3088               	movlw	high (STR_18| (0+32768))
  1535  0788  00E9               	movwf	sprintf@fmt+1
  1536  0789  0141               	movlb	1	; select bank1
  1537  078A  086A               	movf	_MAX^(0+128),w
  1538  078B  0140               	movlb	0	; select bank0
  1539  078C  00EE               	movwf	??_main
  1540  078D  01EF               	clrf	??_main+1
  1541  078E  086E               	movf	??_main,w
  1542  078F  00EA               	movwf	?_sprintf+2
  1543  0790  086F               	movf	??_main+1,w
  1544  0791  00EB               	movwf	?_sprintf+3
  1545  0792  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1546  0793  318B  23DC  3185   	fcall	_sprintf
  1547  0796                     l2205:
  1548                           
  1549                           ;Control_paso.c: 319:         Lcd_Out2(2,1,CONT);
  1550  0796  01F3               	clrf	Lcd_Out2@x
  1551  0797  0AF3               	incf	Lcd_Out2@x,f
  1552  0798  30B5               	movlw	(low (_CONT| 0))& (0+255)
  1553  0799  0140               	movlb	0	; select bank0
  1554  079A  00EE               	movwf	??_main
  1555  079B  086E               	movf	??_main,w
  1556  079C  00F4               	movwf	Lcd_Out2@buffer
  1557  079D  3002               	movlw	2
  1558  079E  318C  2429  3185   	fcall	_Lcd_Out2
  1559                           
  1560                           ;Control_paso.c: 320:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1561  07A1  30A3               	movlw	163
  1562  07A2  0140               	movlb	0	; select bank0
  1563  07A3  00EE               	movwf	??_main
  1564  07A4  3055               	movlw	85
  1565  07A5                     u2087:
  1566  07A5  0B89               	decfsz	9,f
  1567  07A6  2FA5               	goto	u2087
  1568  07A7  0BEE               	decfsz	??_main,f
  1569  07A8  2FA5               	goto	u2087
  1570                           
  1571                           ;Control_paso.c: 324:          if(contado> MAX){
  1572  07A9  0141               	movlb	1	; select bank1
  1573  07AA  0831               	movf	(_contado+1)^(0+128),w
  1574  07AB  3A80               	xorlw	128
  1575  07AC  3C80               	sublw	128
  1576  07AD  1D03               	skipz
  1577  07AE  2FB1               	goto	u1985
  1578  07AF  0830               	movf	_contado^(0+128),w
  1579  07B0  026A               	subwf	_MAX^(0+128),w
  1580  07B1                     u1985:
  1581  07B1  1803               	skipnc
  1582  07B2  2FB4               	goto	u1981
  1583  07B3  2FB5               	goto	u1980
  1584  07B4                     u1981:
  1585  07B4  2FB8               	goto	l172
  1586  07B5                     u1980:
  1587  07B5                     l2207:
  1588                           
  1589                           ;Control_paso.c: 325:      LATCbits.LATC0=1;}
  1590  07B5  0140               	movlb	0	; select bank0
  1591  07B6  141A               	bsf	26,0	;volatile
  1592  07B7  2FBA               	goto	l2209
  1593  07B8                     l172:	
  1594                           ;Control_paso.c: 326:         else{
  1595                           
  1596                           
  1597                           ;Control_paso.c: 327:              LATCbits.LATC0=0;
  1598  07B8  0140               	movlb	0	; select bank0
  1599  07B9  101A               	bcf	26,0	;volatile
  1600  07BA                     l2209:
  1601                           
  1602                           ;Control_paso.c: 329:         if(contado < MAX){
  1603  07BA  0141               	movlb	1	; select bank1
  1604  07BB  0831               	movf	(_contado+1)^(0+128),w
  1605  07BC  3A80               	xorlw	128
  1606  07BD  0140               	movlb	0	; select bank0
  1607  07BE  00EE               	movwf	??_main
  1608  07BF  3080               	movlw	128
  1609  07C0  026E               	subwf	??_main,w
  1610  07C1  1D03               	skipz
  1611  07C2  2FC6               	goto	u1995
  1612  07C3  0141               	movlb	1	; select bank1
  1613  07C4  086A               	movf	_MAX^(0+128),w
  1614  07C5  0230               	subwf	_contado^(0+128),w
  1615  07C6                     u1995:
  1616  07C6  1803               	skipnc
  1617  07C7  2FC9               	goto	u1991
  1618  07C8  2FCA               	goto	u1990
  1619  07C9                     u1991:
  1620  07C9  2FCD               	goto	l174
  1621  07CA                     u1990:
  1622  07CA                     l2211:
  1623                           
  1624                           ;Control_paso.c: 330:      LATAbits.LATA1=1;}
  1625  07CA  0140               	movlb	0	; select bank0
  1626  07CB  1498               	bsf	24,1	;volatile
  1627  07CC  2FCF               	goto	l2213
  1628  07CD                     l174:	
  1629                           ;Control_paso.c: 331:         else{
  1630                           
  1631                           
  1632                           ;Control_paso.c: 332:              LATAbits.LATA1=0;
  1633  07CD  0140               	movlb	0	; select bank0
  1634  07CE  1098               	bcf	24,1	;volatile
  1635  07CF                     l2213:
  1636                           
  1637                           ;Control_paso.c: 334:         if(contado== MAX){
  1638  07CF  0141               	movlb	1	; select bank1
  1639  07D0  086A               	movf	_MAX^(0+128),w
  1640  07D1  0140               	movlb	0	; select bank0
  1641  07D2  00EE               	movwf	??_main
  1642  07D3  01EF               	clrf	??_main+1
  1643  07D4  0141               	movlb	1	; select bank1
  1644  07D5  0831               	movf	(_contado+1)^(0+128),w
  1645  07D6  0140               	movlb	0	; select bank0
  1646  07D7  066F               	xorwf	??_main+1,w
  1647  07D8  1D03               	skipz
  1648  07D9  2FDE               	goto	u2005
  1649  07DA  0141               	movlb	1	; select bank1
  1650  07DB  0830               	movf	_contado^(0+128),w
  1651  07DC  0140               	movlb	0	; select bank0
  1652  07DD  066E               	xorwf	??_main,w
  1653  07DE                     u2005:
  1654  07DE  1D03               	skipz
  1655  07DF  2FE1               	goto	u2001
  1656  07E0  2FE2               	goto	u2000
  1657  07E1                     u2001:
  1658  07E1  2FE4               	goto	l176
  1659  07E2                     u2000:
  1660  07E2                     l2215:
  1661                           
  1662                           ;Control_paso.c: 335:      LATCbits.LATC1=1;}
  1663  07E2  149A               	bsf	26,1	;volatile
  1664  07E3  2DF7               	goto	l2129
  1665  07E4                     l176:	
  1666                           ;Control_paso.c: 336:         else{
  1667                           
  1668                           
  1669                           ;Control_paso.c: 337:         LATCbits.LATC1=0;
  1670  07E4  109A               	bcf	26,1	;volatile
  1671  07E5  2DF7               	goto	l2129
  1672  07E6  3180  2802         	ljmp	start
  1673  07E8                     __end_of_main:
  1674                           
  1675                           	psect	text1
  1676  03E3                     __ptext1:	
  1677 ;; *************** function _menu *****************
  1678 ;; Defined at:
  1679 ;;		line 116 in file "Control_paso.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  variable        3    7[BANK1 ] unsigned um
  1684 ;;  ok              2   11[BANK1 ] int 
  1685 ;;  operacion       1   10[BANK1 ] _Bool 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1695 ;;      Params:         0       0       0       0       0       0       0       0
  1696 ;;      Locals:         0       0       6       0       0       0       0       0
  1697 ;;      Temps:          0       2       0       0       0       0       0       0
  1698 ;;      Totals:         0       2       6       0       0       0       0       0
  1699 ;;Total ram usage:        8 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 8
  1702 ;; This function calls:
  1703 ;;		_Lcd_Cmd
  1704 ;;		_Lcd_Out2
  1705 ;;		_sprintf
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _menu
  1713  03E3                     _menu:
  1714  03E3                     l1999:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _menu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1717                           
  1718                           
  1719                           ;Control_paso.c: 118:   uint24_t variable = 0;
  1720  03E3  3000               	movlw	0
  1721  03E4  0141               	movlb	1	; select bank1
  1722  03E5  00E4               	movwf	menu@variable^(0+128)
  1723  03E6  3000               	movlw	0
  1724  03E7  00E5               	movwf	(menu@variable+1)^(0+128)
  1725  03E8  3000               	movlw	0
  1726  03E9  00E6               	movwf	(menu@variable+2)^(0+128)
  1727  03EA                     l2001:
  1728                           
  1729                           ;Control_paso.c: 119:   _Bool operacion = 0;
  1730  03EA  01E7               	clrf	menu@operacion^(0+128)
  1731  03EB                     l2003:
  1732                           
  1733                           ;Control_paso.c: 120:   int ok = 0;
  1734  03EB  01E8               	clrf	menu@ok^(0+128)
  1735  03EC  01E9               	clrf	(menu@ok+1)^(0+128)
  1736  03ED                     l2005:
  1737                           
  1738                           ;Control_paso.c: 124:     if (PORTCbits.RC2 == 0) {
  1739  03ED  0140               	movlb	0	; select bank0
  1740  03EE  190E               	btfsc	14,2	;volatile
  1741  03EF  2BF1               	goto	u1711
  1742  03F0  2BF2               	goto	u1710
  1743  03F1                     u1711:
  1744  03F1  2D90               	goto	l114
  1745  03F2                     u1710:
  1746  03F2                     l2007:
  1747                           
  1748                           ;Control_paso.c: 125:       _delay((unsigned long)((1000)*(1000000/4000.0)));
  1749  03F2  3002               	movlw	2
  1750  03F3  0140               	movlb	0	; select bank0
  1751  03F4  00ED               	movwf	??_menu+1
  1752  03F5  3045               	movlw	69
  1753  03F6  00EC               	movwf	??_menu
  1754  03F7  30A9               	movlw	169
  1755  03F8                     u2097:
  1756  03F8  0B89               	decfsz	9,f
  1757  03F9  2BF8               	goto	u2097
  1758  03FA  0BEC               	decfsz	??_menu,f
  1759  03FB  2BF8               	goto	u2097
  1760  03FC  0BED               	decfsz	??_menu+1,f
  1761  03FD  2BF8               	goto	u2097
  1762  03FE  3200               	nop2
  1763  03FF                     l2009:
  1764                           
  1765                           ;Control_paso.c: 126:       if (PORTCbits.RC2!= 0) {
  1766  03FF  0140               	movlb	0	; select bank0
  1767  0400  1D0E               	btfss	14,2	;volatile
  1768  0401  2C03               	goto	u1721
  1769  0402  2C04               	goto	u1720
  1770  0403                     u1721:
  1771  0403  2D90               	goto	l114
  1772  0404                     u1720:
  1773  0404                     l2011:
  1774                           
  1775                           ;Control_paso.c: 127:         operacion = !operacion;
  1776  0404  0141               	movlb	1	; select bank1
  1777  0405  0867               	movf	menu@operacion^(0+128),w
  1778  0406  1903               	btfsc	3,2
  1779  0407  2C09               	goto	u1731
  1780  0408  2C0B               	goto	u1730
  1781  0409                     u1731:
  1782  0409  3001               	movlw	1
  1783  040A  2C0C               	goto	u1740
  1784  040B                     u1730:
  1785  040B  3000               	movlw	0
  1786  040C                     u1740:
  1787  040C  0140               	movlb	0	; select bank0
  1788  040D  00EC               	movwf	??_menu
  1789  040E  086C               	movf	??_menu,w
  1790  040F  0141               	movlb	1	; select bank1
  1791  0410  00E7               	movwf	menu@operacion^(0+128)
  1792                           
  1793                           ;Control_paso.c: 129:         if (operacion) {
  1794  0411  0867               	movf	menu@operacion^(0+128),w
  1795  0412  1903               	btfsc	3,2
  1796  0413  2C15               	goto	u1751
  1797  0414  2C16               	goto	u1750
  1798  0415                     u1751:
  1799  0415  2C41               	goto	l2023
  1800  0416                     u1750:
  1801  0416                     l2013:
  1802                           
  1803                           ;Control_paso.c: 130:           Lcd_Cmd(1);
  1804  0416  3001               	movlw	1
  1805  0417  318D  25F1  3183   	fcall	_Lcd_Cmd
  1806  041A                     l2015:
  1807                           
  1808                           ;Control_paso.c: 131:           sprintf(s, "AJUSTE ");
  1809  041A  305F               	movlw	low (STR_1| (0+32768))
  1810  041B  0140               	movlb	0	; select bank0
  1811  041C  00E8               	movwf	sprintf@fmt
  1812  041D  3088               	movlw	high (STR_1| (0+32768))
  1813  041E  00E9               	movwf	sprintf@fmt+1
  1814  041F  30C9               	movlw	(low (_s| 0))& (0+255)
  1815  0420  318B  23DC  3183   	fcall	_sprintf
  1816  0423                     l2017:
  1817                           
  1818                           ;Control_paso.c: 132:           Lcd_Out2(1, 0, s);
  1819  0423  01F3               	clrf	Lcd_Out2@x
  1820  0424  30C9               	movlw	(low (_s| 0))& (0+255)
  1821  0425  0140               	movlb	0	; select bank0
  1822  0426  00EC               	movwf	??_menu
  1823  0427  086C               	movf	??_menu,w
  1824  0428  00F4               	movwf	Lcd_Out2@buffer
  1825  0429  3001               	movlw	1
  1826  042A  318C  2429  3183   	fcall	_Lcd_Out2
  1827  042D                     l2019:
  1828                           
  1829                           ;Control_paso.c: 133:           sprintf(s, "LIMITE PERSONAS");
  1830  042D  3002               	movlw	low (STR_2| (0+32768))
  1831  042E  0140               	movlb	0	; select bank0
  1832  042F  00E8               	movwf	sprintf@fmt
  1833  0430  3088               	movlw	high (STR_2| (0+32768))
  1834  0431  00E9               	movwf	sprintf@fmt+1
  1835  0432  30C9               	movlw	(low (_s| 0))& (0+255)
  1836  0433  318B  23DC  3183   	fcall	_sprintf
  1837  0436                     l2021:
  1838                           
  1839                           ;Control_paso.c: 134:           Lcd_Out2(2, 0, s);
  1840  0436  01F3               	clrf	Lcd_Out2@x
  1841  0437  30C9               	movlw	(low (_s| 0))& (0+255)
  1842  0438  0140               	movlb	0	; select bank0
  1843  0439  00EC               	movwf	??_menu
  1844  043A  086C               	movf	??_menu,w
  1845  043B  00F4               	movwf	Lcd_Out2@buffer
  1846  043C  3002               	movlw	2
  1847  043D  318C  2429  3183   	fcall	_Lcd_Out2
  1848                           
  1849                           ;Control_paso.c: 135:         }
  1850  0440  2D90               	goto	l114
  1851  0441                     l2023:
  1852                           
  1853                           ;Control_paso.c: 137:           _delay((unsigned long)((500)*(1000000/4000.0)));
  1854  0441  30A3               	movlw	163
  1855  0442  0140               	movlb	0	; select bank0
  1856  0443  00EC               	movwf	??_menu
  1857  0444  3055               	movlw	85
  1858  0445                     u2107:
  1859  0445  0B89               	decfsz	9,f
  1860  0446  2C45               	goto	u2107
  1861  0447  0BEC               	decfsz	??_menu,f
  1862  0448  2C45               	goto	u2107
  1863  0449  2D90               	goto	l114
  1864  044A                     l2025:
  1865                           
  1866                           ;Control_paso.c: 144:       variable++;
  1867  044A  3001               	movlw	1
  1868  044B  0141               	movlb	1	; select bank1
  1869  044C  07E4               	addwf	menu@variable^(0+128),f
  1870  044D  3000               	movlw	0
  1871  044E  1803               	skipnc
  1872  044F  3001               	movlw	1
  1873  0450  07E5               	addwf	(menu@variable+1)^(0+128),f
  1874  0451  3000               	movlw	0
  1875  0452  1803               	skipnc
  1876  0453  3001               	movlw	1
  1877  0454  07E6               	addwf	(menu@variable+2)^(0+128),f
  1878  0455                     l2027:
  1879                           
  1880                           ;Control_paso.c: 145:       if (variable == 34723) {
  1881  0455  30A3               	movlw	163
  1882  0456  0664               	xorwf	menu@variable^(0+128),w
  1883  0457  3087               	movlw	135
  1884  0458  1903               	skipnz
  1885  0459  0665               	xorwf	(menu@variable+1)^(0+128),w
  1886  045A  0466               	iorwf	(menu@variable+2)^(0+128),w
  1887  045B  1D03               	btfss	3,2
  1888  045C  2C5E               	goto	u1761
  1889  045D  2C5F               	goto	u1760
  1890  045E                     u1761:
  1891  045E  2D83               	goto	l2099
  1892  045F                     u1760:
  1893  045F                     l2029:
  1894                           
  1895                           ;Control_paso.c: 146:         variable = 0;
  1896  045F  3000               	movlw	0
  1897  0460  0141               	movlb	1	; select bank1
  1898  0461  00E4               	movwf	menu@variable^(0+128)
  1899  0462  3000               	movlw	0
  1900  0463  00E5               	movwf	(menu@variable+1)^(0+128)
  1901  0464  3000               	movlw	0
  1902  0465  00E6               	movwf	(menu@variable+2)^(0+128)
  1903  0466                     l2031:
  1904                           
  1905                           ;Control_paso.c: 147:         Lcd_Cmd(1);
  1906  0466  3001               	movlw	1
  1907  0467  318D  25F1  3183   	fcall	_Lcd_Cmd
  1908  046A                     l2033:
  1909                           
  1910                           ;Control_paso.c: 148:         sprintf(s, "ELIJA");
  1911  046A  307E               	movlw	low (STR_3| (0+32768))
  1912  046B  0140               	movlb	0	; select bank0
  1913  046C  00E8               	movwf	sprintf@fmt
  1914  046D  3088               	movlw	high (STR_3| (0+32768))
  1915  046E  00E9               	movwf	sprintf@fmt+1
  1916  046F  30C9               	movlw	(low (_s| 0))& (0+255)
  1917  0470  318B  23DC  3183   	fcall	_sprintf
  1918  0473                     l2035:
  1919                           
  1920                           ;Control_paso.c: 149:         Lcd_Out2(1, 0, s);
  1921  0473  01F3               	clrf	Lcd_Out2@x
  1922  0474  30C9               	movlw	(low (_s| 0))& (0+255)
  1923  0475  0140               	movlb	0	; select bank0
  1924  0476  00EC               	movwf	??_menu
  1925  0477  086C               	movf	??_menu,w
  1926  0478  00F4               	movwf	Lcd_Out2@buffer
  1927  0479  3001               	movlw	1
  1928  047A  318C  2429  3183   	fcall	_Lcd_Out2
  1929  047D                     l2037:
  1930                           
  1931                           ;Control_paso.c: 150:         sprintf(s, "LIMITE PERSONAS");
  1932  047D  3002               	movlw	low (STR_2| (0+32768))
  1933  047E  0140               	movlb	0	; select bank0
  1934  047F  00E8               	movwf	sprintf@fmt
  1935  0480  3088               	movlw	high (STR_2| (0+32768))
  1936  0481  00E9               	movwf	sprintf@fmt+1
  1937  0482  30C9               	movlw	(low (_s| 0))& (0+255)
  1938  0483  318B  23DC  3183   	fcall	_sprintf
  1939  0486                     l2039:
  1940                           
  1941                           ;Control_paso.c: 151:         Lcd_Out2(2, 0, s);
  1942  0486  01F3               	clrf	Lcd_Out2@x
  1943  0487  30C9               	movlw	(low (_s| 0))& (0+255)
  1944  0488  0140               	movlb	0	; select bank0
  1945  0489  00EC               	movwf	??_menu
  1946  048A  086C               	movf	??_menu,w
  1947  048B  00F4               	movwf	Lcd_Out2@buffer
  1948  048C  3002               	movlw	2
  1949  048D  318C  2429  3183   	fcall	_Lcd_Out2
  1950  0490                     l2041:
  1951                           
  1952                           ;Control_paso.c: 152:        _delay((unsigned long)((2000)*(1000000/4000.0)));
  1953  0490  3003               	movlw	3
  1954  0491  0140               	movlb	0	; select bank0
  1955  0492  00ED               	movwf	??_menu+1
  1956  0493  308A               	movlw	138
  1957  0494  00EC               	movwf	??_menu
  1958  0495  3055               	movlw	85
  1959  0496                     u2117:
  1960  0496  0B89               	decfsz	9,f
  1961  0497  2C96               	goto	u2117
  1962  0498  0BEC               	decfsz	??_menu,f
  1963  0499  2C96               	goto	u2117
  1964  049A  0BED               	decfsz	??_menu+1,f
  1965  049B  2C96               	goto	u2117
  1966  049C  3200               	nop2
  1967  049D                     l2043:
  1968                           
  1969                           ;Control_paso.c: 156:           if (PORTCbits.RC2 == 0) {
  1970  049D  0140               	movlb	0	; select bank0
  1971  049E  190E               	btfsc	14,2	;volatile
  1972  049F  2CA1               	goto	u1771
  1973  04A0  2CA2               	goto	u1770
  1974  04A1                     u1771:
  1975  04A1  2D6D               	goto	l127
  1976  04A2                     u1770:
  1977  04A2                     l2045:
  1978                           
  1979                           ;Control_paso.c: 157:             _delay((unsigned long)((1000)*(1000000/4000.0)));
  1980  04A2  3002               	movlw	2
  1981  04A3  0140               	movlb	0	; select bank0
  1982  04A4  00ED               	movwf	??_menu+1
  1983  04A5  3045               	movlw	69
  1984  04A6  00EC               	movwf	??_menu
  1985  04A7  30A9               	movlw	169
  1986  04A8                     u2127:
  1987  04A8  0B89               	decfsz	9,f
  1988  04A9  2CA8               	goto	u2127
  1989  04AA  0BEC               	decfsz	??_menu,f
  1990  04AB  2CA8               	goto	u2127
  1991  04AC  0BED               	decfsz	??_menu+1,f
  1992  04AD  2CA8               	goto	u2127
  1993  04AE  3200               	nop2
  1994  04AF                     l2047:
  1995                           
  1996                           ;Control_paso.c: 158:             if (PORTCbits.RC2 != 0) {
  1997  04AF  0140               	movlb	0	; select bank0
  1998  04B0  1D0E               	btfss	14,2	;volatile
  1999  04B1  2CB3               	goto	u1781
  2000  04B2  2CB4               	goto	u1780
  2001  04B3                     u1781:
  2002  04B3  2D6D               	goto	l127
  2003  04B4                     u1780:
  2004  04B4                     l2049:
  2005                           
  2006                           ;Control_paso.c: 159:               if (operacion == 1) {
  2007  04B4  0141               	movlb	1	; select bank1
  2008  04B5  0367               	decf	menu@operacion^(0+128),w
  2009  04B6  1D03               	btfss	3,2
  2010  04B7  2CB9               	goto	u1791
  2011  04B8  2CBA               	goto	u1790
  2012  04B9                     u1791:
  2013  04B9  2D01               	goto	l2067
  2014  04BA                     u1790:
  2015  04BA                     l2051:
  2016                           
  2017                           ;Control_paso.c: 160:                   if(MAX==255){
  2018  04BA  0A6A               	incf	_MAX^(0+128),w
  2019  04BB  1D03               	btfss	3,2
  2020  04BC  2CBE               	goto	u1801
  2021  04BD  2CBF               	goto	u1800
  2022  04BE                     u1801:
  2023  04BE  2CC6               	goto	l2055
  2024  04BF                     u1800:
  2025  04BF                     l2053:
  2026                           
  2027                           ;Control_paso.c: 161:                       MAX=255;
  2028  04BF  30FF               	movlw	255
  2029  04C0  0140               	movlb	0	; select bank0
  2030  04C1  00EC               	movwf	??_menu
  2031  04C2  086C               	movf	??_menu,w
  2032  04C3  0141               	movlb	1	; select bank1
  2033  04C4  00EA               	movwf	_MAX^(0+128)
  2034                           
  2035                           ;Control_paso.c: 162:                   }
  2036  04C5  2CCD               	goto	l2057
  2037  04C6                     l2055:
  2038                           
  2039                           ;Control_paso.c: 164:                       MAX=MAX+10;
  2040  04C6  086A               	movf	_MAX^(0+128),w
  2041  04C7  3E0A               	addlw	10
  2042  04C8  0140               	movlb	0	; select bank0
  2043  04C9  00EC               	movwf	??_menu
  2044  04CA  086C               	movf	??_menu,w
  2045  04CB  0141               	movlb	1	; select bank1
  2046  04CC  00EA               	movwf	_MAX^(0+128)
  2047  04CD                     l2057:
  2048                           
  2049                           ;Control_paso.c: 167:                 Lcd_Cmd(1);
  2050  04CD  3001               	movlw	1
  2051  04CE  318D  25F1  3183   	fcall	_Lcd_Cmd
  2052  04D1                     l2059:
  2053                           
  2054                           ;Control_paso.c: 168:                 sprintf(s, "Configuracion");
  2055  04D1  3031               	movlw	low (STR_5| (0+32768))
  2056  04D2  0140               	movlb	0	; select bank0
  2057  04D3  00E8               	movwf	sprintf@fmt
  2058  04D4  3088               	movlw	high (STR_5| (0+32768))
  2059  04D5  00E9               	movwf	sprintf@fmt+1
  2060  04D6  30C9               	movlw	(low (_s| 0))& (0+255)
  2061  04D7  318B  23DC  3183   	fcall	_sprintf
  2062  04DA                     l2061:
  2063                           
  2064                           ;Control_paso.c: 169:                 Lcd_Out2(1, 0, s);
  2065  04DA  01F3               	clrf	Lcd_Out2@x
  2066  04DB  30C9               	movlw	(low (_s| 0))& (0+255)
  2067  04DC  0140               	movlb	0	; select bank0
  2068  04DD  00EC               	movwf	??_menu
  2069  04DE  086C               	movf	??_menu,w
  2070  04DF  00F4               	movwf	Lcd_Out2@buffer
  2071  04E0  3001               	movlw	1
  2072  04E1  318C  2429  3183   	fcall	_Lcd_Out2
  2073  04E4                     l2063:
  2074                           
  2075                           ;Control_paso.c: 170:                 sprintf(s, "Maximo: %d", MAX);
  2076  04E4  303F               	movlw	low (STR_6| (0+32768))
  2077  04E5  0140               	movlb	0	; select bank0
  2078  04E6  00E8               	movwf	sprintf@fmt
  2079  04E7  3088               	movlw	high (STR_6| (0+32768))
  2080  04E8  00E9               	movwf	sprintf@fmt+1
  2081  04E9  0141               	movlb	1	; select bank1
  2082  04EA  086A               	movf	_MAX^(0+128),w
  2083  04EB  0140               	movlb	0	; select bank0
  2084  04EC  00EC               	movwf	??_menu
  2085  04ED  01ED               	clrf	??_menu+1
  2086  04EE  086C               	movf	??_menu,w
  2087  04EF  00EA               	movwf	?_sprintf+2
  2088  04F0  086D               	movf	??_menu+1,w
  2089  04F1  00EB               	movwf	?_sprintf+3
  2090  04F2  30C9               	movlw	(low (_s| 0))& (0+255)
  2091  04F3  318B  23DC  3183   	fcall	_sprintf
  2092  04F6                     l2065:
  2093                           
  2094                           ;Control_paso.c: 171:                 Lcd_Out2(2, 0, s);
  2095  04F6  01F3               	clrf	Lcd_Out2@x
  2096  04F7  30C9               	movlw	(low (_s| 0))& (0+255)
  2097  04F8  0140               	movlb	0	; select bank0
  2098  04F9  00EC               	movwf	??_menu
  2099  04FA  086C               	movf	??_menu,w
  2100  04FB  00F4               	movwf	Lcd_Out2@buffer
  2101  04FC  3002               	movlw	2
  2102  04FD  318C  2429  3183   	fcall	_Lcd_Out2
  2103                           
  2104                           ;Control_paso.c: 173:               } else {
  2105  0500  2D6D               	goto	l127
  2106  0501                     l2067:
  2107                           
  2108                           ;Control_paso.c: 174:                 if (MAX == 0) {
  2109  0501  086A               	movf	_MAX^(0+128),w
  2110  0502  1D03               	btfss	3,2
  2111  0503  2D05               	goto	u1811
  2112  0504  2D06               	goto	u1810
  2113  0505                     u1811:
  2114  0505  2D08               	goto	l2071
  2115  0506                     u1810:
  2116  0506                     l2069:
  2117                           
  2118                           ;Control_paso.c: 175:                   MAX = 0;
  2119  0506  01EA               	clrf	_MAX^(0+128)
  2120                           
  2121                           ;Control_paso.c: 176:                 } else {
  2122  0507  2D0F               	goto	l125
  2123  0508                     l2071:
  2124                           
  2125                           ;Control_paso.c: 177:                   MAX = MAX - 10;
  2126  0508  086A               	movf	_MAX^(0+128),w
  2127  0509  3EF6               	addlw	246
  2128  050A  0140               	movlb	0	; select bank0
  2129  050B  00EC               	movwf	??_menu
  2130  050C  086C               	movf	??_menu,w
  2131  050D  0141               	movlb	1	; select bank1
  2132  050E  00EA               	movwf	_MAX^(0+128)
  2133  050F                     l125:	
  2134                           ;Control_paso.c: 179:                 }
  2135                           
  2136                           
  2137                           ;Control_paso.c: 180:                 if(MAX==0){
  2138  050F  086A               	movf	_MAX^(0+128),w
  2139  0510  1D03               	btfss	3,2
  2140  0511  2D13               	goto	u1821
  2141  0512  2D14               	goto	u1820
  2142  0513                     u1821:
  2143  0513  2D1A               	goto	l2075
  2144  0514                     u1820:
  2145  0514                     l2073:
  2146                           
  2147                           ;Control_paso.c: 181:                     MAX=50;
  2148  0514  3032               	movlw	50
  2149  0515  0140               	movlb	0	; select bank0
  2150  0516  00EC               	movwf	??_menu
  2151  0517  086C               	movf	??_menu,w
  2152  0518  0141               	movlb	1	; select bank1
  2153  0519  00EA               	movwf	_MAX^(0+128)
  2154  051A                     l2075:
  2155                           
  2156                           ;Control_paso.c: 183:                 Lcd_Cmd(1);
  2157  051A  3001               	movlw	1
  2158  051B  318D  25F1  3183   	fcall	_Lcd_Cmd
  2159  051E                     l2077:
  2160                           
  2161                           ;Control_paso.c: 184:                  sprintf(s, "Configuracion");
  2162  051E  3031               	movlw	low (STR_5| (0+32768))
  2163  051F  0140               	movlb	0	; select bank0
  2164  0520  00E8               	movwf	sprintf@fmt
  2165  0521  3088               	movlw	high (STR_5| (0+32768))
  2166  0522  00E9               	movwf	sprintf@fmt+1
  2167  0523  30C9               	movlw	(low (_s| 0))& (0+255)
  2168  0524  318B  23DC  3183   	fcall	_sprintf
  2169  0527                     l2079:
  2170                           
  2171                           ;Control_paso.c: 185:                 Lcd_Out2(1, 0, s);
  2172  0527  01F3               	clrf	Lcd_Out2@x
  2173  0528  30C9               	movlw	(low (_s| 0))& (0+255)
  2174  0529  0140               	movlb	0	; select bank0
  2175  052A  00EC               	movwf	??_menu
  2176  052B  086C               	movf	??_menu,w
  2177  052C  00F4               	movwf	Lcd_Out2@buffer
  2178  052D  3001               	movlw	1
  2179  052E  318C  2429  3183   	fcall	_Lcd_Out2
  2180  0531                     l2081:
  2181                           
  2182                           ;Control_paso.c: 186:                 sprintf(s, "Maximo: %d", MAX);
  2183  0531  303F               	movlw	low (STR_6| (0+32768))
  2184  0532  0140               	movlb	0	; select bank0
  2185  0533  00E8               	movwf	sprintf@fmt
  2186  0534  3088               	movlw	high (STR_6| (0+32768))
  2187  0535  00E9               	movwf	sprintf@fmt+1
  2188  0536  0141               	movlb	1	; select bank1
  2189  0537  086A               	movf	_MAX^(0+128),w
  2190  0538  0140               	movlb	0	; select bank0
  2191  0539  00EC               	movwf	??_menu
  2192  053A  01ED               	clrf	??_menu+1
  2193  053B  086C               	movf	??_menu,w
  2194  053C  00EA               	movwf	?_sprintf+2
  2195  053D  086D               	movf	??_menu+1,w
  2196  053E  00EB               	movwf	?_sprintf+3
  2197  053F  30C9               	movlw	(low (_s| 0))& (0+255)
  2198  0540  318B  23DC  3183   	fcall	_sprintf
  2199  0543                     l2083:
  2200                           
  2201                           ;Control_paso.c: 187:                 Lcd_Out2(2, 0, s);
  2202  0543  01F3               	clrf	Lcd_Out2@x
  2203  0544  30C9               	movlw	(low (_s| 0))& (0+255)
  2204  0545  0140               	movlb	0	; select bank0
  2205  0546  00EC               	movwf	??_menu
  2206  0547  086C               	movf	??_menu,w
  2207  0548  00F4               	movwf	Lcd_Out2@buffer
  2208  0549  3002               	movlw	2
  2209  054A  318C  2429  3183   	fcall	_Lcd_Out2
  2210  054D  2D6D               	goto	l127
  2211  054E                     l2085:
  2212                           
  2213                           ;Control_paso.c: 193:             variable++;
  2214  054E  3001               	movlw	1
  2215  054F  0141               	movlb	1	; select bank1
  2216  0550  07E4               	addwf	menu@variable^(0+128),f
  2217  0551  3000               	movlw	0
  2218  0552  1803               	skipnc
  2219  0553  3001               	movlw	1
  2220  0554  07E5               	addwf	(menu@variable+1)^(0+128),f
  2221  0555  3000               	movlw	0
  2222  0556  1803               	skipnc
  2223  0557  3001               	movlw	1
  2224  0558  07E6               	addwf	(menu@variable+2)^(0+128),f
  2225  0559                     l2087:
  2226                           
  2227                           ;Control_paso.c: 194:             if (variable == 44643) {
  2228  0559  3063               	movlw	99
  2229  055A  0664               	xorwf	menu@variable^(0+128),w
  2230  055B  30AE               	movlw	174
  2231  055C  1903               	skipnz
  2232  055D  0665               	xorwf	(menu@variable+1)^(0+128),w
  2233  055E  0466               	iorwf	(menu@variable+2)^(0+128),w
  2234  055F  1D03               	btfss	3,2
  2235  0560  2D62               	goto	u1831
  2236  0561  2D63               	goto	u1830
  2237  0562                     u1831:
  2238  0562  2D6D               	goto	l127
  2239  0563                     u1830:
  2240  0563                     l2089:
  2241                           
  2242                           ;Control_paso.c: 196:              ok = 1;
  2243  0563  3001               	movlw	1
  2244  0564  0141               	movlb	1	; select bank1
  2245  0565  00E8               	movwf	menu@ok^(0+128)
  2246  0566  3000               	movlw	0
  2247  0567  00E9               	movwf	(menu@ok^(0+128)+1)
  2248  0568                     l2091:
  2249                           
  2250                           ;Control_paso.c: 197:              Lcd_Cmd(1);
  2251  0568  3001               	movlw	1
  2252  0569  318D  25F1  3183   	fcall	_Lcd_Cmd
  2253                           
  2254                           ;Control_paso.c: 198:              break;
  2255  056C  2D72               	goto	l2093
  2256  056D                     l127:	
  2257                           ;Control_paso.c: 200:           }
  2258                           
  2259                           
  2260                           ;Control_paso.c: 192:           while (PORTCbits.RC2 == 0) {
  2261  056D  0140               	movlb	0	; select bank0
  2262  056E  1D0E               	btfss	14,2	;volatile
  2263  056F  2D71               	goto	u1841
  2264  0570  2D72               	goto	u1840
  2265  0571                     u1841:
  2266  0571  2D4E               	goto	l2085
  2267  0572                     u1840:
  2268  0572                     l2093:
  2269                           
  2270                           ;Control_paso.c: 201:           variable=0;
  2271  0572  3000               	movlw	0
  2272  0573  0141               	movlb	1	; select bank1
  2273  0574  00E4               	movwf	menu@variable^(0+128)
  2274  0575  3000               	movlw	0
  2275  0576  00E5               	movwf	(menu@variable+1)^(0+128)
  2276  0577  3000               	movlw	0
  2277  0578  00E6               	movwf	(menu@variable+2)^(0+128)
  2278  0579                     l2095:
  2279                           
  2280                           ;Control_paso.c: 202:           if (ok == 1) {
  2281  0579  0368               	decf	menu@ok^(0+128),w
  2282  057A  0469               	iorwf	(menu@ok+1)^(0+128),w
  2283  057B  1D03               	btfss	3,2
  2284  057C  2D7E               	goto	u1851
  2285  057D  2D7F               	goto	u1850
  2286  057E                     u1851:
  2287  057E  2C9D               	goto	l2043
  2288  057F                     u1850:
  2289  057F                     l2097:
  2290                           
  2291                           ;Control_paso.c: 203:             ok = 2;
  2292  057F  3002               	movlw	2
  2293  0580  00E8               	movwf	menu@ok^(0+128)
  2294  0581  3000               	movlw	0
  2295  0582  00E9               	movwf	(menu@ok^(0+128)+1)
  2296  0583                     l2099:	
  2297                           ;Control_paso.c: 204:             break;
  2298                           
  2299                           
  2300                           ;Control_paso.c: 208:       if (ok == 2) {
  2301  0583  3002               	movlw	2
  2302  0584  0141               	movlb	1	; select bank1
  2303  0585  0668               	xorwf	menu@ok^(0+128),w
  2304  0586  0469               	iorwf	(menu@ok+1)^(0+128),w
  2305  0587  1D03               	btfss	3,2
  2306  0588  2D8A               	goto	u1861
  2307  0589  2D8B               	goto	u1860
  2308  058A                     u1861:
  2309  058A  2D90               	goto	l114
  2310  058B                     u1860:
  2311  058B                     l2101:
  2312                           
  2313                           ;Control_paso.c: 209:         ok = 3;
  2314  058B  3003               	movlw	3
  2315  058C  00E8               	movwf	menu@ok^(0+128)
  2316  058D  3000               	movlw	0
  2317  058E  00E9               	movwf	(menu@ok^(0+128)+1)
  2318                           
  2319                           ;Control_paso.c: 210:         break;
  2320  058F  2D95               	goto	l2103
  2321  0590                     l114:	
  2322                           ;Control_paso.c: 212:     }
  2323                           
  2324                           
  2325                           ;Control_paso.c: 143:     while (PORTCbits.RC2 == 0) {
  2326  0590  0140               	movlb	0	; select bank0
  2327  0591  1D0E               	btfss	14,2	;volatile
  2328  0592  2D94               	goto	u1871
  2329  0593  2D95               	goto	u1870
  2330  0594                     u1871:
  2331  0594  2C4A               	goto	l2025
  2332  0595                     u1870:
  2333  0595                     l2103:
  2334                           
  2335                           ;Control_paso.c: 213:     variable = 0;
  2336  0595  3000               	movlw	0
  2337  0596  0141               	movlb	1	; select bank1
  2338  0597  00E4               	movwf	menu@variable^(0+128)
  2339  0598  3000               	movlw	0
  2340  0599  00E5               	movwf	(menu@variable+1)^(0+128)
  2341  059A  3000               	movlw	0
  2342  059B  00E6               	movwf	(menu@variable+2)^(0+128)
  2343  059C                     l2105:
  2344                           
  2345                           ;Control_paso.c: 214:     if (ok == 3) {
  2346  059C  3003               	movlw	3
  2347  059D  0668               	xorwf	menu@ok^(0+128),w
  2348  059E  0469               	iorwf	(menu@ok+1)^(0+128),w
  2349  059F  1D03               	btfss	3,2
  2350  05A0  2DA2               	goto	u1881
  2351  05A1  2DA3               	goto	u1880
  2352  05A2                     u1881:
  2353  05A2  2BED               	goto	l2005
  2354  05A3                     u1880:
  2355  05A3                     l2107:
  2356  05A3                     l2109:
  2357                           
  2358                           ;Control_paso.c: 216:       Lcd_Cmd(1);
  2359  05A3  3001               	movlw	1
  2360  05A4  318D  25F1  3183   	fcall	_Lcd_Cmd
  2361  05A7                     l2111:
  2362                           
  2363                           ;Control_paso.c: 217:       sprintf(s, "Modo contador ");
  2364  05A7  3022               	movlw	low (STR_9| (0+32768))
  2365  05A8  0140               	movlb	0	; select bank0
  2366  05A9  00E8               	movwf	sprintf@fmt
  2367  05AA  3088               	movlw	high (STR_9| (0+32768))
  2368  05AB  00E9               	movwf	sprintf@fmt+1
  2369  05AC  30C9               	movlw	(low (_s| 0))& (0+255)
  2370  05AD  318B  23DC  3183   	fcall	_sprintf
  2371  05B0                     l2113:
  2372                           
  2373                           ;Control_paso.c: 218:       Lcd_Out2(1, 0, s);
  2374  05B0  01F3               	clrf	Lcd_Out2@x
  2375  05B1  30C9               	movlw	(low (_s| 0))& (0+255)
  2376  05B2  0140               	movlb	0	; select bank0
  2377  05B3  00EC               	movwf	??_menu
  2378  05B4  086C               	movf	??_menu,w
  2379  05B5  00F4               	movwf	Lcd_Out2@buffer
  2380  05B6  3001               	movlw	1
  2381  05B7  318C  2429  3183   	fcall	_Lcd_Out2
  2382  05BA                     l2115:
  2383                           
  2384                           ;Control_paso.c: 219:       LATAbits.LATA2 = 1;
  2385  05BA  0140               	movlb	0	; select bank0
  2386  05BB  1518               	bsf	24,2	;volatile
  2387  05BC                     l2117:
  2388                           
  2389                           ;Control_paso.c: 220:       _delay((unsigned long)((1000)*(1000000/4000.0)));
  2390  05BC  3002               	movlw	2
  2391  05BD  0140               	movlb	0	; select bank0
  2392  05BE  00ED               	movwf	??_menu+1
  2393  05BF  3045               	movlw	69
  2394  05C0  00EC               	movwf	??_menu
  2395  05C1  30A9               	movlw	169
  2396  05C2                     u2137:
  2397  05C2  0B89               	decfsz	9,f
  2398  05C3  2DC2               	goto	u2137
  2399  05C4  0BEC               	decfsz	??_menu,f
  2400  05C5  2DC2               	goto	u2137
  2401  05C6  0BED               	decfsz	??_menu+1,f
  2402  05C7  2DC2               	goto	u2137
  2403  05C8  3200               	nop2
  2404  05C9                     l139:	
  2405                           ;Control_paso.c: 221:       break;
  2406                           
  2407  05C9  0008               	return
  2408  05CA                     __end_of_menu:
  2409                           
  2410                           	psect	text2
  2411  0BDC                     __ptext2:	
  2412 ;; *************** function _sprintf *****************
  2413 ;; Defined at:
  2414 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  s               1    wreg     PTR unsigned char 
  2417 ;;		 -> CONT(20), s(20), 
  2418 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  2419 ;;		 -> STR_20(11), STR_19(16), STR_18(11), STR_17(16), 
  2420 ;;		 -> STR_16(8), STR_15(7), STR_14(10), STR_13(16), 
  2421 ;;		 -> STR_12(10), STR_11(16), STR_9(15), STR_8(11), 
  2422 ;;		 -> STR_7(14), STR_6(11), STR_5(14), STR_4(16), 
  2423 ;;		 -> STR_3(6), STR_2(16), STR_1(8), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  s               1    6[BANK1 ] PTR unsigned char 
  2426 ;;		 -> CONT(20), s(20), 
  2427 ;;  f               5    1[BANK1 ] struct _IO_FILE
  2428 ;;  ret             2    0        int 
  2429 ;;  ap              1    0[BANK1 ] PTR void [1]
  2430 ;;		 -> ?_sprintf(2), 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2   72[BANK0 ] int 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2440 ;;      Params:         0       4       0       0       0       0       0       0
  2441 ;;      Locals:         0       0       7       0       0       0       0       0
  2442 ;;      Temps:          1       0       0       0       0       0       0       0
  2443 ;;      Totals:         1       4       7       0       0       0       0       0
  2444 ;;Total ram usage:       12 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 7
  2447 ;; This function calls:
  2448 ;;		_vfprintf
  2449 ;; This function is called by:
  2450 ;;		_menu
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           
  2456                           ;psect for function _sprintf
  2457  0BDC                     _sprintf:
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2461                           ;sprintf@s stored from wreg
  2462  0BDC  0141               	movlb	1	; select bank1
  2463  0BDD  00E3               	movwf	sprintf@s^(0+128)
  2464  0BDE                     l1917:
  2465  0BDE  306A               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2466  0BDF  00FD               	movwf	??_sprintf
  2467  0BE0  087D               	movf	??_sprintf,w
  2468  0BE1  00DD               	movwf	sprintf@ap^(0+128)
  2469  0BE2  0863               	movf	sprintf@s^(0+128),w
  2470  0BE3  00FD               	movwf	??_sprintf
  2471  0BE4  087D               	movf	??_sprintf,w
  2472  0BE5  00DE               	movwf	sprintf@f^(0+128)
  2473  0BE6                     l1919:
  2474  0BE6  01DF               	clrf	(sprintf@f^(0+128)+1)
  2475  0BE7  01E0               	clrf	((sprintf@f+1)^(0+128)+1)
  2476  0BE8                     l1921:
  2477  0BE8  01E1               	clrf	(sprintf@f^(0+128)+3)
  2478  0BE9  01E2               	clrf	((sprintf@f+1)^(0+128)+3)
  2479  0BEA                     l1923:
  2480  0BEA  0140               	movlb	0	; select bank0
  2481  0BEB  0869               	movf	sprintf@fmt+1,w
  2482  0BEC  00E1               	movwf	vfprintf@fmt+1
  2483  0BED  0868               	movf	sprintf@fmt,w
  2484  0BEE  00E0               	movwf	vfprintf@fmt
  2485  0BEF  30DD               	movlw	(low (sprintf@ap| 0))& (0+255)
  2486  0BF0  00FD               	movwf	??_sprintf
  2487  0BF1  087D               	movf	??_sprintf,w
  2488  0BF2  00E2               	movwf	vfprintf@ap
  2489  0BF3  30DE               	movlw	(low (sprintf@f| 0))& (0+255)
  2490  0BF4  3180  2012  318B   	fcall	_vfprintf
  2491  0BF7                     l1925:
  2492  0BF7  0141               	movlb	1	; select bank1
  2493  0BF8  085F               	movf	(sprintf@f^(0+128)+1),w
  2494  0BF9  0763               	addwf	sprintf@s^(0+128),w
  2495  0BFA  00FD               	movwf	??_sprintf
  2496  0BFB  087D               	movf	??_sprintf,w
  2497  0BFC  0086               	movwf	6
  2498  0BFD  0187               	clrf	7
  2499  0BFE  0181               	clrf	1
  2500  0BFF                     l711:
  2501  0BFF  0008               	return
  2502  0C00                     __end_of_sprintf:
  2503                           
  2504                           	psect	text3
  2505  0012                     __ptext3:	
  2506 ;; *************** function _vfprintf *****************
  2507 ;; Defined at:
  2508 ;;		line 1390 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  fp              1    wreg     PTR struct _IO_FILE
  2511 ;;		 -> sprintf@f(5), 
  2512 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  2513 ;;		 -> STR_20(11), STR_19(16), STR_18(11), STR_17(16), 
  2514 ;;		 -> STR_16(8), STR_15(7), STR_14(10), STR_13(16), 
  2515 ;;		 -> STR_12(10), STR_11(16), STR_9(15), STR_8(11), 
  2516 ;;		 -> STR_7(14), STR_6(11), STR_5(14), STR_4(16), 
  2517 ;;		 -> STR_3(6), STR_2(16), STR_1(8), 
  2518 ;;  ap              1   66[BANK0 ] PTR PTR void 
  2519 ;;		 -> sprintf@ap(1), 
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
  2522 ;;		 -> sprintf@f(5), 
  2523 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  2524 ;;		 -> STR_20(11), STR_19(16), STR_18(11), STR_17(16), 
  2525 ;;		 -> STR_16(8), STR_15(7), STR_14(10), STR_13(16), 
  2526 ;;		 -> STR_12(10), STR_11(16), STR_9(15), STR_8(11), 
  2527 ;;		 -> STR_7(14), STR_6(11), STR_5(14), STR_4(16), 
  2528 ;;		 -> STR_3(6), STR_2(16), STR_1(8), 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  2   64[BANK0 ] int 
  2531 ;; Registers used:
  2532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2538 ;;      Params:         0       3       0       0       0       0       0       0
  2539 ;;      Locals:         0       3       0       0       0       0       0       0
  2540 ;;      Temps:          0       2       0       0       0       0       0       0
  2541 ;;      Totals:         0       8       0       0       0       0       0       0
  2542 ;;Total ram usage:        8 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 6
  2545 ;; This function calls:
  2546 ;;		_vfpfcnvrt
  2547 ;; This function is called by:
  2548 ;;		_sprintf
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           
  2553                           ;psect for function _vfprintf
  2554  0012                     _vfprintf:
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2558                           ;vfprintf@fp stored from wreg
  2559  0012  0140               	movlb	0	; select bank0
  2560  0013  00E5               	movwf	vfprintf@fp
  2561  0014                     l1879:
  2562                           
  2563                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  2564  0014  0861               	movf	vfprintf@fmt+1,w
  2565  0015  00E7               	movwf	vfprintf@cfmt+1
  2566  0016  0860               	movf	vfprintf@fmt,w
  2567  0017  00E6               	movwf	vfprintf@cfmt
  2568  0018                     l1881:
  2569                           
  2570                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  2571  0018  0141               	movlb	1	; select bank1
  2572  0019  01A6               	clrf	_nout^(0+128)
  2573  001A  01A7               	clrf	(_nout+1)^(0+128)
  2574                           
  2575                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2576  001B  2830               	goto	l1885
  2577  001C                     l1883:
  2578                           
  2579                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  2580  001C  3066               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2581  001D  00E3               	movwf	??_vfprintf
  2582  001E  0863               	movf	??_vfprintf,w
  2583  001F  00CE               	movwf	vfpfcnvrt@fmt
  2584  0020  0862               	movf	vfprintf@ap,w
  2585  0021  00E4               	movwf	??_vfprintf+1
  2586  0022  0864               	movf	??_vfprintf+1,w
  2587  0023  00CF               	movwf	vfpfcnvrt@ap
  2588  0024  0865               	movf	vfprintf@fp,w
  2589  0025  3181  2144  3180   	fcall	_vfpfcnvrt
  2590  0028  0140               	movlb	0	; select bank0
  2591  0029  084E               	movf	?_vfpfcnvrt,w
  2592  002A  0141               	movlb	1	; select bank1
  2593  002B  07A6               	addwf	_nout^(0+128),f
  2594  002C  0140               	movlb	0	; select bank0
  2595  002D  084F               	movf	?_vfpfcnvrt+1,w
  2596  002E  0141               	movlb	1	; select bank1
  2597  002F  3DA7               	addwfc	(_nout+1)^(0+128),f
  2598  0030                     l1885:
  2599                           
  2600                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  2601  0030  0140               	movlb	0	; select bank0
  2602  0031  0866               	movf	vfprintf@cfmt,w
  2603  0032  0084               	movwf	4
  2604  0033  0867               	movf	vfprintf@cfmt+1,w
  2605  0034  0085               	movwf	5
  2606  0035  0012               	moviw fsr0++
  2607  0036  1D03               	btfss	3,2
  2608  0037  2839               	goto	u1671
  2609  0038  283A               	goto	u1670
  2610  0039                     u1671:
  2611  0039  281C               	goto	l1883
  2612  003A                     u1670:
  2613  003A                     l1887:
  2614                           
  2615                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  2616  003A  0141               	movlb	1	; select bank1
  2617  003B  0827               	movf	(_nout+1)^(0+128),w
  2618  003C  0140               	movlb	0	; select bank0
  2619  003D  00E1               	movwf	?_vfprintf+1
  2620  003E  0141               	movlb	1	; select bank1
  2621  003F  0826               	movf	_nout^(0+128),w
  2622  0040  0140               	movlb	0	; select bank0
  2623  0041  00E0               	movwf	?_vfprintf
  2624  0042                     l795:
  2625  0042  0008               	return
  2626  0043                     __end_of_vfprintf:
  2627                           
  2628                           	psect	text4
  2629  0144                     __ptext4:	
  2630 ;; *************** function _vfpfcnvrt *****************
  2631 ;; Defined at:
  2632 ;;		line 692 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  fp              1    wreg     PTR struct _IO_FILE
  2635 ;;		 -> sprintf@f(5), 
  2636 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  2637 ;;		 -> vfprintf@cfmt(2), 
  2638 ;;  ap              1   47[BANK0 ] PTR PTR void 
  2639 ;;		 -> sprintf@ap(1), 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  2642 ;;		 -> sprintf@f(5), 
  2643 ;;  ll              8   53[BANK0 ] long long 
  2644 ;;  llu             8    0        unsigned long long 
  2645 ;;  f               4    0        unsigned long long 
  2646 ;;  ct              3    0        unsigned char [3]
  2647 ;;  done            2   61[BANK0 ] int 
  2648 ;;  vp              2    0        PTR void 
  2649 ;;  i               2    0        int 
  2650 ;;  cp              2    0        PTR unsigned char 
  2651 ;;  c               1    0        unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  2   46[BANK0 ] int 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2661 ;;      Params:         0       2       0       0       0       0       0       0
  2662 ;;      Locals:         0      11       0       0       0       0       0       0
  2663 ;;      Temps:          0       5       0       0       0       0       0       0
  2664 ;;      Totals:         0      18       0       0       0       0       0       0
  2665 ;;Total ram usage:       18 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 5
  2668 ;; This function calls:
  2669 ;;		_dtoa
  2670 ;;		_fputc
  2671 ;; This function is called by:
  2672 ;;		_vfprintf
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _vfpfcnvrt
  2678  0144                     _vfpfcnvrt:
  2679                           
  2680                           ;incstack = 0
  2681                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2682                           ;vfpfcnvrt@fp stored from wreg
  2683  0144  0140               	movlb	0	; select bank0
  2684  0145  00DF               	movwf	vfpfcnvrt@fp
  2685  0146                     l1747:
  2686                           
  2687                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  2688  0146  084E               	movf	vfpfcnvrt@fmt,w
  2689  0147  0086               	movwf	6
  2690  0148  0187               	clrf	7
  2691  0149  3F40               	moviw [0]fsr1
  2692  014A  00D0               	movwf	??_vfpfcnvrt
  2693  014B  3F41               	moviw [1]fsr1
  2694  014C  00D1               	movwf	??_vfpfcnvrt+1
  2695  014D  0850               	movf	??_vfpfcnvrt,w
  2696  014E  0084               	movwf	4
  2697  014F  0851               	movf	??_vfpfcnvrt+1,w
  2698  0150  0085               	movwf	5
  2699  0151  0012               	moviw fsr0++
  2700  0152  3A25               	xorlw	37
  2701  0153  1D03               	btfss	3,2
  2702  0154  2956               	goto	u1491
  2703  0155  2957               	goto	u1490
  2704  0156                     u1491:
  2705  0156  2A4F               	goto	l1805
  2706  0157                     u1490:
  2707  0157                     l1749:
  2708                           
  2709                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  2710  0157  084E               	movf	vfpfcnvrt@fmt,w
  2711  0158  0086               	movwf	6
  2712  0159  0187               	clrf	7
  2713  015A  3001               	movlw	1
  2714  015B  0781               	addwf	1,f
  2715  015C  3141               	addfsr 1,1
  2716  015D  1803               	skipnc
  2717  015E  0A81               	incf	1,f
  2718  015F                     l1751:
  2719                           
  2720                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  2721  015F  0141               	movlb	1	; select bank1
  2722  0160  01A8               	clrf	_width^(0+128)
  2723  0161  01A9               	clrf	(_width+1)^(0+128)
  2724  0162  01AC               	clrf	_flags^(0+128)
  2725  0163  01AD               	clrf	(_flags+1)^(0+128)
  2726  0164                     l1753:
  2727                           
  2728                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  2729  0164  30FF               	movlw	255
  2730  0165  00AA               	movwf	_prec^(0+128)
  2731  0166  30FF               	movlw	255
  2732  0167  00AB               	movwf	(_prec^(0+128)+1)
  2733  0168                     l1755:
  2734                           
  2735                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 710:         done = 0;
  2736  0168  0140               	movlb	0	; select bank0
  2737  0169  01DD               	clrf	vfpfcnvrt@done
  2738  016A  01DE               	clrf	vfpfcnvrt@done+1
  2739                           
  2740                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2741  016B  29AD               	goto	l1773
  2742  016C                     l776:	
  2743                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 713:                 case '-'
      +                           :
  2744                           
  2745                           
  2746                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 714:                     flag
      +                          s |= (1 << 0);
  2747  016C  0141               	movlb	1	; select bank1
  2748  016D  142C               	bsf	_flags^(0+128),0
  2749  016E                     l1757:
  2750                           
  2751                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 715:                     ++*f
      +                          mt;
  2752  016E  0140               	movlb	0	; select bank0
  2753  016F  084E               	movf	vfpfcnvrt@fmt,w
  2754  0170  0086               	movwf	6
  2755  0171  0187               	clrf	7
  2756  0172  3001               	movlw	1
  2757  0173  0781               	addwf	1,f
  2758  0174  3141               	addfsr 1,1
  2759  0175  1803               	skipnc
  2760  0176  0A81               	incf	1,f
  2761                           
  2762                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 716:                     brea
      +                          k;
  2763  0177  29AD               	goto	l1773
  2764  0178                     l778:	
  2765                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 717:                 case '0'
      +                           :
  2766                           
  2767                           
  2768                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 718:                     flag
      +                          s |= (1 << 1);
  2769  0178  0141               	movlb	1	; select bank1
  2770  0179  14AC               	bsf	_flags^(0+128),1
  2771  017A  296E               	goto	l1757
  2772  017B                     l779:	
  2773                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 721:                 case '+'
      +                           :
  2774                           
  2775                           
  2776                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 722:                     flag
      +                          s |= (1 << 2);
  2777  017B  0141               	movlb	1	; select bank1
  2778  017C  152C               	bsf	_flags^(0+128),2
  2779  017D  296E               	goto	l1757
  2780  017E                     l780:	
  2781                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 725:                 case ' '
      +                           :
  2782                           
  2783                           
  2784                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 726:                     flag
      +                          s |= (1 << 3);
  2785  017E  0141               	movlb	1	; select bank1
  2786  017F  15AC               	bsf	_flags^(0+128),3
  2787  0180  296E               	goto	l1757
  2788  0181                     l781:	
  2789                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 729:                 case '#'
      +                           :
  2790                           
  2791                           
  2792                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 730:                     flag
      +                          s |= (1 << 4);
  2793  0181  0141               	movlb	1	; select bank1
  2794  0182  162C               	bsf	_flags^(0+128),4
  2795  0183  296E               	goto	l1757
  2796  0184                     l1767:
  2797                           
  2798                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 734:                     done
      +                           = 1;
  2799  0184  3001               	movlw	1
  2800  0185  00DD               	movwf	vfpfcnvrt@done
  2801  0186  3000               	movlw	0
  2802  0187  00DE               	movwf	vfpfcnvrt@done+1
  2803                           
  2804                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 735:                     brea
      +                          k;
  2805  0188  29AD               	goto	l1773
  2806  0189                     l1771:
  2807  0189  084E               	movf	vfpfcnvrt@fmt,w
  2808  018A  0086               	movwf	6
  2809  018B  0187               	clrf	7
  2810  018C  3F40               	moviw [0]fsr1
  2811  018D  00D0               	movwf	??_vfpfcnvrt
  2812  018E  3F41               	moviw [1]fsr1
  2813  018F  00D1               	movwf	??_vfpfcnvrt+1
  2814  0190  0850               	movf	??_vfpfcnvrt,w
  2815  0191  0084               	movwf	4
  2816  0192  0851               	movf	??_vfpfcnvrt+1,w
  2817  0193  0085               	movwf	5
  2818  0194  0800               	movf	0,w	;code access
  2819  0195  00D2               	movwf	??_vfpfcnvrt+2
  2820  0196  01D3               	clrf	??_vfpfcnvrt+3
  2821                           
  2822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2823                           ; Switch size 1, requested type "simple"
  2824                           ; Number of cases is 1, Range of values is 0 to 0
  2825                           ; switch strategies available:
  2826                           ; Name         Instructions Cycles
  2827                           ; simple_byte            4     3 (average)
  2828                           ; direct_byte            8     6 (fixed)
  2829                           ; jumptable            260     6 (fixed)
  2830                           ;	Chosen strategy is simple_byte
  2831  0197  0853               	movf	??_vfpfcnvrt+3,w
  2832  0198  3A00               	xorlw	0	; case 0
  2833  0199  1903               	skipnz
  2834  019A  299C               	goto	l2277
  2835  019B  2984               	goto	l1767
  2836  019C                     l2277:
  2837                           
  2838                           ; Switch size 1, requested type "simple"
  2839                           ; Number of cases is 5, Range of values is 32 to 48
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte           16     9 (average)
  2843                           ; direct_byte           43     9 (fixed)
  2844                           ; jumptable            263     9 (fixed)
  2845                           ;	Chosen strategy is simple_byte
  2846  019C  0852               	movf	??_vfpfcnvrt+2,w
  2847  019D  3A20               	xorlw	32	; case 32
  2848  019E  1903               	skipnz
  2849  019F  297E               	goto	l780
  2850  01A0  3A03               	xorlw	3	; case 35
  2851  01A1  1903               	skipnz
  2852  01A2  2981               	goto	l781
  2853  01A3  3A08               	xorlw	8	; case 43
  2854  01A4  1903               	skipnz
  2855  01A5  297B               	goto	l779
  2856  01A6  3A06               	xorlw	6	; case 45
  2857  01A7  1903               	skipnz
  2858  01A8  296C               	goto	l776
  2859  01A9  3A1D               	xorlw	29	; case 48
  2860  01AA  1903               	skipnz
  2861  01AB  2978               	goto	l778
  2862  01AC  2984               	goto	l1767
  2863  01AD                     l1773:
  2864                           
  2865                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 711:         while (!done) {
  2866  01AD  085D               	movf	vfpfcnvrt@done,w
  2867  01AE  045E               	iorwf	vfpfcnvrt@done+1,w
  2868  01AF  1903               	btfsc	3,2
  2869  01B0  29B2               	goto	u1501
  2870  01B1  29B3               	goto	u1500
  2871  01B2                     u1501:
  2872  01B2  2989               	goto	l1771
  2873  01B3                     u1500:
  2874  01B3                     l783:
  2875                           
  2876                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 738:         if (flags & (1 <
      +                          < 0)) {
  2877  01B3  0141               	movlb	1	; select bank1
  2878  01B4  1C2C               	btfss	_flags^(0+128),0
  2879  01B5  29B7               	goto	u1511
  2880  01B6  29B8               	goto	u1510
  2881  01B7                     u1511:
  2882  01B7  29BC               	goto	l1777
  2883  01B8                     u1510:
  2884  01B8                     l1775:
  2885                           
  2886                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 739:             flags &= ~(1
      +                           << 1);
  2887  01B8  30FD               	movlw	253
  2888  01B9  05AC               	andwf	_flags^(0+128),f
  2889  01BA  30FF               	movlw	255
  2890  01BB  05AD               	andwf	(_flags+1)^(0+128),f
  2891  01BC                     l1777:
  2892                           
  2893                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  2894  01BC  0140               	movlb	0	; select bank0
  2895  01BD  084E               	movf	vfpfcnvrt@fmt,w
  2896  01BE  0086               	movwf	6
  2897  01BF  0187               	clrf	7
  2898  01C0  3F40               	moviw [0]fsr1
  2899  01C1  00D0               	movwf	??_vfpfcnvrt
  2900  01C2  3F41               	moviw [1]fsr1
  2901  01C3  00D1               	movwf	??_vfpfcnvrt+1
  2902  01C4  0850               	movf	??_vfpfcnvrt,w
  2903  01C5  0084               	movwf	4
  2904  01C6  0851               	movf	??_vfpfcnvrt+1,w
  2905  01C7  0085               	movwf	5
  2906  01C8  0012               	moviw fsr0++
  2907  01C9  3A64               	xorlw	100
  2908  01CA  1903               	btfsc	3,2
  2909  01CB  29CD               	goto	u1521
  2910  01CC  29CE               	goto	u1520
  2911  01CD                     u1521:
  2912  01CD  29DF               	goto	l1781
  2913  01CE                     u1520:
  2914  01CE                     l1779:
  2915  01CE  084E               	movf	vfpfcnvrt@fmt,w
  2916  01CF  0086               	movwf	6
  2917  01D0  0187               	clrf	7
  2918  01D1  3F40               	moviw [0]fsr1
  2919  01D2  00D0               	movwf	??_vfpfcnvrt
  2920  01D3  3F41               	moviw [1]fsr1
  2921  01D4  00D1               	movwf	??_vfpfcnvrt+1
  2922  01D5  0850               	movf	??_vfpfcnvrt,w
  2923  01D6  0084               	movwf	4
  2924  01D7  0851               	movf	??_vfpfcnvrt+1,w
  2925  01D8  0085               	movwf	5
  2926  01D9  0012               	moviw fsr0++
  2927  01DA  3A69               	xorlw	105
  2928  01DB  1D03               	btfss	3,2
  2929  01DC  29DE               	goto	u1531
  2930  01DD  29DF               	goto	u1530
  2931  01DE                     u1531:
  2932  01DE  2A1A               	goto	l1789
  2933  01DF                     u1530:
  2934  01DF                     l1781:
  2935                           
  2936                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  2937  01DF  084E               	movf	vfpfcnvrt@fmt,w
  2938  01E0  0086               	movwf	6
  2939  01E1  0187               	clrf	7
  2940  01E2  3001               	movlw	1
  2941  01E3  0781               	addwf	1,f
  2942  01E4  3141               	addfsr 1,1
  2943  01E5  1803               	skipnc
  2944  01E6  0A81               	incf	1,f
  2945  01E7                     l1783:
  2946                           
  2947                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  2948  01E7  084F               	movf	vfpfcnvrt@ap,w
  2949  01E8  0086               	movwf	6
  2950  01E9  0187               	clrf	7
  2951  01EA  0801               	movf	1,w
  2952  01EB  0084               	movwf	4
  2953  01EC  0185               	clrf	5
  2954  01ED  3002               	movlw	2
  2955  01EE  0781               	addwf	1,f
  2956  01EF  3F00               	moviw [0]fsr0
  2957  01F0  00D0               	movwf	??_vfpfcnvrt
  2958  01F1  3F01               	moviw [1]fsr0
  2959  01F2  00D1               	movwf	??_vfpfcnvrt+1
  2960  01F3  0850               	movf	??_vfpfcnvrt,w
  2961  01F4  00D5               	movwf	vfpfcnvrt@ll
  2962  01F5  0851               	movf	??_vfpfcnvrt+1,w
  2963  01F6  00D6               	movwf	vfpfcnvrt@ll+1
  2964  01F7  0D89               	rlf	9,f
  2965  01F8  3B89               	subwfb	9,f
  2966  01F9  0989               	comf	9,f
  2967  01FA  00D7               	movwf	vfpfcnvrt@ll+2
  2968  01FB  00D8               	movwf	vfpfcnvrt@ll+3
  2969  01FC  00D9               	movwf	vfpfcnvrt@ll+4
  2970  01FD  00DA               	movwf	vfpfcnvrt@ll+5
  2971  01FE  00DB               	movwf	vfpfcnvrt@ll+6
  2972  01FF  00DC               	movwf	vfpfcnvrt@ll+7
  2973  0200                     l1785:
  2974                           
  2975                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  2976  0200  0855               	movf	vfpfcnvrt@ll,w
  2977  0201  00B0               	movwf	dtoa@d
  2978  0202  0856               	movf	vfpfcnvrt@ll+1,w
  2979  0203  00B1               	movwf	dtoa@d+1
  2980  0204  0857               	movf	vfpfcnvrt@ll+2,w
  2981  0205  00B2               	movwf	dtoa@d+2
  2982  0206  0858               	movf	vfpfcnvrt@ll+3,w
  2983  0207  00B3               	movwf	dtoa@d+3
  2984  0208  0859               	movf	vfpfcnvrt@ll+4,w
  2985  0209  00B4               	movwf	dtoa@d+4
  2986  020A  085A               	movf	vfpfcnvrt@ll+5,w
  2987  020B  00B5               	movwf	dtoa@d+5
  2988  020C  085B               	movf	vfpfcnvrt@ll+6,w
  2989  020D  00B6               	movwf	dtoa@d+6
  2990  020E  085C               	movf	vfpfcnvrt@ll+7,w
  2991  020F  00B7               	movwf	dtoa@d+7
  2992  0210  085F               	movf	vfpfcnvrt@fp,w
  2993  0211  3182  2273  3181   	fcall	_dtoa
  2994  0214  0140               	movlb	0	; select bank0
  2995  0215  0831               	movf	?_dtoa+1,w
  2996  0216  00CF               	movwf	?_vfpfcnvrt+1
  2997  0217  0830               	movf	?_dtoa,w
  2998  0218  00CE               	movwf	?_vfpfcnvrt
  2999  0219  2A72               	goto	l788
  3000  021A                     l1789:
  3001                           
  3002                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  3003  021A  084E               	movf	vfpfcnvrt@fmt,w
  3004  021B  0086               	movwf	6
  3005  021C  0187               	clrf	7
  3006  021D  3F40               	moviw [0]fsr1
  3007  021E  00D0               	movwf	??_vfpfcnvrt
  3008  021F  3F41               	moviw [1]fsr1
  3009  0220  00D1               	movwf	??_vfpfcnvrt+1
  3010  0221  0850               	movf	??_vfpfcnvrt,w
  3011  0222  0084               	movwf	4
  3012  0223  0851               	movf	??_vfpfcnvrt+1,w
  3013  0224  0085               	movwf	5
  3014  0225  0012               	moviw fsr0++
  3015  0226  3A25               	xorlw	37
  3016  0227  1D03               	btfss	3,2
  3017  0228  2A2A               	goto	u1541
  3018  0229  2A2B               	goto	u1540
  3019  022A                     u1541:
  3020  022A  2A44               	goto	l1799
  3021  022B                     u1540:
  3022  022B                     l1791:
  3023                           
  3024                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  3025  022B  084E               	movf	vfpfcnvrt@fmt,w
  3026  022C  0086               	movwf	6
  3027  022D  0187               	clrf	7
  3028  022E  3001               	movlw	1
  3029  022F  0781               	addwf	1,f
  3030  0230  3141               	addfsr 1,1
  3031  0231  1803               	skipnc
  3032  0232  0A81               	incf	1,f
  3033  0233                     l1793:
  3034                           
  3035                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  3036  0233  3025               	movlw	37
  3037  0234  00F0               	movwf	fputc@c
  3038  0235  3000               	movlw	0
  3039  0236  00F1               	movwf	fputc@c+1
  3040  0237  085F               	movf	vfpfcnvrt@fp,w
  3041  0238  00D0               	movwf	??_vfpfcnvrt
  3042  0239  0850               	movf	??_vfpfcnvrt,w
  3043  023A  00F2               	movwf	fputc@fp
  3044  023B  318C  24BD  3181   	fcall	_fputc
  3045  023E                     l1795:
  3046                           
  3047                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  3048  023E  3001               	movlw	1
  3049  023F  0140               	movlb	0	; select bank0
  3050  0240  00CE               	movwf	?_vfpfcnvrt
  3051  0241  3000               	movlw	0
  3052  0242  00CF               	movwf	?_vfpfcnvrt+1
  3053  0243  2A72               	goto	l788
  3054  0244                     l1799:
  3055                           
  3056                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  3057  0244  084E               	movf	vfpfcnvrt@fmt,w
  3058  0245  0086               	movwf	6
  3059  0246  0187               	clrf	7
  3060  0247  3001               	movlw	1
  3061  0248  0781               	addwf	1,f
  3062  0249  3141               	addfsr 1,1
  3063  024A  1803               	skipnc
  3064  024B  0A81               	incf	1,f
  3065  024C                     l1801:
  3066                           
  3067                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  3068  024C  01CE               	clrf	?_vfpfcnvrt
  3069  024D  01CF               	clrf	?_vfpfcnvrt+1
  3070  024E  2A72               	goto	l788
  3071  024F                     l1805:
  3072                           
  3073                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  3074  024F  084E               	movf	vfpfcnvrt@fmt,w
  3075  0250  0086               	movwf	6
  3076  0251  0187               	clrf	7
  3077  0252  3F40               	moviw [0]fsr1
  3078  0253  00D0               	movwf	??_vfpfcnvrt
  3079  0254  3F41               	moviw [1]fsr1
  3080  0255  00D1               	movwf	??_vfpfcnvrt+1
  3081  0256  0850               	movf	??_vfpfcnvrt,w
  3082  0257  0084               	movwf	4
  3083  0258  0851               	movf	??_vfpfcnvrt+1,w
  3084  0259  0085               	movwf	5
  3085  025A  0800               	movf	0,w	;code access
  3086  025B  00D2               	movwf	??_vfpfcnvrt+2
  3087  025C  01D3               	clrf	??_vfpfcnvrt+3
  3088  025D  0852               	movf	??_vfpfcnvrt+2,w
  3089  025E  00F0               	movwf	fputc@c
  3090  025F  0853               	movf	??_vfpfcnvrt+3,w
  3091  0260  00F1               	movwf	fputc@c+1
  3092  0261  085F               	movf	vfpfcnvrt@fp,w
  3093  0262  00D4               	movwf	??_vfpfcnvrt+4
  3094  0263  0854               	movf	??_vfpfcnvrt+4,w
  3095  0264  00F2               	movwf	fputc@fp
  3096  0265  318C  24BD  3181   	fcall	_fputc
  3097  0268                     l1807:
  3098                           
  3099                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  3100  0268  0140               	movlb	0	; select bank0
  3101  0269  084E               	movf	vfpfcnvrt@fmt,w
  3102  026A  0086               	movwf	6
  3103  026B  0187               	clrf	7
  3104  026C  3001               	movlw	1
  3105  026D  0781               	addwf	1,f
  3106  026E  3141               	addfsr 1,1
  3107  026F  1803               	skipnc
  3108  0270  0A81               	incf	1,f
  3109  0271  2A3E               	goto	l1795
  3110  0272                     l788:
  3111  0272  0008               	return
  3112  0273                     __end_of_vfpfcnvrt:
  3113                           
  3114                           	psect	text5
  3115  0273                     __ptext5:	
  3116 ;; *************** function _dtoa *****************
  3117 ;; Defined at:
  3118 ;;		line 287 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  fp              1    wreg     PTR struct _IO_FILE
  3121 ;;		 -> sprintf@f(5), 
  3122 ;;  d               8   16[BANK0 ] long long 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
  3125 ;;		 -> sprintf@f(5), 
  3126 ;;  n               8   36[BANK0 ] long long 
  3127 ;;  i               2   44[BANK0 ] int 
  3128 ;;  s               2   34[BANK0 ] int 
  3129 ;;  w               2   32[BANK0 ] int 
  3130 ;;  p               2   30[BANK0 ] int 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2   16[BANK0 ] int 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3140 ;;      Params:         0       8       0       0       0       0       0       0
  3141 ;;      Locals:         0      19       0       0       0       0       0       0
  3142 ;;      Temps:          0       3       0       0       0       0       0       0
  3143 ;;      Totals:         0      30       0       0       0       0       0       0
  3144 ;;Total ram usage:       30 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 4
  3147 ;; This function calls:
  3148 ;;		___aodiv
  3149 ;;		___aomod
  3150 ;;		_abs
  3151 ;;		_pad
  3152 ;; This function is called by:
  3153 ;;		_vfpfcnvrt
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _dtoa
  3159  0273                     _dtoa:
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3163                           ;dtoa@fp stored from wreg
  3164  0273  0140               	movlb	0	; select bank0
  3165  0274  00BD               	movwf	dtoa@fp
  3166  0275                     l1689:
  3167                           
  3168                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .32/pic/sources/c99/common/doprnt.c: 293:     n = d;
  3169  0275  0830               	movf	dtoa@d,w
  3170  0276  00C4               	movwf	dtoa@n
  3171  0277  0831               	movf	dtoa@d+1,w
  3172  0278  00C5               	movwf	dtoa@n+1
  3173  0279  0832               	movf	dtoa@d+2,w
  3174  027A  00C6               	movwf	dtoa@n+2
  3175  027B  0833               	movf	dtoa@d+3,w
  3176  027C  00C7               	movwf	dtoa@n+3
  3177  027D  0834               	movf	dtoa@d+4,w
  3178  027E  00C8               	movwf	dtoa@n+4
  3179  027F  0835               	movf	dtoa@d+5,w
  3180  0280  00C9               	movwf	dtoa@n+5
  3181  0281  0836               	movf	dtoa@d+6,w
  3182  0282  00CA               	movwf	dtoa@n+6
  3183  0283  0837               	movf	dtoa@d+7,w
  3184  0284  00CB               	movwf	dtoa@n+7
  3185  0285                     l1691:
  3186                           
  3187                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  3188  0285  3044               	movlw	low dtoa@n
  3189  0286  0086               	movwf	6
  3190  0287  3000               	movlw	high dtoa@n
  3191  0288  0087               	movwf	7
  3192  0289  3F47               	moviw [7]fsr1
  3193  028A  00B8               	movwf	??_dtoa
  3194  028B  1BB8               	btfsc	??_dtoa,7
  3195  028C  2A8E               	goto	u1331
  3196  028D  2A90               	goto	u1330
  3197  028E                     u1331:
  3198  028E  3001               	movlw	1
  3199  028F  2A91               	goto	u1340
  3200  0290                     u1330:
  3201  0290  3000               	movlw	0
  3202  0291                     u1340:
  3203  0291  0140               	movlb	0	; select bank0
  3204  0292  00B9               	movwf	??_dtoa+1
  3205  0293  01BA               	clrf	??_dtoa+2
  3206  0294  0839               	movf	??_dtoa+1,w
  3207  0295  00C2               	movwf	dtoa@s
  3208  0296  083A               	movf	??_dtoa+2,w
  3209  0297  00C3               	movwf	dtoa@s+1
  3210  0298                     l1693:
  3211                           
  3212                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  3213  0298  0842               	movf	dtoa@s,w
  3214  0299  0443               	iorwf	dtoa@s+1,w
  3215  029A  1903               	btfsc	3,2
  3216  029B  2A9D               	goto	u1351
  3217  029C  2A9E               	goto	u1350
  3218  029D                     u1351:
  3219  029D  2ABC               	goto	l746
  3220  029E                     u1350:
  3221  029E                     l1695:
  3222                           
  3223                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  3224  029E  09C4               	comf	dtoa@n,f
  3225  029F  09C5               	comf	dtoa@n+1,f
  3226  02A0  09C6               	comf	dtoa@n+2,f
  3227  02A1  09C7               	comf	dtoa@n+3,f
  3228  02A2  09C8               	comf	dtoa@n+4,f
  3229  02A3  09C9               	comf	dtoa@n+5,f
  3230  02A4  09CA               	comf	dtoa@n+6,f
  3231  02A5  09CB               	comf	dtoa@n+7,f
  3232  02A6  0AC4               	incf	dtoa@n,f
  3233  02A7  1D03               	skipz
  3234  02A8  2ABC               	goto	u136lld
  3235  02A9  0AC5               	incf	dtoa@n+1,f
  3236  02AA  1D03               	skipz
  3237  02AB  2ABC               	goto	u136lld
  3238  02AC  0AC6               	incf	dtoa@n+2,f
  3239  02AD  1D03               	skipz
  3240  02AE  2ABC               	goto	u136lld
  3241  02AF  0AC7               	incf	dtoa@n+3,f
  3242  02B0  1D03               	skipz
  3243  02B1  2ABC               	goto	u136lld
  3244  02B2  0AC8               	incf	dtoa@n+4,f
  3245  02B3  1D03               	skipz
  3246  02B4  2ABC               	goto	u136lld
  3247  02B5  0AC9               	incf	dtoa@n+5,f
  3248  02B6  1D03               	skipz
  3249  02B7  2ABC               	goto	u136lld
  3250  02B8  0ACA               	incf	dtoa@n+6,f
  3251  02B9  1D03               	skipz
  3252  02BA  2ABC               	goto	u136lld
  3253  02BB  0ACB               	incf	dtoa@n+7,f
  3254  02BC                     u136lld:
  3255  02BC                     l746:	
  3256                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 297:     }
  3257                           
  3258                           
  3259                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  3260  02BC  0141               	movlb	1	; select bank1
  3261  02BD  1BAB               	btfsc	(_prec+1)^(0+128),7
  3262  02BE  2AC0               	goto	u1371
  3263  02BF  2AC1               	goto	u1370
  3264  02C0                     u1371:
  3265  02C0  2AC5               	goto	l747
  3266  02C1                     u1370:
  3267  02C1                     l1697:
  3268                           
  3269                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  3270  02C1  30FD               	movlw	253
  3271  02C2  05AC               	andwf	_flags^(0+128),f
  3272  02C3  30FF               	movlw	255
  3273  02C4  05AD               	andwf	(_flags+1)^(0+128),f
  3274  02C5                     l747:	
  3275                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 302:     }
  3276                           
  3277                           
  3278                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  3279  02C5  082B               	movf	(_prec+1)^(0+128),w
  3280  02C6  3A80               	xorlw	128
  3281  02C7  0140               	movlb	0	; select bank0
  3282  02C8  00B8               	movwf	??_dtoa
  3283  02C9  3080               	movlw	128
  3284  02CA  0238               	subwf	??_dtoa,w
  3285  02CB  1D03               	skipz
  3286  02CC  2AD0               	goto	u1385
  3287  02CD  3001               	movlw	1
  3288  02CE  0141               	movlb	1	; select bank1
  3289  02CF  022A               	subwf	_prec^(0+128),w
  3290  02D0                     u1385:
  3291  02D0  1803               	skipnc
  3292  02D1  2AD3               	goto	u1381
  3293  02D2  2AD4               	goto	u1380
  3294  02D3                     u1381:
  3295  02D3  2ADA               	goto	l1701
  3296  02D4                     u1380:
  3297  02D4                     l1699:
  3298  02D4  3001               	movlw	1
  3299  02D5  0140               	movlb	0	; select bank0
  3300  02D6  00BE               	movwf	dtoa@p
  3301  02D7  3000               	movlw	0
  3302  02D8  00BF               	movwf	dtoa@p+1
  3303  02D9  2AE2               	goto	l751
  3304  02DA                     l1701:
  3305  02DA  0141               	movlb	1	; select bank1
  3306  02DB  082B               	movf	(_prec+1)^(0+128),w
  3307  02DC  0140               	movlb	0	; select bank0
  3308  02DD  00BF               	movwf	dtoa@p+1
  3309  02DE  0141               	movlb	1	; select bank1
  3310  02DF  082A               	movf	_prec^(0+128),w
  3311  02E0  0140               	movlb	0	; select bank0
  3312  02E1  00BE               	movwf	dtoa@p
  3313  02E2                     l751:
  3314                           
  3315                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  3316  02E2  0141               	movlb	1	; select bank1
  3317  02E3  0829               	movf	(_width+1)^(0+128),w
  3318  02E4  0140               	movlb	0	; select bank0
  3319  02E5  00C1               	movwf	dtoa@w+1
  3320  02E6  0141               	movlb	1	; select bank1
  3321  02E7  0828               	movf	_width^(0+128),w
  3322  02E8  0140               	movlb	0	; select bank0
  3323  02E9  00C0               	movwf	dtoa@w
  3324  02EA                     l1703:
  3325                           
  3326                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  3327  02EA  0842               	movf	dtoa@s,w
  3328  02EB  0443               	iorwf	dtoa@s+1,w
  3329  02EC  1D03               	btfss	3,2
  3330  02ED  2AEF               	goto	u1391
  3331  02EE  2AF0               	goto	u1390
  3332  02EF                     u1391:
  3333  02EF  2AF5               	goto	l1707
  3334  02F0                     u1390:
  3335  02F0                     l1705:
  3336  02F0  0141               	movlb	1	; select bank1
  3337  02F1  1D2C               	btfss	_flags^(0+128),2
  3338  02F2  2AF4               	goto	u1401
  3339  02F3  2AF5               	goto	u1400
  3340  02F4                     u1401:
  3341  02F4  2AFA               	goto	l752
  3342  02F5                     u1400:
  3343  02F5                     l1707:
  3344                           
  3345                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  3346  02F5  30FF               	movlw	255
  3347  02F6  0140               	movlb	0	; select bank0
  3348  02F7  07C0               	addwf	dtoa@w,f
  3349  02F8  30FF               	movlw	255
  3350  02F9  3DC1               	addwfc	dtoa@w+1,f
  3351  02FA                     l752:	
  3352                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 307:     }
  3353                           
  3354                           
  3355                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  3356  02FA  301F               	movlw	31
  3357  02FB  0140               	movlb	0	; select bank0
  3358  02FC  00CC               	movwf	dtoa@i
  3359  02FD  3000               	movlw	0
  3360  02FE  00CD               	movwf	dtoa@i+1
  3361  02FF                     l1709:
  3362                           
  3363                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  3364  02FF  0142               	movlb	2	; select bank2
  3365  0300  01BF               	clrf	(_dbuf^(0+256)+31)
  3366                           
  3367                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3368  0301  2B6B               	goto	l755
  3369  0302                     l1711:
  3370                           
  3371                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  3372  0302  30FF               	movlw	255
  3373  0303  0140               	movlb	0	; select bank0
  3374  0304  07CC               	addwf	dtoa@i,f
  3375  0305  30FF               	movlw	255
  3376  0306  3DCD               	addwfc	dtoa@i+1,f
  3377  0307                     l1713:
  3378                           
  3379                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  3380  0307  300A               	movlw	10
  3381  0308  00A0               	movwf	___aomod@divisor
  3382  0309  01A1               	clrf	___aomod@divisor+1
  3383  030A  01A2               	clrf	___aomod@divisor+2
  3384  030B  01A3               	clrf	___aomod@divisor+3
  3385  030C  01A4               	clrf	___aomod@divisor+4
  3386  030D  01A5               	clrf	___aomod@divisor+5
  3387  030E  01A6               	clrf	___aomod@divisor+6
  3388  030F  01A7               	clrf	___aomod@divisor+7
  3389  0310  0844               	movf	dtoa@n,w
  3390  0311  00A8               	movwf	___aomod@dividend
  3391  0312  0845               	movf	dtoa@n+1,w
  3392  0313  00A9               	movwf	___aomod@dividend+1
  3393  0314  0846               	movf	dtoa@n+2,w
  3394  0315  00AA               	movwf	___aomod@dividend+2
  3395  0316  0847               	movf	dtoa@n+3,w
  3396  0317  00AB               	movwf	___aomod@dividend+3
  3397  0318  0848               	movf	dtoa@n+4,w
  3398  0319  00AC               	movwf	___aomod@dividend+4
  3399  031A  0849               	movf	dtoa@n+5,w
  3400  031B  00AD               	movwf	___aomod@dividend+5
  3401  031C  084A               	movf	dtoa@n+6,w
  3402  031D  00AE               	movwf	___aomod@dividend+6
  3403  031E  084B               	movf	dtoa@n+7,w
  3404  031F  00AF               	movwf	___aomod@dividend+7
  3405  0320  318F  2716  3182   	fcall	___aomod
  3406  0323  0140               	movlb	0	; select bank0
  3407  0324  0821               	movf	?___aomod+1,w
  3408  0325  00F4               	movwf	abs@a+1
  3409  0326  0820               	movf	?___aomod,w
  3410  0327  00F3               	movwf	abs@a
  3411  0328  318B  2387  3182   	fcall	_abs
  3412  032B  0873               	movf	?_abs,w
  3413  032C  3E30               	addlw	48
  3414  032D  0140               	movlb	0	; select bank0
  3415  032E  00B8               	movwf	??_dtoa
  3416  032F  084C               	movf	dtoa@i,w
  3417  0330  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3418  0331  0086               	movwf	6
  3419  0332  3001               	movlw	1	; select bank2/3
  3420  0333  0087               	movwf	7
  3421  0334  0838               	movf	??_dtoa,w
  3422  0335  0081               	movwf	1
  3423  0336                     l1715:
  3424                           
  3425                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  3426  0336  30FF               	movlw	255
  3427  0337  07BE               	addwf	dtoa@p,f
  3428  0338  30FF               	movlw	255
  3429  0339  3DBF               	addwfc	dtoa@p+1,f
  3430  033A                     l1717:
  3431                           
  3432                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  3433  033A  30FF               	movlw	255
  3434  033B  07C0               	addwf	dtoa@w,f
  3435  033C  30FF               	movlw	255
  3436  033D  3DC1               	addwfc	dtoa@w+1,f
  3437  033E                     l1719:
  3438                           
  3439                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  3440  033E  300A               	movlw	10
  3441  033F  00A0               	movwf	___aodiv@divisor
  3442  0340  01A1               	clrf	___aodiv@divisor+1
  3443  0341  01A2               	clrf	___aodiv@divisor+2
  3444  0342  01A3               	clrf	___aodiv@divisor+3
  3445  0343  01A4               	clrf	___aodiv@divisor+4
  3446  0344  01A5               	clrf	___aodiv@divisor+5
  3447  0345  01A6               	clrf	___aodiv@divisor+6
  3448  0346  01A7               	clrf	___aodiv@divisor+7
  3449  0347  0844               	movf	dtoa@n,w
  3450  0348  00A8               	movwf	___aodiv@dividend
  3451  0349  0845               	movf	dtoa@n+1,w
  3452  034A  00A9               	movwf	___aodiv@dividend+1
  3453  034B  0846               	movf	dtoa@n+2,w
  3454  034C  00AA               	movwf	___aodiv@dividend+2
  3455  034D  0847               	movf	dtoa@n+3,w
  3456  034E  00AB               	movwf	___aodiv@dividend+3
  3457  034F  0848               	movf	dtoa@n+4,w
  3458  0350  00AC               	movwf	___aodiv@dividend+4
  3459  0351  0849               	movf	dtoa@n+5,w
  3460  0352  00AD               	movwf	___aodiv@dividend+5
  3461  0353  084A               	movf	dtoa@n+6,w
  3462  0354  00AE               	movwf	___aodiv@dividend+6
  3463  0355  084B               	movf	dtoa@n+7,w
  3464  0356  00AF               	movwf	___aodiv@dividend+7
  3465  0357  3180  2043  3182   	fcall	___aodiv
  3466  035A  0140               	movlb	0	; select bank0
  3467  035B  0820               	movf	?___aodiv,w
  3468  035C  00C4               	movwf	dtoa@n
  3469  035D  0821               	movf	?___aodiv+1,w
  3470  035E  00C5               	movwf	dtoa@n+1
  3471  035F  0822               	movf	?___aodiv+2,w
  3472  0360  00C6               	movwf	dtoa@n+2
  3473  0361  0823               	movf	?___aodiv+3,w
  3474  0362  00C7               	movwf	dtoa@n+3
  3475  0363  0824               	movf	?___aodiv+4,w
  3476  0364  00C8               	movwf	dtoa@n+4
  3477  0365  0825               	movf	?___aodiv+5,w
  3478  0366  00C9               	movwf	dtoa@n+5
  3479  0367  0826               	movf	?___aodiv+6,w
  3480  0368  00CA               	movwf	dtoa@n+6
  3481  0369  0827               	movf	?___aodiv+7,w
  3482  036A  00CB               	movwf	dtoa@n+7
  3483  036B                     l755:	
  3484                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 318:     }
  3485                           
  3486                           
  3487                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3488  036B  0140               	movlb	0	; select bank0
  3489  036C  084D               	movf	dtoa@i+1,w
  3490  036D  3A80               	xorlw	128
  3491  036E  00B8               	movwf	??_dtoa
  3492  036F  3080               	movlw	128
  3493  0370  0238               	subwf	??_dtoa,w
  3494  0371  1D03               	skipz
  3495  0372  2B75               	goto	u1415
  3496  0373  3001               	movlw	1
  3497  0374  024C               	subwf	dtoa@i,w
  3498  0375                     u1415:
  3499  0375  1C03               	skipc
  3500  0376  2B78               	goto	u1411
  3501  0377  2B79               	goto	u1410
  3502  0378                     u1411:
  3503  0378  2BA6               	goto	l1729
  3504  0379                     u1410:
  3505  0379                     l1721:
  3506  0379  0140               	movlb	0	; select bank0
  3507  037A  0844               	movf	dtoa@n,w
  3508  037B  0445               	iorwf	dtoa@n+1,w
  3509  037C  0446               	iorwf	dtoa@n+2,w
  3510  037D  0447               	iorwf	dtoa@n+3,w
  3511  037E  0448               	iorwf	dtoa@n+4,w
  3512  037F  0449               	iorwf	dtoa@n+5,w
  3513  0380  044A               	iorwf	dtoa@n+6,w
  3514  0381  044B               	iorwf	dtoa@n+7,w
  3515  0382  1D03               	skipz
  3516  0383  2B85               	goto	u1421
  3517  0384  2B86               	goto	u1420
  3518  0385                     u1421:
  3519  0385  2B02               	goto	l1711
  3520  0386                     u1420:
  3521  0386                     l1723:
  3522  0386  083F               	movf	dtoa@p+1,w
  3523  0387  3A80               	xorlw	128
  3524  0388  00B8               	movwf	??_dtoa
  3525  0389  3080               	movlw	128
  3526  038A  0238               	subwf	??_dtoa,w
  3527  038B  1D03               	skipz
  3528  038C  2B8F               	goto	u1435
  3529  038D  3001               	movlw	1
  3530  038E  023E               	subwf	dtoa@p,w
  3531  038F                     u1435:
  3532  038F  1803               	skipnc
  3533  0390  2B92               	goto	u1431
  3534  0391  2B93               	goto	u1430
  3535  0392                     u1431:
  3536  0392  2B02               	goto	l1711
  3537  0393                     u1430:
  3538  0393                     l1725:
  3539  0393  0140               	movlb	0	; select bank0
  3540  0394  0841               	movf	dtoa@w+1,w
  3541  0395  3A80               	xorlw	128
  3542  0396  00B8               	movwf	??_dtoa
  3543  0397  3080               	movlw	128
  3544  0398  0238               	subwf	??_dtoa,w
  3545  0399  1D03               	skipz
  3546  039A  2B9D               	goto	u1445
  3547  039B  3001               	movlw	1
  3548  039C  0240               	subwf	dtoa@w,w
  3549  039D                     u1445:
  3550  039D  1C03               	skipc
  3551  039E  2BA0               	goto	u1441
  3552  039F  2BA1               	goto	u1440
  3553  03A0                     u1441:
  3554  03A0  2BA6               	goto	l1729
  3555  03A1                     u1440:
  3556  03A1                     l1727:
  3557  03A1  0141               	movlb	1	; select bank1
  3558  03A2  18AC               	btfsc	_flags^(0+128),1
  3559  03A3  2BA5               	goto	u1451
  3560  03A4  2BA6               	goto	u1450
  3561  03A5                     u1451:
  3562  03A5  2B02               	goto	l1711
  3563  03A6                     u1450:
  3564  03A6                     l1729:
  3565                           
  3566                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  3567  03A6  0140               	movlb	0	; select bank0
  3568  03A7  0842               	movf	dtoa@s,w
  3569  03A8  0443               	iorwf	dtoa@s+1,w
  3570  03A9  1D03               	btfss	3,2
  3571  03AA  2BAC               	goto	u1461
  3572  03AB  2BAD               	goto	u1460
  3573  03AC                     u1461:
  3574  03AC  2BB2               	goto	l1733
  3575  03AD                     u1460:
  3576  03AD                     l1731:
  3577  03AD  0141               	movlb	1	; select bank1
  3578  03AE  1D2C               	btfss	_flags^(0+128),2
  3579  03AF  2BB1               	goto	u1471
  3580  03B0  2BB2               	goto	u1470
  3581  03B1                     u1471:
  3582  03B1  2BCF               	goto	l1743
  3583  03B2                     u1470:
  3584  03B2                     l1733:
  3585                           
  3586                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  3587  03B2  30FF               	movlw	255
  3588  03B3  0140               	movlb	0	; select bank0
  3589  03B4  07CC               	addwf	dtoa@i,f
  3590  03B5  30FF               	movlw	255
  3591  03B6  3DCD               	addwfc	dtoa@i+1,f
  3592  03B7                     l1735:
  3593                           
  3594                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  3595  03B7  0842               	movf	dtoa@s,w
  3596  03B8  0443               	iorwf	dtoa@s+1,w
  3597  03B9  1D03               	btfss	3,2
  3598  03BA  2BBC               	goto	u1481
  3599  03BB  2BBD               	goto	u1480
  3600  03BC                     u1481:
  3601  03BC  2BC2               	goto	l1739
  3602  03BD                     u1480:
  3603  03BD                     l1737:
  3604  03BD  302B               	movlw	43
  3605  03BE  00BB               	movwf	_dtoa$683
  3606  03BF  3000               	movlw	0
  3607  03C0  00BC               	movwf	_dtoa$683+1
  3608  03C1  2BC6               	goto	l1741
  3609  03C2                     l1739:
  3610  03C2  302D               	movlw	45
  3611  03C3  00BB               	movwf	_dtoa$683
  3612  03C4  3000               	movlw	0
  3613  03C5  00BC               	movwf	_dtoa$683+1
  3614  03C6                     l1741:
  3615  03C6  083B               	movf	_dtoa$683,w
  3616  03C7  00B8               	movwf	??_dtoa
  3617  03C8  084C               	movf	dtoa@i,w
  3618  03C9  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3619  03CA  0086               	movwf	6
  3620  03CB  3001               	movlw	1	; select bank2/3
  3621  03CC  0087               	movwf	7
  3622  03CD  0838               	movf	??_dtoa,w
  3623  03CE  0081               	movwf	1
  3624  03CF                     l1743:
  3625                           
  3626                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  3627  03CF  0140               	movlb	0	; select bank0
  3628  03D0  084C               	movf	dtoa@i,w
  3629  03D1  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  3630  03D2  00B8               	movwf	??_dtoa
  3631  03D3  0838               	movf	??_dtoa,w
  3632  03D4  00A4               	movwf	pad@buf
  3633  03D5  0841               	movf	dtoa@w+1,w
  3634  03D6  00A6               	movwf	pad@p+1
  3635  03D7  0840               	movf	dtoa@w,w
  3636  03D8  00A5               	movwf	pad@p
  3637  03D9  083D               	movf	dtoa@fp,w
  3638  03DA  318D  250C  3182   	fcall	_pad
  3639  03DD  0140               	movlb	0	; select bank0
  3640  03DE  0825               	movf	?_pad+1,w
  3641  03DF  00B1               	movwf	?_dtoa+1
  3642  03E0  0824               	movf	?_pad,w
  3643  03E1  00B0               	movwf	?_dtoa
  3644  03E2                     l769:
  3645  03E2  0008               	return
  3646  03E3                     __end_of_dtoa:
  3647                           
  3648                           	psect	text6
  3649  0D0C                     __ptext6:	
  3650 ;; *************** function _pad *****************
  3651 ;; Defined at:
  3652 ;;		line 72 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;  fp              1    wreg     PTR struct _IO_FILE
  3655 ;;		 -> sprintf@f(5), 
  3656 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  3657 ;;		 -> dbuf(32), 
  3658 ;;  p               2    5[BANK0 ] int 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  3661 ;;		 -> sprintf@f(5), 
  3662 ;;  w               2    9[BANK0 ] int 
  3663 ;;  i               2    7[BANK0 ] int 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  2    4[BANK0 ] int 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3673 ;;      Params:         0       3       0       0       0       0       0       0
  3674 ;;      Locals:         0       5       0       0       0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0
  3676 ;;      Totals:         1       8       0       0       0       0       0       0
  3677 ;;Total ram usage:        9 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 3
  3680 ;; This function calls:
  3681 ;;		_fputc
  3682 ;;		_fputs
  3683 ;;		_strlen
  3684 ;; This function is called by:
  3685 ;;		_dtoa
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _pad
  3691  0D0C                     _pad:
  3692                           
  3693                           ;incstack = 0
  3694                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3695                           ;pad@fp stored from wreg
  3696  0D0C  0140               	movlb	0	; select bank0
  3697  0D0D  00AB               	movwf	pad@fp
  3698  0D0E                     l1663:
  3699                           
  3700                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.32/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3701  0D0E  0141               	movlb	1	; select bank1
  3702  0D0F  1C2C               	btfss	_flags^(0+128),0
  3703  0D10  2D12               	goto	u1281
  3704  0D11  2D13               	goto	u1280
  3705  0D12                     u1281:
  3706  0D12  2D1C               	goto	l1667
  3707  0D13                     u1280:
  3708  0D13                     l1665:
  3709                           
  3710                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3711  0D13  0140               	movlb	0	; select bank0
  3712  0D14  082B               	movf	pad@fp,w
  3713  0D15  00FC               	movwf	??_pad
  3714  0D16  087C               	movf	??_pad,w
  3715  0D17  00F8               	movwf	fputs@fp
  3716  0D18  0824               	movf	pad@buf,w
  3717  0D19  318C  2400  318D   	fcall	_fputs
  3718  0D1C                     l1667:
  3719                           
  3720                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3721  0D1C  0140               	movlb	0	; select bank0
  3722  0D1D  1BA6               	btfsc	pad@p+1,7
  3723  0D1E  2D20               	goto	u1291
  3724  0D1F  2D21               	goto	u1290
  3725  0D20                     u1291:
  3726  0D20  2D26               	goto	l1671
  3727  0D21                     u1290:
  3728  0D21                     l1669:
  3729  0D21  0826               	movf	pad@p+1,w
  3730  0D22  00AA               	movwf	pad@w+1
  3731  0D23  0825               	movf	pad@p,w
  3732  0D24  00A9               	movwf	pad@w
  3733  0D25  2D28               	goto	l738
  3734  0D26                     l1671:
  3735  0D26  01A9               	clrf	pad@w
  3736  0D27  01AA               	clrf	pad@w+1
  3737  0D28                     l738:
  3738                           
  3739                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3740  0D28  01A7               	clrf	pad@i
  3741  0D29  01A8               	clrf	pad@i+1
  3742                           
  3743                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3744  0D2A  2D3C               	goto	l1677
  3745  0D2B                     l1673:
  3746                           
  3747                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3748  0D2B  3020               	movlw	32
  3749  0D2C  00F0               	movwf	fputc@c
  3750  0D2D  3000               	movlw	0
  3751  0D2E  00F1               	movwf	fputc@c+1
  3752  0D2F  0140               	movlb	0	; select bank0
  3753  0D30  082B               	movf	pad@fp,w
  3754  0D31  00FC               	movwf	??_pad
  3755  0D32  087C               	movf	??_pad,w
  3756  0D33  00F2               	movwf	fputc@fp
  3757  0D34  318C  24BD  318D   	fcall	_fputc
  3758  0D37                     l1675:
  3759                           
  3760                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3761  0D37  3001               	movlw	1
  3762  0D38  0140               	movlb	0	; select bank0
  3763  0D39  07A7               	addwf	pad@i,f
  3764  0D3A  3000               	movlw	0
  3765  0D3B  3DA8               	addwfc	pad@i+1,f
  3766  0D3C                     l1677:
  3767                           
  3768                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3769  0D3C  0828               	movf	pad@i+1,w
  3770  0D3D  3A80               	xorlw	128
  3771  0D3E  00FC               	movwf	??_pad
  3772  0D3F  082A               	movf	pad@w+1,w
  3773  0D40  3A80               	xorlw	128
  3774  0D41  027C               	subwf	??_pad,w
  3775  0D42  1D03               	skipz
  3776  0D43  2D46               	goto	u1305
  3777  0D44  0829               	movf	pad@w,w
  3778  0D45  0227               	subwf	pad@i,w
  3779  0D46                     u1305:
  3780  0D46  1C03               	skipc
  3781  0D47  2D49               	goto	u1301
  3782  0D48  2D4A               	goto	u1300
  3783  0D49                     u1301:
  3784  0D49  2D2B               	goto	l1673
  3785  0D4A                     u1300:
  3786  0D4A                     l741:
  3787                           
  3788                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3789  0D4A  0141               	movlb	1	; select bank1
  3790  0D4B  182C               	btfsc	_flags^(0+128),0
  3791  0D4C  2D4E               	goto	u1311
  3792  0D4D  2D4F               	goto	u1310
  3793  0D4E                     u1311:
  3794  0D4E  2D58               	goto	l1681
  3795  0D4F                     u1310:
  3796  0D4F                     l1679:
  3797                           
  3798                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3799  0D4F  0140               	movlb	0	; select bank0
  3800  0D50  082B               	movf	pad@fp,w
  3801  0D51  00FC               	movwf	??_pad
  3802  0D52  087C               	movf	??_pad,w
  3803  0D53  00F8               	movwf	fputs@fp
  3804  0D54  0824               	movf	pad@buf,w
  3805  0D55  318C  2400  318D   	fcall	_fputs
  3806  0D58                     l1681:
  3807                           
  3808                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  3809  0D58  0140               	movlb	0	; select bank0
  3810  0D59  0824               	movf	pad@buf,w
  3811  0D5A  318B  23A1  318D   	fcall	_strlen
  3812  0D5D  0140               	movlb	0	; select bank0
  3813  0D5E  0829               	movf	pad@w,w
  3814  0D5F  0770               	addwf	?_strlen,w
  3815  0D60  00A4               	movwf	?_pad
  3816  0D61  082A               	movf	pad@w+1,w
  3817  0D62  3D71               	addwfc	?_strlen+1,w
  3818  0D63  00A5               	movwf	?_pad+1
  3819  0D64                     l743:
  3820  0D64  0008               	return
  3821  0D65                     __end_of_pad:
  3822                           
  3823                           	psect	text7
  3824  0BA1                     __ptext7:	
  3825 ;; *************** function _strlen *****************
  3826 ;; Defined at:
  3827 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  s               1    wreg     PTR const unsigned char 
  3830 ;;		 -> dbuf(32), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  s               1    4[COMMON] PTR const unsigned char 
  3833 ;;		 -> dbuf(32), 
  3834 ;;  a               1    3[COMMON] PTR const unsigned char 
  3835 ;;		 -> dbuf(32), 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  2    0[COMMON] unsigned int 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3845 ;;      Params:         2       0       0       0       0       0       0       0
  3846 ;;      Locals:         2       0       0       0       0       0       0       0
  3847 ;;      Temps:          1       0       0       0       0       0       0       0
  3848 ;;      Totals:         5       0       0       0       0       0       0       0
  3849 ;;Total ram usage:        5 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_pad
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           
  3859                           ;psect for function _strlen
  3860  0BA1                     _strlen:
  3861                           
  3862                           ;incstack = 0
  3863                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3864                           ;strlen@s stored from wreg
  3865  0BA1  00F4               	movwf	strlen@s
  3866  0BA2                     l1585:
  3867  0BA2  0874               	movf	strlen@s,w
  3868  0BA3  00F2               	movwf	??_strlen
  3869  0BA4  0872               	movf	??_strlen,w
  3870  0BA5  00F3               	movwf	strlen@a
  3871  0BA6  2BAB               	goto	l1589
  3872  0BA7                     l1587:
  3873  0BA7  3001               	movlw	1
  3874  0BA8  00F2               	movwf	??_strlen
  3875  0BA9  0872               	movf	??_strlen,w
  3876  0BAA  07F4               	addwf	strlen@s,f
  3877  0BAB                     l1589:
  3878  0BAB  0874               	movf	strlen@s,w
  3879  0BAC  0086               	movwf	6
  3880  0BAD  3001               	movlw	1	; select bank2/3
  3881  0BAE  0087               	movwf	7
  3882  0BAF  0801               	movf	1,w
  3883  0BB0  1D03               	btfss	3,2
  3884  0BB1  2BB3               	goto	u1061
  3885  0BB2  2BB4               	goto	u1060
  3886  0BB3                     u1061:
  3887  0BB3  2BA7               	goto	l1587
  3888  0BB4                     u1060:
  3889  0BB4                     l1591:
  3890  0BB4  0873               	movf	strlen@a,w
  3891  0BB5  0274               	subwf	strlen@s,w
  3892  0BB6  00F0               	movwf	?_strlen
  3893  0BB7  01F1               	clrf	?_strlen+1
  3894  0BB8  1BF0               	btfsc	?_strlen,7
  3895  0BB9  03F1               	decf	?_strlen+1,f
  3896  0BBA                     l831:
  3897  0BBA  0008               	return
  3898  0BBB                     __end_of_strlen:
  3899                           
  3900                           	psect	text8
  3901  0C00                     __ptext8:	
  3902 ;; *************** function _fputs *****************
  3903 ;; Defined at:
  3904 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  3905 ;; Parameters:    Size  Location     Type
  3906 ;;  s               1    wreg     PTR const unsigned char 
  3907 ;;		 -> dbuf(32), 
  3908 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  3909 ;;		 -> sprintf@f(5), 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  3912 ;;		 -> dbuf(32), 
  3913 ;;  i               2    1[BANK0 ] int 
  3914 ;;  c               1    0[BANK0 ] unsigned char 
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  2    8[COMMON] int 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3924 ;;      Params:         1       0       0       0       0       0       0       0
  3925 ;;      Locals:         0       4       0       0       0       0       0       0
  3926 ;;      Temps:          3       0       0       0       0       0       0       0
  3927 ;;      Totals:         4       4       0       0       0       0       0       0
  3928 ;;Total ram usage:        8 bytes
  3929 ;; Hardware stack levels used: 1
  3930 ;; Hardware stack levels required when called: 2
  3931 ;; This function calls:
  3932 ;;		_fputc
  3933 ;; This function is called by:
  3934 ;;		_pad
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _fputs
  3940  0C00                     _fputs:
  3941                           
  3942                           ;incstack = 0
  3943                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3944                           ;fputs@s stored from wreg
  3945  0C00  0140               	movlb	0	; select bank0
  3946  0C01  00A3               	movwf	fputs@s
  3947  0C02                     l1577:
  3948  0C02  01A1               	clrf	fputs@i
  3949  0C03  01A2               	clrf	fputs@i+1
  3950  0C04  2C18               	goto	l1583
  3951  0C05                     l1579:
  3952  0C05  0820               	movf	fputs@c,w
  3953  0C06  00F9               	movwf	??_fputs
  3954  0C07  01FA               	clrf	??_fputs+1
  3955  0C08  0879               	movf	??_fputs,w
  3956  0C09  00F0               	movwf	fputc@c
  3957  0C0A  087A               	movf	??_fputs+1,w
  3958  0C0B  00F1               	movwf	fputc@c+1
  3959  0C0C  0878               	movf	fputs@fp,w
  3960  0C0D  00FB               	movwf	??_fputs+2
  3961  0C0E  087B               	movf	??_fputs+2,w
  3962  0C0F  00F2               	movwf	fputc@fp
  3963  0C10  318C  24BD  318C   	fcall	_fputc
  3964  0C13                     l1581:
  3965  0C13  3001               	movlw	1
  3966  0C14  0140               	movlb	0	; select bank0
  3967  0C15  07A1               	addwf	fputs@i,f
  3968  0C16  3000               	movlw	0
  3969  0C17  3DA2               	addwfc	fputs@i+1,f
  3970  0C18                     l1583:
  3971  0C18  0821               	movf	fputs@i,w
  3972  0C19  0723               	addwf	fputs@s,w
  3973  0C1A  00F9               	movwf	??_fputs
  3974  0C1B  0879               	movf	??_fputs,w
  3975  0C1C  0086               	movwf	6
  3976  0C1D  3001               	movlw	1	; select bank2/3
  3977  0C1E  0087               	movwf	7
  3978  0C1F  0801               	movf	1,w
  3979  0C20  00FA               	movwf	??_fputs+1
  3980  0C21  087A               	movf	??_fputs+1,w
  3981  0C22  00A0               	movwf	fputs@c
  3982  0C23  0820               	movf	fputs@c,w
  3983  0C24  1D03               	btfss	3,2
  3984  0C25  2C27               	goto	u1051
  3985  0C26  2C28               	goto	u1050
  3986  0C27                     u1051:
  3987  0C27  2C05               	goto	l1579
  3988  0C28                     u1050:
  3989  0C28                     l822:
  3990  0C28  0008               	return
  3991  0C29                     __end_of_fputs:
  3992                           
  3993                           	psect	text9
  3994  0CBD                     __ptext9:	
  3995 ;; *************** function _fputc *****************
  3996 ;; Defined at:
  3997 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  c               2    0[COMMON] int 
  4000 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  4001 ;;		 -> sprintf@f(5), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2    0[COMMON] int 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4013 ;;      Params:         3       0       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0
  4015 ;;      Temps:          5       0       0       0       0       0       0       0
  4016 ;;      Totals:         8       0       0       0       0       0       0       0
  4017 ;;Total ram usage:        8 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 1
  4020 ;; This function calls:
  4021 ;;		_putch
  4022 ;; This function is called by:
  4023 ;;		_pad
  4024 ;;		_vfpfcnvrt
  4025 ;;		_fputs
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function _fputc
  4031  0CBD                     _fputc:
  4032  0CBD                     l1561:	
  4033                           ;incstack = 0
  4034                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4035                           
  4036  0CBD  0872               	movf	fputc@fp,w
  4037  0CBE  1903               	btfsc	3,2
  4038  0CBF  2CC1               	goto	u1011
  4039  0CC0  2CC2               	goto	u1010
  4040  0CC1                     u1011:
  4041  0CC1  2CC7               	goto	l1565
  4042  0CC2                     u1010:
  4043  0CC2                     l1563:
  4044  0CC2  0872               	movf	fputc@fp,w
  4045  0CC3  1D03               	btfss	3,2
  4046  0CC4  2CC6               	goto	u1021
  4047  0CC5  2CC7               	goto	u1020
  4048  0CC6                     u1021:
  4049  0CC6  2CCC               	goto	l1567
  4050  0CC7                     u1020:
  4051  0CC7                     l1565:
  4052  0CC7  0870               	movf	fputc@c,w
  4053  0CC8  3180  200A  318C   	fcall	_putch
  4054  0CCB  2D0B               	goto	l814
  4055  0CCC                     l1567:
  4056  0CCC  0872               	movf	fputc@fp,w
  4057  0CCD  3E03               	addlw	3
  4058  0CCE  0086               	movwf	6
  4059  0CCF  0187               	clrf	7
  4060  0CD0  0016               	moviw fsr1++
  4061  0CD1  0401               	iorwf	1,w
  4062  0CD2  1903               	btfsc	3,2
  4063  0CD3  2CD5               	goto	u1031
  4064  0CD4  2CD6               	goto	u1030
  4065  0CD5                     u1031:
  4066  0CD5  2CF3               	goto	l1571
  4067  0CD6                     u1030:
  4068  0CD6                     l1569:
  4069  0CD6  0872               	movf	fputc@fp,w
  4070  0CD7  3E03               	addlw	3
  4071  0CD8  0086               	movwf	6
  4072  0CD9  0187               	clrf	7
  4073  0CDA  3F40               	moviw [0]fsr1
  4074  0CDB  00F3               	movwf	??_fputc
  4075  0CDC  3F41               	moviw [1]fsr1
  4076  0CDD  00F4               	movwf	??_fputc+1
  4077  0CDE  0A72               	incf	fputc@fp,w
  4078  0CDF  0086               	movwf	6
  4079  0CE0  0187               	clrf	7
  4080  0CE1  3F40               	moviw [0]fsr1
  4081  0CE2  00F5               	movwf	??_fputc+2
  4082  0CE3  3F41               	moviw [1]fsr1
  4083  0CE4  00F6               	movwf	??_fputc+3
  4084  0CE5  0876               	movf	??_fputc+3,w
  4085  0CE6  3A80               	xorlw	128
  4086  0CE7  00F7               	movwf	??_fputc+4
  4087  0CE8  0874               	movf	??_fputc+1,w
  4088  0CE9  3A80               	xorlw	128
  4089  0CEA  0277               	subwf	??_fputc+4,w
  4090  0CEB  1D03               	skipz
  4091  0CEC  2CEF               	goto	u1045
  4092  0CED  0873               	movf	??_fputc,w
  4093  0CEE  0275               	subwf	??_fputc+2,w
  4094  0CEF                     u1045:
  4095  0CEF  1803               	skipnc
  4096  0CF0  2CF2               	goto	u1041
  4097  0CF1  2CF3               	goto	u1040
  4098  0CF2                     u1041:
  4099  0CF2  2D0B               	goto	l814
  4100  0CF3                     u1040:
  4101  0CF3                     l1571:
  4102  0CF3  0870               	movf	fputc@c,w
  4103  0CF4  00F3               	movwf	??_fputc
  4104  0CF5  0872               	movf	fputc@fp,w
  4105  0CF6  0086               	movwf	6
  4106  0CF7  0187               	clrf	7
  4107  0CF8  0A72               	incf	fputc@fp,w
  4108  0CF9  0084               	movwf	4
  4109  0CFA  0185               	clrf	5
  4110  0CFB  0800               	movf	0,w
  4111  0CFC  0701               	addwf	1,w
  4112  0CFD  00F4               	movwf	??_fputc+1
  4113  0CFE  0874               	movf	??_fputc+1,w
  4114  0CFF  0086               	movwf	6
  4115  0D00  0187               	clrf	7
  4116  0D01  0873               	movf	??_fputc,w
  4117  0D02  0081               	movwf	1
  4118  0D03                     l1573:
  4119  0D03  0A72               	incf	fputc@fp,w
  4120  0D04  0086               	movwf	6
  4121  0D05  0187               	clrf	7
  4122  0D06  3001               	movlw	1
  4123  0D07  0781               	addwf	1,f
  4124  0D08  3141               	addfsr 1,1
  4125  0D09  1803               	skipnc
  4126  0D0A  0A81               	incf	1,f
  4127  0D0B                     l814:
  4128  0D0B  0008               	return
  4129  0D0C                     __end_of_fputc:
  4130                           
  4131                           	psect	text10
  4132  000A                     __ptext10:	
  4133 ;; *************** function _putch *****************
  4134 ;; Defined at:
  4135 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  c               1    wreg     unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  c               1    0[COMMON] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4149 ;;      Params:         0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_fputc
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _putch
  4164  000A                     _putch:
  4165  000A                     l825:	
  4166                           ;incstack = 0
  4167                           ; Regs used in _putch: [wreg]
  4168                           
  4169  000A  0008               	return
  4170  000B                     __end_of_putch:
  4171                           
  4172                           	psect	text11
  4173  0B87                     __ptext11:	
  4174 ;; *************** function _abs *****************
  4175 ;; Defined at:
  4176 ;;		line 1 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;  a               2    3[COMMON] int 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2    3[COMMON] int 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4190 ;;      Params:         2       0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0
  4192 ;;      Temps:          2       0       0       0       0       0       0       0
  4193 ;;      Totals:         4       0       0       0       0       0       0       0
  4194 ;;Total ram usage:        4 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_dtoa
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           
  4204                           ;psect for function _abs
  4205  0B87                     _abs:
  4206  0B87                     l1685:	
  4207                           ;incstack = 0
  4208                           ; Regs used in _abs: [wreg+status,2+status,0]
  4209                           
  4210  0B87  0874               	movf	abs@a+1,w
  4211  0B88  3A80               	xorlw	128
  4212  0B89  00F5               	movwf	??_abs
  4213  0B8A  3080               	movlw	128
  4214  0B8B  0275               	subwf	??_abs,w
  4215  0B8C  1D03               	skipz
  4216  0B8D  2B90               	goto	u1325
  4217  0B8E  3001               	movlw	1
  4218  0B8F  0273               	subwf	abs@a,w
  4219  0B90                     u1325:
  4220  0B90  1803               	skipnc
  4221  0B91  2B93               	goto	u1321
  4222  0B92  2B94               	goto	u1320
  4223  0B93                     u1321:
  4224  0B93  2BA0               	goto	l799
  4225  0B94                     u1320:
  4226  0B94                     l1687:
  4227  0B94  0973               	comf	abs@a,w
  4228  0B95  00F5               	movwf	??_abs
  4229  0B96  0974               	comf	abs@a+1,w
  4230  0B97  00F6               	movwf	??_abs+1
  4231  0B98  0AF5               	incf	??_abs,f
  4232  0B99  1903               	skipnz
  4233  0B9A  0AF6               	incf	??_abs+1,f
  4234  0B9B  0875               	movf	??_abs,w
  4235  0B9C  00F3               	movwf	?_abs
  4236  0B9D  0876               	movf	??_abs+1,w
  4237  0B9E  00F4               	movwf	?_abs+1
  4238  0B9F  2BA0               	goto	l802
  4239  0BA0                     l799:
  4240  0BA0                     l802:
  4241  0BA0  0008               	return
  4242  0BA1                     __end_of_abs:
  4243                           
  4244                           	psect	text12
  4245  0F16                     __ptext12:	
  4246 ;; *************** function ___aomod *****************
  4247 ;; Defined at:
  4248 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  divisor         8    0[BANK0 ] long long 
  4251 ;;  dividend        8    8[BANK0 ] long long 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  sign            1    2[COMMON] unsigned char 
  4254 ;;  counter         1    1[COMMON] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  8    0[BANK0 ] long long 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4264 ;;      Params:         0      16       0       0       0       0       0       0
  4265 ;;      Locals:         2       0       0       0       0       0       0       0
  4266 ;;      Temps:          1       0       0       0       0       0       0       0
  4267 ;;      Totals:         3      16       0       0       0       0       0       0
  4268 ;;Total ram usage:       19 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; This function calls:
  4271 ;;		Nothing
  4272 ;; This function is called by:
  4273 ;;		_dtoa
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function ___aomod
  4279  0F16                     ___aomod:
  4280  0F16                     l1633:	
  4281                           ;incstack = 0
  4282                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  4283                           
  4284  0F16  01F2               	clrf	___aomod@sign
  4285  0F17                     l1635:
  4286  0F17  3028               	movlw	low ___aomod@dividend
  4287  0F18  0086               	movwf	6
  4288  0F19  3000               	movlw	high ___aomod@dividend
  4289  0F1A  0087               	movwf	7
  4290  0F1B  3F47               	moviw [7]fsr1
  4291  0F1C  00F0               	movwf	??___aomod
  4292  0F1D  1FF0               	btfss	??___aomod,7
  4293  0F1E  2F20               	goto	u1181
  4294  0F1F  2F21               	goto	u1180
  4295  0F20                     u1181:
  4296  0F20  2F42               	goto	l1639
  4297  0F21                     u1180:
  4298  0F21                     l1637:
  4299  0F21  0140               	movlb	0	; select bank0
  4300  0F22  09A8               	comf	___aomod@dividend,f
  4301  0F23  09A9               	comf	___aomod@dividend+1,f
  4302  0F24  09AA               	comf	___aomod@dividend+2,f
  4303  0F25  09AB               	comf	___aomod@dividend+3,f
  4304  0F26  09AC               	comf	___aomod@dividend+4,f
  4305  0F27  09AD               	comf	___aomod@dividend+5,f
  4306  0F28  09AE               	comf	___aomod@dividend+6,f
  4307  0F29  09AF               	comf	___aomod@dividend+7,f
  4308  0F2A  0AA8               	incf	___aomod@dividend,f
  4309  0F2B  1D03               	skipz
  4310  0F2C  2F40               	goto	u119lld
  4311  0F2D  0AA9               	incf	___aomod@dividend+1,f
  4312  0F2E  1D03               	skipz
  4313  0F2F  2F40               	goto	u119lld
  4314  0F30  0AAA               	incf	___aomod@dividend+2,f
  4315  0F31  1D03               	skipz
  4316  0F32  2F40               	goto	u119lld
  4317  0F33  0AAB               	incf	___aomod@dividend+3,f
  4318  0F34  1D03               	skipz
  4319  0F35  2F40               	goto	u119lld
  4320  0F36  0AAC               	incf	___aomod@dividend+4,f
  4321  0F37  1D03               	skipz
  4322  0F38  2F40               	goto	u119lld
  4323  0F39  0AAD               	incf	___aomod@dividend+5,f
  4324  0F3A  1D03               	skipz
  4325  0F3B  2F40               	goto	u119lld
  4326  0F3C  0AAE               	incf	___aomod@dividend+6,f
  4327  0F3D  1D03               	skipz
  4328  0F3E  2F40               	goto	u119lld
  4329  0F3F  0AAF               	incf	___aomod@dividend+7,f
  4330  0F40                     u119lld:
  4331  0F40  01F2               	clrf	___aomod@sign
  4332  0F41  0AF2               	incf	___aomod@sign,f
  4333  0F42                     l1639:
  4334  0F42  3020               	movlw	low ___aomod@divisor
  4335  0F43  0086               	movwf	6
  4336  0F44  3000               	movlw	high ___aomod@divisor
  4337  0F45  0087               	movwf	7
  4338  0F46  3F47               	moviw [7]fsr1
  4339  0F47  00F0               	movwf	??___aomod
  4340  0F48  1FF0               	btfss	??___aomod,7
  4341  0F49  2F4B               	goto	u1201
  4342  0F4A  2F4C               	goto	u1200
  4343  0F4B                     u1201:
  4344  0F4B  2F6B               	goto	l1643
  4345  0F4C                     u1200:
  4346  0F4C                     l1641:
  4347  0F4C  0140               	movlb	0	; select bank0
  4348  0F4D  09A0               	comf	___aomod@divisor,f
  4349  0F4E  09A1               	comf	___aomod@divisor+1,f
  4350  0F4F  09A2               	comf	___aomod@divisor+2,f
  4351  0F50  09A3               	comf	___aomod@divisor+3,f
  4352  0F51  09A4               	comf	___aomod@divisor+4,f
  4353  0F52  09A5               	comf	___aomod@divisor+5,f
  4354  0F53  09A6               	comf	___aomod@divisor+6,f
  4355  0F54  09A7               	comf	___aomod@divisor+7,f
  4356  0F55  0AA0               	incf	___aomod@divisor,f
  4357  0F56  1D03               	skipz
  4358  0F57  2F6B               	goto	u121lld
  4359  0F58  0AA1               	incf	___aomod@divisor+1,f
  4360  0F59  1D03               	skipz
  4361  0F5A  2F6B               	goto	u121lld
  4362  0F5B  0AA2               	incf	___aomod@divisor+2,f
  4363  0F5C  1D03               	skipz
  4364  0F5D  2F6B               	goto	u121lld
  4365  0F5E  0AA3               	incf	___aomod@divisor+3,f
  4366  0F5F  1D03               	skipz
  4367  0F60  2F6B               	goto	u121lld
  4368  0F61  0AA4               	incf	___aomod@divisor+4,f
  4369  0F62  1D03               	skipz
  4370  0F63  2F6B               	goto	u121lld
  4371  0F64  0AA5               	incf	___aomod@divisor+5,f
  4372  0F65  1D03               	skipz
  4373  0F66  2F6B               	goto	u121lld
  4374  0F67  0AA6               	incf	___aomod@divisor+6,f
  4375  0F68  1D03               	skipz
  4376  0F69  2F6B               	goto	u121lld
  4377  0F6A  0AA7               	incf	___aomod@divisor+7,f
  4378  0F6B                     u121lld:
  4379  0F6B                     l1643:
  4380  0F6B  0140               	movlb	0	; select bank0
  4381  0F6C  0820               	movf	___aomod@divisor,w
  4382  0F6D  0421               	iorwf	___aomod@divisor+1,w
  4383  0F6E  0422               	iorwf	___aomod@divisor+2,w
  4384  0F6F  0423               	iorwf	___aomod@divisor+3,w
  4385  0F70  0424               	iorwf	___aomod@divisor+4,w
  4386  0F71  0425               	iorwf	___aomod@divisor+5,w
  4387  0F72  0426               	iorwf	___aomod@divisor+6,w
  4388  0F73  0427               	iorwf	___aomod@divisor+7,w
  4389  0F74  1903               	skipnz
  4390  0F75  2F77               	goto	u1221
  4391  0F76  2F78               	goto	u1220
  4392  0F77                     u1221:
  4393  0F77  2FCB               	goto	l1659
  4394  0F78                     u1220:
  4395  0F78                     l1645:
  4396  0F78  01F1               	clrf	___aomod@counter
  4397  0F79  0AF1               	incf	___aomod@counter,f
  4398  0F7A  2F87               	goto	l1651
  4399  0F7B                     l1647:
  4400  0F7B  35A0               	lslf	___aomod@divisor,f
  4401  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  4402  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  4403  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  4404  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  4405  0F80  0DA5               	rlf	___aomod@divisor+5,f
  4406  0F81  0DA6               	rlf	___aomod@divisor+6,f
  4407  0F82  0DA7               	rlf	___aomod@divisor+7,f
  4408  0F83                     l1649:
  4409  0F83  3001               	movlw	1
  4410  0F84  00F0               	movwf	??___aomod
  4411  0F85  0870               	movf	??___aomod,w
  4412  0F86  07F1               	addwf	___aomod@counter,f
  4413  0F87                     l1651:
  4414  0F87  1FA7               	btfss	___aomod@divisor+7,7
  4415  0F88  2F8A               	goto	u1231
  4416  0F89  2F8B               	goto	u1230
  4417  0F8A                     u1231:
  4418  0F8A  2F7B               	goto	l1647
  4419  0F8B                     u1230:
  4420  0F8B                     l1653:
  4421  0F8B  0827               	movf	___aomod@divisor+7,w
  4422  0F8C  022F               	subwf	___aomod@dividend+7,w
  4423  0F8D  1D03               	skipz
  4424  0F8E  2FA9               	goto	u1245
  4425  0F8F  0826               	movf	___aomod@divisor+6,w
  4426  0F90  022E               	subwf	___aomod@dividend+6,w
  4427  0F91  1D03               	skipz
  4428  0F92  2FA9               	goto	u1245
  4429  0F93  0825               	movf	___aomod@divisor+5,w
  4430  0F94  022D               	subwf	___aomod@dividend+5,w
  4431  0F95  1D03               	skipz
  4432  0F96  2FA9               	goto	u1245
  4433  0F97  0824               	movf	___aomod@divisor+4,w
  4434  0F98  022C               	subwf	___aomod@dividend+4,w
  4435  0F99  1D03               	skipz
  4436  0F9A  2FA9               	goto	u1245
  4437  0F9B  0823               	movf	___aomod@divisor+3,w
  4438  0F9C  022B               	subwf	___aomod@dividend+3,w
  4439  0F9D  1D03               	skipz
  4440  0F9E  2FA9               	goto	u1245
  4441  0F9F  0822               	movf	___aomod@divisor+2,w
  4442  0FA0  022A               	subwf	___aomod@dividend+2,w
  4443  0FA1  1D03               	skipz
  4444  0FA2  2FA9               	goto	u1245
  4445  0FA3  0821               	movf	___aomod@divisor+1,w
  4446  0FA4  0229               	subwf	___aomod@dividend+1,w
  4447  0FA5  1D03               	skipz
  4448  0FA6  2FA9               	goto	u1245
  4449  0FA7  0820               	movf	___aomod@divisor,w
  4450  0FA8  0228               	subwf	___aomod@dividend,w
  4451  0FA9                     u1245:
  4452  0FA9  1C03               	skipc
  4453  0FAA  2FAC               	goto	u1241
  4454  0FAB  2FAD               	goto	u1240
  4455  0FAC                     u1241:
  4456  0FAC  2FBD               	goto	l1657
  4457  0FAD                     u1240:
  4458  0FAD                     l1655:
  4459  0FAD  0820               	movf	___aomod@divisor,w
  4460  0FAE  02A8               	subwf	___aomod@dividend,f
  4461  0FAF  0821               	movf	___aomod@divisor+1,w
  4462  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  4463  0FB1  0822               	movf	___aomod@divisor+2,w
  4464  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  4465  0FB3  0823               	movf	___aomod@divisor+3,w
  4466  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  4467  0FB5  0824               	movf	___aomod@divisor+4,w
  4468  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  4469  0FB7  0825               	movf	___aomod@divisor+5,w
  4470  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  4471  0FB9  0826               	movf	___aomod@divisor+6,w
  4472  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  4473  0FBB  0827               	movf	___aomod@divisor+7,w
  4474  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  4475  0FBD                     l1657:
  4476  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  4477  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  4478  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  4479  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  4480  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  4481  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  4482  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  4483  0FC4  0CA0               	rrf	___aomod@divisor,f
  4484  0FC5  3001               	movlw	1
  4485  0FC6  02F1               	subwf	___aomod@counter,f
  4486  0FC7  1D03               	btfss	3,2
  4487  0FC8  2FCA               	goto	u1251
  4488  0FC9  2FCB               	goto	u1250
  4489  0FCA                     u1251:
  4490  0FCA  2F8B               	goto	l1653
  4491  0FCB                     u1250:
  4492  0FCB                     l1659:
  4493  0FCB  0872               	movf	___aomod@sign,w
  4494  0FCC  1903               	btfsc	3,2
  4495  0FCD  2FCF               	goto	u1261
  4496  0FCE  2FD0               	goto	u1260
  4497  0FCF                     u1261:
  4498  0FCF  2FEE               	goto	l361
  4499  0FD0                     u1260:
  4500  0FD0                     l1661:
  4501  0FD0  09A8               	comf	___aomod@dividend,f
  4502  0FD1  09A9               	comf	___aomod@dividend+1,f
  4503  0FD2  09AA               	comf	___aomod@dividend+2,f
  4504  0FD3  09AB               	comf	___aomod@dividend+3,f
  4505  0FD4  09AC               	comf	___aomod@dividend+4,f
  4506  0FD5  09AD               	comf	___aomod@dividend+5,f
  4507  0FD6  09AE               	comf	___aomod@dividend+6,f
  4508  0FD7  09AF               	comf	___aomod@dividend+7,f
  4509  0FD8  0AA8               	incf	___aomod@dividend,f
  4510  0FD9  1D03               	skipz
  4511  0FDA  2FEE               	goto	u127lld
  4512  0FDB  0AA9               	incf	___aomod@dividend+1,f
  4513  0FDC  1D03               	skipz
  4514  0FDD  2FEE               	goto	u127lld
  4515  0FDE  0AAA               	incf	___aomod@dividend+2,f
  4516  0FDF  1D03               	skipz
  4517  0FE0  2FEE               	goto	u127lld
  4518  0FE1  0AAB               	incf	___aomod@dividend+3,f
  4519  0FE2  1D03               	skipz
  4520  0FE3  2FEE               	goto	u127lld
  4521  0FE4  0AAC               	incf	___aomod@dividend+4,f
  4522  0FE5  1D03               	skipz
  4523  0FE6  2FEE               	goto	u127lld
  4524  0FE7  0AAD               	incf	___aomod@dividend+5,f
  4525  0FE8  1D03               	skipz
  4526  0FE9  2FEE               	goto	u127lld
  4527  0FEA  0AAE               	incf	___aomod@dividend+6,f
  4528  0FEB  1D03               	skipz
  4529  0FEC  2FEE               	goto	u127lld
  4530  0FED  0AAF               	incf	___aomod@dividend+7,f
  4531  0FEE                     u127lld:
  4532  0FEE                     l361:
  4533  0FEE  0140               	movlb	0	; select bank0
  4534  0FEF  0828               	movf	___aomod@dividend,w
  4535  0FF0  00A0               	movwf	?___aomod
  4536  0FF1  0829               	movf	___aomod@dividend+1,w
  4537  0FF2  00A1               	movwf	?___aomod+1
  4538  0FF3  082A               	movf	___aomod@dividend+2,w
  4539  0FF4  00A2               	movwf	?___aomod+2
  4540  0FF5  082B               	movf	___aomod@dividend+3,w
  4541  0FF6  00A3               	movwf	?___aomod+3
  4542  0FF7  082C               	movf	___aomod@dividend+4,w
  4543  0FF8  00A4               	movwf	?___aomod+4
  4544  0FF9  082D               	movf	___aomod@dividend+5,w
  4545  0FFA  00A5               	movwf	?___aomod+5
  4546  0FFB  082E               	movf	___aomod@dividend+6,w
  4547  0FFC  00A6               	movwf	?___aomod+6
  4548  0FFD  082F               	movf	___aomod@dividend+7,w
  4549  0FFE  00A7               	movwf	?___aomod+7
  4550  0FFF                     l362:
  4551  0FFF  0008               	return
  4552  1000                     __end_of___aomod:
  4553                           
  4554                           	psect	text13
  4555  0043                     __ptext13:	
  4556 ;; *************** function ___aodiv *****************
  4557 ;; Defined at:
  4558 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  divisor         8    0[BANK0 ] long long 
  4561 ;;  dividend        8    8[BANK0 ] long long 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  quotient        8    3[COMMON] long long 
  4564 ;;  sign            1    2[COMMON] unsigned char 
  4565 ;;  counter         1    1[COMMON] unsigned char 
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  8    0[BANK0 ] long long 
  4568 ;; Registers used:
  4569 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4575 ;;      Params:         0      16       0       0       0       0       0       0
  4576 ;;      Locals:        10       0       0       0       0       0       0       0
  4577 ;;      Temps:          1       0       0       0       0       0       0       0
  4578 ;;      Totals:        11      16       0       0       0       0       0       0
  4579 ;;Total ram usage:       27 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_dtoa
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function ___aodiv
  4590  0043                     ___aodiv:
  4591  0043                     l1595:	
  4592                           ;incstack = 0
  4593                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  4594                           
  4595  0043  01F2               	clrf	___aodiv@sign
  4596  0044                     l1597:
  4597  0044  3020               	movlw	low ___aodiv@divisor
  4598  0045  0086               	movwf	6
  4599  0046  3000               	movlw	high ___aodiv@divisor
  4600  0047  0087               	movwf	7
  4601  0048  3F47               	moviw [7]fsr1
  4602  0049  00F0               	movwf	??___aodiv
  4603  004A  1FF0               	btfss	??___aodiv,7
  4604  004B  284D               	goto	u1071
  4605  004C  284E               	goto	u1070
  4606  004D                     u1071:
  4607  004D  286F               	goto	l1601
  4608  004E                     u1070:
  4609  004E                     l1599:
  4610  004E  0140               	movlb	0	; select bank0
  4611  004F  09A0               	comf	___aodiv@divisor,f
  4612  0050  09A1               	comf	___aodiv@divisor+1,f
  4613  0051  09A2               	comf	___aodiv@divisor+2,f
  4614  0052  09A3               	comf	___aodiv@divisor+3,f
  4615  0053  09A4               	comf	___aodiv@divisor+4,f
  4616  0054  09A5               	comf	___aodiv@divisor+5,f
  4617  0055  09A6               	comf	___aodiv@divisor+6,f
  4618  0056  09A7               	comf	___aodiv@divisor+7,f
  4619  0057  0AA0               	incf	___aodiv@divisor,f
  4620  0058  1D03               	skipz
  4621  0059  286D               	goto	u108lld
  4622  005A  0AA1               	incf	___aodiv@divisor+1,f
  4623  005B  1D03               	skipz
  4624  005C  286D               	goto	u108lld
  4625  005D  0AA2               	incf	___aodiv@divisor+2,f
  4626  005E  1D03               	skipz
  4627  005F  286D               	goto	u108lld
  4628  0060  0AA3               	incf	___aodiv@divisor+3,f
  4629  0061  1D03               	skipz
  4630  0062  286D               	goto	u108lld
  4631  0063  0AA4               	incf	___aodiv@divisor+4,f
  4632  0064  1D03               	skipz
  4633  0065  286D               	goto	u108lld
  4634  0066  0AA5               	incf	___aodiv@divisor+5,f
  4635  0067  1D03               	skipz
  4636  0068  286D               	goto	u108lld
  4637  0069  0AA6               	incf	___aodiv@divisor+6,f
  4638  006A  1D03               	skipz
  4639  006B  286D               	goto	u108lld
  4640  006C  0AA7               	incf	___aodiv@divisor+7,f
  4641  006D                     u108lld:
  4642  006D  01F2               	clrf	___aodiv@sign
  4643  006E  0AF2               	incf	___aodiv@sign,f
  4644  006F                     l1601:
  4645  006F  3028               	movlw	low ___aodiv@dividend
  4646  0070  0086               	movwf	6
  4647  0071  3000               	movlw	high ___aodiv@dividend
  4648  0072  0087               	movwf	7
  4649  0073  3F47               	moviw [7]fsr1
  4650  0074  00F0               	movwf	??___aodiv
  4651  0075  1FF0               	btfss	??___aodiv,7
  4652  0076  2878               	goto	u1091
  4653  0077  2879               	goto	u1090
  4654  0078                     u1091:
  4655  0078  289C               	goto	l1607
  4656  0079                     u1090:
  4657  0079                     l1603:
  4658  0079  0140               	movlb	0	; select bank0
  4659  007A  09A8               	comf	___aodiv@dividend,f
  4660  007B  09A9               	comf	___aodiv@dividend+1,f
  4661  007C  09AA               	comf	___aodiv@dividend+2,f
  4662  007D  09AB               	comf	___aodiv@dividend+3,f
  4663  007E  09AC               	comf	___aodiv@dividend+4,f
  4664  007F  09AD               	comf	___aodiv@dividend+5,f
  4665  0080  09AE               	comf	___aodiv@dividend+6,f
  4666  0081  09AF               	comf	___aodiv@dividend+7,f
  4667  0082  0AA8               	incf	___aodiv@dividend,f
  4668  0083  1D03               	skipz
  4669  0084  2898               	goto	u110lld
  4670  0085  0AA9               	incf	___aodiv@dividend+1,f
  4671  0086  1D03               	skipz
  4672  0087  2898               	goto	u110lld
  4673  0088  0AAA               	incf	___aodiv@dividend+2,f
  4674  0089  1D03               	skipz
  4675  008A  2898               	goto	u110lld
  4676  008B  0AAB               	incf	___aodiv@dividend+3,f
  4677  008C  1D03               	skipz
  4678  008D  2898               	goto	u110lld
  4679  008E  0AAC               	incf	___aodiv@dividend+4,f
  4680  008F  1D03               	skipz
  4681  0090  2898               	goto	u110lld
  4682  0091  0AAD               	incf	___aodiv@dividend+5,f
  4683  0092  1D03               	skipz
  4684  0093  2898               	goto	u110lld
  4685  0094  0AAE               	incf	___aodiv@dividend+6,f
  4686  0095  1D03               	skipz
  4687  0096  2898               	goto	u110lld
  4688  0097  0AAF               	incf	___aodiv@dividend+7,f
  4689  0098                     u110lld:
  4690  0098                     l1605:
  4691  0098  3001               	movlw	1
  4692  0099  00F0               	movwf	??___aodiv
  4693  009A  0870               	movf	??___aodiv,w
  4694  009B  06F2               	xorwf	___aodiv@sign,f
  4695  009C                     l1607:
  4696  009C  3073               	movlw	low ___aodiv@quotient
  4697  009D  0086               	movwf	6
  4698  009E  3000               	movlw	high ___aodiv@quotient
  4699  009F  0087               	movwf	7
  4700  00A0  3008               	movlw	8
  4701  00A1  00F0               	movwf	??___aodiv
  4702  00A2  3000               	movlw	0
  4703  00A3                     u1110:
  4704  00A3  001E               	movwi fsr1++
  4705  00A4  0BF0               	decfsz	??___aodiv,f
  4706  00A5  28A3               	goto	u1110
  4707  00A6                     l1609:
  4708  00A6  0140               	movlb	0	; select bank0
  4709  00A7  0820               	movf	___aodiv@divisor,w
  4710  00A8  0421               	iorwf	___aodiv@divisor+1,w
  4711  00A9  0422               	iorwf	___aodiv@divisor+2,w
  4712  00AA  0423               	iorwf	___aodiv@divisor+3,w
  4713  00AB  0424               	iorwf	___aodiv@divisor+4,w
  4714  00AC  0425               	iorwf	___aodiv@divisor+5,w
  4715  00AD  0426               	iorwf	___aodiv@divisor+6,w
  4716  00AE  0427               	iorwf	___aodiv@divisor+7,w
  4717  00AF  1903               	skipnz
  4718  00B0  28B2               	goto	u1121
  4719  00B1  28B3               	goto	u1120
  4720  00B2                     u1121:
  4721  00B2  290F               	goto	l1629
  4722  00B3                     u1120:
  4723  00B3                     l1611:
  4724  00B3  01F1               	clrf	___aodiv@counter
  4725  00B4  0AF1               	incf	___aodiv@counter,f
  4726  00B5  28C2               	goto	l1617
  4727  00B6                     l1613:
  4728  00B6  35A0               	lslf	___aodiv@divisor,f
  4729  00B7  0DA1               	rlf	___aodiv@divisor+1,f
  4730  00B8  0DA2               	rlf	___aodiv@divisor+2,f
  4731  00B9  0DA3               	rlf	___aodiv@divisor+3,f
  4732  00BA  0DA4               	rlf	___aodiv@divisor+4,f
  4733  00BB  0DA5               	rlf	___aodiv@divisor+5,f
  4734  00BC  0DA6               	rlf	___aodiv@divisor+6,f
  4735  00BD  0DA7               	rlf	___aodiv@divisor+7,f
  4736  00BE                     l1615:
  4737  00BE  3001               	movlw	1
  4738  00BF  00F0               	movwf	??___aodiv
  4739  00C0  0870               	movf	??___aodiv,w
  4740  00C1  07F1               	addwf	___aodiv@counter,f
  4741  00C2                     l1617:
  4742  00C2  1FA7               	btfss	___aodiv@divisor+7,7
  4743  00C3  28C5               	goto	u1131
  4744  00C4  28C6               	goto	u1130
  4745  00C5                     u1131:
  4746  00C5  28B6               	goto	l1613
  4747  00C6                     u1130:
  4748  00C6                     l1619:
  4749  00C6  35F3               	lslf	___aodiv@quotient,f
  4750  00C7  0DF4               	rlf	___aodiv@quotient+1,f
  4751  00C8  0DF5               	rlf	___aodiv@quotient+2,f
  4752  00C9  0DF6               	rlf	___aodiv@quotient+3,f
  4753  00CA  0DF7               	rlf	___aodiv@quotient+4,f
  4754  00CB  0DF8               	rlf	___aodiv@quotient+5,f
  4755  00CC  0DF9               	rlf	___aodiv@quotient+6,f
  4756  00CD  0DFA               	rlf	___aodiv@quotient+7,f
  4757  00CE                     l1621:
  4758  00CE  0827               	movf	___aodiv@divisor+7,w
  4759  00CF  022F               	subwf	___aodiv@dividend+7,w
  4760  00D0  1D03               	skipz
  4761  00D1  28EC               	goto	u1145
  4762  00D2  0826               	movf	___aodiv@divisor+6,w
  4763  00D3  022E               	subwf	___aodiv@dividend+6,w
  4764  00D4  1D03               	skipz
  4765  00D5  28EC               	goto	u1145
  4766  00D6  0825               	movf	___aodiv@divisor+5,w
  4767  00D7  022D               	subwf	___aodiv@dividend+5,w
  4768  00D8  1D03               	skipz
  4769  00D9  28EC               	goto	u1145
  4770  00DA  0824               	movf	___aodiv@divisor+4,w
  4771  00DB  022C               	subwf	___aodiv@dividend+4,w
  4772  00DC  1D03               	skipz
  4773  00DD  28EC               	goto	u1145
  4774  00DE  0823               	movf	___aodiv@divisor+3,w
  4775  00DF  022B               	subwf	___aodiv@dividend+3,w
  4776  00E0  1D03               	skipz
  4777  00E1  28EC               	goto	u1145
  4778  00E2  0822               	movf	___aodiv@divisor+2,w
  4779  00E3  022A               	subwf	___aodiv@dividend+2,w
  4780  00E4  1D03               	skipz
  4781  00E5  28EC               	goto	u1145
  4782  00E6  0821               	movf	___aodiv@divisor+1,w
  4783  00E7  0229               	subwf	___aodiv@dividend+1,w
  4784  00E8  1D03               	skipz
  4785  00E9  28EC               	goto	u1145
  4786  00EA  0820               	movf	___aodiv@divisor,w
  4787  00EB  0228               	subwf	___aodiv@dividend,w
  4788  00EC                     u1145:
  4789  00EC  1C03               	skipc
  4790  00ED  28EF               	goto	u1141
  4791  00EE  28F0               	goto	u1140
  4792  00EF                     u1141:
  4793  00EF  2901               	goto	l1627
  4794  00F0                     u1140:
  4795  00F0                     l1623:
  4796  00F0  0820               	movf	___aodiv@divisor,w
  4797  00F1  02A8               	subwf	___aodiv@dividend,f
  4798  00F2  0821               	movf	___aodiv@divisor+1,w
  4799  00F3  3BA9               	subwfb	___aodiv@dividend+1,f
  4800  00F4  0822               	movf	___aodiv@divisor+2,w
  4801  00F5  3BAA               	subwfb	___aodiv@dividend+2,f
  4802  00F6  0823               	movf	___aodiv@divisor+3,w
  4803  00F7  3BAB               	subwfb	___aodiv@dividend+3,f
  4804  00F8  0824               	movf	___aodiv@divisor+4,w
  4805  00F9  3BAC               	subwfb	___aodiv@dividend+4,f
  4806  00FA  0825               	movf	___aodiv@divisor+5,w
  4807  00FB  3BAD               	subwfb	___aodiv@dividend+5,f
  4808  00FC  0826               	movf	___aodiv@divisor+6,w
  4809  00FD  3BAE               	subwfb	___aodiv@dividend+6,f
  4810  00FE  0827               	movf	___aodiv@divisor+7,w
  4811  00FF  3BAF               	subwfb	___aodiv@dividend+7,f
  4812  0100                     l1625:
  4813  0100  1473               	bsf	___aodiv@quotient,0
  4814  0101                     l1627:
  4815  0101  36A7               	lsrf	___aodiv@divisor+7,f
  4816  0102  0CA6               	rrf	___aodiv@divisor+6,f
  4817  0103  0CA5               	rrf	___aodiv@divisor+5,f
  4818  0104  0CA4               	rrf	___aodiv@divisor+4,f
  4819  0105  0CA3               	rrf	___aodiv@divisor+3,f
  4820  0106  0CA2               	rrf	___aodiv@divisor+2,f
  4821  0107  0CA1               	rrf	___aodiv@divisor+1,f
  4822  0108  0CA0               	rrf	___aodiv@divisor,f
  4823  0109  3001               	movlw	1
  4824  010A  02F1               	subwf	___aodiv@counter,f
  4825  010B  1D03               	btfss	3,2
  4826  010C  290E               	goto	u1151
  4827  010D  290F               	goto	u1150
  4828  010E                     u1151:
  4829  010E  28C6               	goto	l1619
  4830  010F                     u1150:
  4831  010F                     l1629:
  4832  010F  0872               	movf	___aodiv@sign,w
  4833  0110  1903               	btfsc	3,2
  4834  0111  2913               	goto	u1161
  4835  0112  2914               	goto	u1160
  4836  0113                     u1161:
  4837  0113  2932               	goto	l348
  4838  0114                     u1160:
  4839  0114                     l1631:
  4840  0114  09F3               	comf	___aodiv@quotient,f
  4841  0115  09F4               	comf	___aodiv@quotient+1,f
  4842  0116  09F5               	comf	___aodiv@quotient+2,f
  4843  0117  09F6               	comf	___aodiv@quotient+3,f
  4844  0118  09F7               	comf	___aodiv@quotient+4,f
  4845  0119  09F8               	comf	___aodiv@quotient+5,f
  4846  011A  09F9               	comf	___aodiv@quotient+6,f
  4847  011B  09FA               	comf	___aodiv@quotient+7,f
  4848  011C  0AF3               	incf	___aodiv@quotient,f
  4849  011D  1D03               	skipz
  4850  011E  2932               	goto	u117lld
  4851  011F  0AF4               	incf	___aodiv@quotient+1,f
  4852  0120  1D03               	skipz
  4853  0121  2932               	goto	u117lld
  4854  0122  0AF5               	incf	___aodiv@quotient+2,f
  4855  0123  1D03               	skipz
  4856  0124  2932               	goto	u117lld
  4857  0125  0AF6               	incf	___aodiv@quotient+3,f
  4858  0126  1D03               	skipz
  4859  0127  2932               	goto	u117lld
  4860  0128  0AF7               	incf	___aodiv@quotient+4,f
  4861  0129  1D03               	skipz
  4862  012A  2932               	goto	u117lld
  4863  012B  0AF8               	incf	___aodiv@quotient+5,f
  4864  012C  1D03               	skipz
  4865  012D  2932               	goto	u117lld
  4866  012E  0AF9               	incf	___aodiv@quotient+6,f
  4867  012F  1D03               	skipz
  4868  0130  2932               	goto	u117lld
  4869  0131  0AFA               	incf	___aodiv@quotient+7,f
  4870  0132                     u117lld:
  4871  0132                     l348:
  4872  0132  0873               	movf	___aodiv@quotient,w
  4873  0133  0140               	movlb	0	; select bank0
  4874  0134  00A0               	movwf	?___aodiv
  4875  0135  0874               	movf	___aodiv@quotient+1,w
  4876  0136  00A1               	movwf	?___aodiv+1
  4877  0137  0875               	movf	___aodiv@quotient+2,w
  4878  0138  00A2               	movwf	?___aodiv+2
  4879  0139  0876               	movf	___aodiv@quotient+3,w
  4880  013A  00A3               	movwf	?___aodiv+3
  4881  013B  0877               	movf	___aodiv@quotient+4,w
  4882  013C  00A4               	movwf	?___aodiv+4
  4883  013D  0878               	movf	___aodiv@quotient+5,w
  4884  013E  00A5               	movwf	?___aodiv+5
  4885  013F  0879               	movf	___aodiv@quotient+6,w
  4886  0140  00A6               	movwf	?___aodiv+6
  4887  0141  087A               	movf	___aodiv@quotient+7,w
  4888  0142  00A7               	movwf	?___aodiv+7
  4889  0143                     l349:
  4890  0143  0008               	return
  4891  0144                     __end_of___aodiv:
  4892                           
  4893                           	psect	text14
  4894  0C29                     __ptext14:	
  4895 ;; *************** function _Lcd_Out2 *****************
  4896 ;; Defined at:
  4897 ;;		line 116 in file "./flex_lcd.h"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  y               1    wreg     unsigned char 
  4900 ;;  x               1    3[COMMON] unsigned char 
  4901 ;;  buffer          1    4[COMMON] PTR unsigned char 
  4902 ;;		 -> CONT(20), s(20), 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  y               1    7[COMMON] unsigned char 
  4905 ;;  data            1    8[COMMON] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4915 ;;      Params:         2       0       0       0       0       0       0       0
  4916 ;;      Locals:         2       0       0       0       0       0       0       0
  4917 ;;      Temps:          2       0       0       0       0       0       0       0
  4918 ;;      Totals:         6       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        6 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 1
  4922 ;; This function calls:
  4923 ;;		_Lcd_Chr_CP
  4924 ;;		_Lcd_Cmd
  4925 ;; This function is called by:
  4926 ;;		_menu
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           
  4932                           ;psect for function _Lcd_Out2
  4933  0C29                     _Lcd_Out2:
  4934                           
  4935                           ;incstack = 0
  4936                           ; Regs used in _Lcd_Out2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4937                           ;Lcd_Out2@y stored from wreg
  4938  0C29  00F7               	movwf	Lcd_Out2@y
  4939  0C2A                     l1891:
  4940                           
  4941                           ;./flex_lcd.h: 116: void Lcd_Out2(unsigned char y, unsigned char x, char *buffer);./flex
      +                          _lcd.h: 117: {;./flex_lcd.h: 118: unsigned char data;;./flex_lcd.h: 119: switch (y)
  4942  0C2A  2C43               	goto	l1903
  4943  0C2B                     l1893:
  4944  0C2B  0873               	movf	Lcd_Out2@x,w
  4945  0C2C  3E80               	addlw	128
  4946  0C2D  00F5               	movwf	??_Lcd_Out2
  4947  0C2E  0875               	movf	??_Lcd_Out2,w
  4948  0C2F  00F8               	movwf	Lcd_Out2@data
  4949  0C30  2C59               	goto	l1905
  4950  0C31                     l1895:
  4951  0C31  0873               	movf	Lcd_Out2@x,w
  4952  0C32  3EC0               	addlw	192
  4953  0C33  00F5               	movwf	??_Lcd_Out2
  4954  0C34  0875               	movf	??_Lcd_Out2,w
  4955  0C35  00F8               	movwf	Lcd_Out2@data
  4956  0C36  2C59               	goto	l1905
  4957  0C37                     l1897:
  4958  0C37  0873               	movf	Lcd_Out2@x,w
  4959  0C38  3E94               	addlw	148
  4960  0C39  00F5               	movwf	??_Lcd_Out2
  4961  0C3A  0875               	movf	??_Lcd_Out2,w
  4962  0C3B  00F8               	movwf	Lcd_Out2@data
  4963  0C3C  2C59               	goto	l1905
  4964  0C3D                     l1899:
  4965  0C3D  0873               	movf	Lcd_Out2@x,w
  4966  0C3E  3ED4               	addlw	212
  4967  0C3F  00F5               	movwf	??_Lcd_Out2
  4968  0C40  0875               	movf	??_Lcd_Out2,w
  4969  0C41  00F8               	movwf	Lcd_Out2@data
  4970  0C42  2C59               	goto	l1905
  4971  0C43                     l1903:
  4972  0C43  0877               	movf	Lcd_Out2@y,w
  4973  0C44  00F5               	movwf	??_Lcd_Out2
  4974  0C45  01F6               	clrf	??_Lcd_Out2+1
  4975                           
  4976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4977                           ; Switch size 1, requested type "simple"
  4978                           ; Number of cases is 1, Range of values is 0 to 0
  4979                           ; switch strategies available:
  4980                           ; Name         Instructions Cycles
  4981                           ; simple_byte            4     3 (average)
  4982                           ; direct_byte            8     6 (fixed)
  4983                           ; jumptable            260     6 (fixed)
  4984                           ;	Chosen strategy is simple_byte
  4985  0C46  0876               	movf	??_Lcd_Out2+1,w
  4986  0C47  3A00               	xorlw	0	; case 0
  4987  0C48  1903               	skipnz
  4988  0C49  2C4B               	goto	l2279
  4989  0C4A  2C59               	goto	l1905
  4990  0C4B                     l2279:
  4991                           
  4992                           ; Switch size 1, requested type "simple"
  4993                           ; Number of cases is 4, Range of values is 1 to 4
  4994                           ; switch strategies available:
  4995                           ; Name         Instructions Cycles
  4996                           ; simple_byte           13     7 (average)
  4997                           ; direct_byte           17     9 (fixed)
  4998                           ; jumptable            263     9 (fixed)
  4999                           ;	Chosen strategy is simple_byte
  5000  0C4B  0875               	movf	??_Lcd_Out2,w
  5001  0C4C  3A01               	xorlw	1	; case 1
  5002  0C4D  1903               	skipnz
  5003  0C4E  2C2B               	goto	l1893
  5004  0C4F  3A03               	xorlw	3	; case 2
  5005  0C50  1903               	skipnz
  5006  0C51  2C31               	goto	l1895
  5007  0C52  3A01               	xorlw	1	; case 3
  5008  0C53  1903               	skipnz
  5009  0C54  2C37               	goto	l1897
  5010  0C55  3A07               	xorlw	7	; case 4
  5011  0C56  1903               	skipnz
  5012  0C57  2C3D               	goto	l1899
  5013  0C58  2C59               	goto	l1905
  5014  0C59                     l1905:
  5015                           
  5016                           ;./flex_lcd.h: 127: Lcd_Cmd(data);
  5017  0C59  0878               	movf	Lcd_Out2@data,w
  5018  0C5A  318D  25F1  318C   	fcall	_Lcd_Cmd
  5019                           
  5020                           ;./flex_lcd.h: 128: while(*buffer)
  5021  0C5D  2C69               	goto	l1911
  5022  0C5E                     l1907:
  5023                           
  5024                           ;./flex_lcd.h: 129: {;./flex_lcd.h: 130:     Lcd_Chr_CP(*buffer);
  5025  0C5E  0874               	movf	Lcd_Out2@buffer,w
  5026  0C5F  0086               	movwf	6
  5027  0C60  0187               	clrf	7
  5028  0C61  0801               	movf	1,w
  5029  0C62  318E  2683  318C   	fcall	_Lcd_Chr_CP
  5030  0C65                     l1909:
  5031                           
  5032                           ;./flex_lcd.h: 131:     buffer++;
  5033  0C65  3001               	movlw	1
  5034  0C66  00F5               	movwf	??_Lcd_Out2
  5035  0C67  0875               	movf	??_Lcd_Out2,w
  5036  0C68  07F4               	addwf	Lcd_Out2@buffer,f
  5037  0C69                     l1911:
  5038                           
  5039                           ;./flex_lcd.h: 128: while(*buffer)
  5040  0C69  0874               	movf	Lcd_Out2@buffer,w
  5041  0C6A  0086               	movwf	6
  5042  0C6B  0187               	clrf	7
  5043  0C6C  0801               	movf	1,w
  5044  0C6D  1D03               	btfss	3,2
  5045  0C6E  2C70               	goto	u1681
  5046  0C6F  2C71               	goto	u1680
  5047  0C70                     u1681:
  5048  0C70  2C5E               	goto	l1907
  5049  0C71                     u1680:
  5050  0C71                     l91:
  5051  0C71  0008               	return
  5052  0C72                     __end_of_Lcd_Out2:
  5053                           
  5054                           	psect	text15
  5055  0BBB                     __ptext15:	
  5056 ;; *************** function _PIN_MANAGER_Initialize *****************
  5057 ;; Defined at:
  5058 ;;		line 70 in file "Control_paso.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5072 ;;      Params:         0       0       0       0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0
  5075 ;;      Totals:         0       0       0       0       0       0       0       0
  5076 ;;Total ram usage:        0 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _PIN_MANAGER_Initialize
  5087  0BBB                     _PIN_MANAGER_Initialize:
  5088  0BBB                     l1981:	
  5089                           ;incstack = 0
  5090                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5091                           
  5092                           
  5093                           ;Control_paso.c: 73:   LATA = 0x00;
  5094  0BBB  0140               	movlb	0	; select bank0
  5095  0BBC  0198               	clrf	24	;volatile
  5096                           
  5097                           ;Control_paso.c: 74:   LATB = 0x00;
  5098  0BBD  0199               	clrf	25	;volatile
  5099                           
  5100                           ;Control_paso.c: 75:   LATC = 0x00;
  5101  0BBE  019A               	clrf	26	;volatile
  5102  0BBF                     l1983:
  5103                           
  5104                           ;Control_paso.c: 78:   TRISA = 0b00110000;
  5105  0BBF  3030               	movlw	48
  5106  0BC0  0092               	movwf	18	;volatile
  5107  0BC1                     l1985:
  5108                           
  5109                           ;Control_paso.c: 79:   TRISB = 0b10100000;
  5110  0BC1  30A0               	movlw	160
  5111  0BC2  0093               	movwf	19	;volatile
  5112  0BC3                     l1987:
  5113                           
  5114                           ;Control_paso.c: 80:   TRISC = 0b00000100;
  5115  0BC3  3004               	movlw	4
  5116  0BC4  0094               	movwf	20	;volatile
  5117  0BC5                     l1989:
  5118                           
  5119                           ;Control_paso.c: 83:   ANSELC = 0;
  5120  0BC5  017E               	movlb	62	; select bank62
  5121  0BC6  01CE               	clrf	78	;volatile
  5122  0BC7                     l1991:
  5123                           
  5124                           ;Control_paso.c: 84:   ANSELB = 0;
  5125  0BC7  01C3               	clrf	67	;volatile
  5126  0BC8                     l1993:
  5127                           
  5128                           ;Control_paso.c: 85:   ANSELA = 0;
  5129  0BC8  01B8               	clrf	56	;volatile
  5130                           
  5131                           ;Control_paso.c: 92:   WPUC = 0x04;
  5132  0BC9  3004               	movlw	4
  5133  0BCA  00CF               	movwf	79	;volatile
  5134                           
  5135                           ;Control_paso.c: 95:   ODCONA = 0x04;
  5136  0BCB  3004               	movlw	4
  5137  0BCC  00BA               	movwf	58	;volatile
  5138  0BCD                     l1995:
  5139                           
  5140                           ;Control_paso.c: 96:   ODCONB = 0x00;
  5141  0BCD  01C5               	clrf	69	;volatile
  5142  0BCE                     l1997:
  5143                           
  5144                           ;Control_paso.c: 97:   ODCONC = 0x00;
  5145  0BCE  01D0               	clrf	80	;volatile
  5146                           
  5147                           ;Control_paso.c: 100:   SLRCONA = 0x37;
  5148  0BCF  3037               	movlw	55
  5149  0BD0  00BB               	movwf	59	;volatile
  5150                           
  5151                           ;Control_paso.c: 101:   SLRCONB = 0xFF;
  5152  0BD1  30FF               	movlw	255
  5153  0BD2  00C6               	movwf	70	;volatile
  5154                           
  5155                           ;Control_paso.c: 102:   SLRCONC = 0xFF;
  5156  0BD3  30FF               	movlw	255
  5157  0BD4  00D1               	movwf	81	;volatile
  5158                           
  5159                           ;Control_paso.c: 105:   INLVLA = 0x3F;
  5160  0BD5  303F               	movlw	63
  5161  0BD6  00BC               	movwf	60	;volatile
  5162                           
  5163                           ;Control_paso.c: 106:   INLVLB = 0xFF;
  5164  0BD7  30FF               	movlw	255
  5165  0BD8  00C7               	movwf	71	;volatile
  5166                           
  5167                           ;Control_paso.c: 107:   INLVLC = 0xFF;
  5168  0BD9  30FF               	movlw	255
  5169  0BDA  00D2               	movwf	82	;volatile
  5170  0BDB                     l100:
  5171  0BDB  0008               	return
  5172  0BDC                     __end_of_PIN_MANAGER_Initialize:
  5173                           
  5174                           	psect	text16
  5175  0C72                     __ptext16:	
  5176 ;; *************** function _Lcd_Out *****************
  5177 ;; Defined at:
  5178 ;;		line 95 in file "./flex_lcd.h"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  y               1    wreg     unsigned char 
  5181 ;;  x               1    3[COMMON] unsigned char 
  5182 ;;  buffer          2    4[COMMON] PTR const unsigned char 
  5183 ;;		 -> STR_10(8), 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  y               1    8[COMMON] unsigned char 
  5186 ;;  data            1    9[COMMON] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5196 ;;      Params:         3       0       0       0       0       0       0       0
  5197 ;;      Locals:         2       0       0       0       0       0       0       0
  5198 ;;      Temps:          2       0       0       0       0       0       0       0
  5199 ;;      Totals:         7       0       0       0       0       0       0       0
  5200 ;;Total ram usage:        7 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 1
  5203 ;; This function calls:
  5204 ;;		_Lcd_Chr_CP
  5205 ;;		_Lcd_Cmd
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           
  5212                           ;psect for function _Lcd_Out
  5213  0C72                     _Lcd_Out:
  5214                           
  5215                           ;incstack = 0
  5216                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5217                           ;Lcd_Out@y stored from wreg
  5218  0C72  00F8               	movwf	Lcd_Out@y
  5219  0C73                     l1955:
  5220                           
  5221                           ;./flex_lcd.h: 95: void Lcd_Out(unsigned char y, unsigned char x, const char *buffer);./
      +                          flex_lcd.h: 96: {;./flex_lcd.h: 97: unsigned char data;;./flex_lcd.h: 98: switch (y)
  5222  0C73  2C8C               	goto	l1967
  5223  0C74                     l1957:
  5224  0C74  0873               	movf	Lcd_Out@x,w
  5225  0C75  3E80               	addlw	128
  5226  0C76  00F6               	movwf	??_Lcd_Out
  5227  0C77  0876               	movf	??_Lcd_Out,w
  5228  0C78  00F9               	movwf	Lcd_Out@data
  5229  0C79  2CA2               	goto	l1969
  5230  0C7A                     l1959:
  5231  0C7A  0873               	movf	Lcd_Out@x,w
  5232  0C7B  3EC0               	addlw	192
  5233  0C7C  00F6               	movwf	??_Lcd_Out
  5234  0C7D  0876               	movf	??_Lcd_Out,w
  5235  0C7E  00F9               	movwf	Lcd_Out@data
  5236  0C7F  2CA2               	goto	l1969
  5237  0C80                     l1961:
  5238  0C80  0873               	movf	Lcd_Out@x,w
  5239  0C81  3E94               	addlw	148
  5240  0C82  00F6               	movwf	??_Lcd_Out
  5241  0C83  0876               	movf	??_Lcd_Out,w
  5242  0C84  00F9               	movwf	Lcd_Out@data
  5243  0C85  2CA2               	goto	l1969
  5244  0C86                     l1963:
  5245  0C86  0873               	movf	Lcd_Out@x,w
  5246  0C87  3ED4               	addlw	212
  5247  0C88  00F6               	movwf	??_Lcd_Out
  5248  0C89  0876               	movf	??_Lcd_Out,w
  5249  0C8A  00F9               	movwf	Lcd_Out@data
  5250  0C8B  2CA2               	goto	l1969
  5251  0C8C                     l1967:
  5252  0C8C  0878               	movf	Lcd_Out@y,w
  5253  0C8D  00F6               	movwf	??_Lcd_Out
  5254  0C8E  01F7               	clrf	??_Lcd_Out+1
  5255                           
  5256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5257                           ; Switch size 1, requested type "simple"
  5258                           ; Number of cases is 1, Range of values is 0 to 0
  5259                           ; switch strategies available:
  5260                           ; Name         Instructions Cycles
  5261                           ; simple_byte            4     3 (average)
  5262                           ; direct_byte            8     6 (fixed)
  5263                           ; jumptable            260     6 (fixed)
  5264                           ;	Chosen strategy is simple_byte
  5265  0C8F  0877               	movf	??_Lcd_Out+1,w
  5266  0C90  3A00               	xorlw	0	; case 0
  5267  0C91  1903               	skipnz
  5268  0C92  2C94               	goto	l2281
  5269  0C93  2CA2               	goto	l1969
  5270  0C94                     l2281:
  5271                           
  5272                           ; Switch size 1, requested type "simple"
  5273                           ; Number of cases is 4, Range of values is 1 to 4
  5274                           ; switch strategies available:
  5275                           ; Name         Instructions Cycles
  5276                           ; simple_byte           13     7 (average)
  5277                           ; direct_byte           17     9 (fixed)
  5278                           ; jumptable            263     9 (fixed)
  5279                           ;	Chosen strategy is simple_byte
  5280  0C94  0876               	movf	??_Lcd_Out,w
  5281  0C95  3A01               	xorlw	1	; case 1
  5282  0C96  1903               	skipnz
  5283  0C97  2C74               	goto	l1957
  5284  0C98  3A03               	xorlw	3	; case 2
  5285  0C99  1903               	skipnz
  5286  0C9A  2C7A               	goto	l1959
  5287  0C9B  3A01               	xorlw	1	; case 3
  5288  0C9C  1903               	skipnz
  5289  0C9D  2C80               	goto	l1961
  5290  0C9E  3A07               	xorlw	7	; case 4
  5291  0C9F  1903               	skipnz
  5292  0CA0  2C86               	goto	l1963
  5293  0CA1  2CA2               	goto	l1969
  5294  0CA2                     l1969:
  5295                           
  5296                           ;./flex_lcd.h: 106: Lcd_Cmd(data);
  5297  0CA2  0879               	movf	Lcd_Out@data,w
  5298  0CA3  318D  25F1  318C   	fcall	_Lcd_Cmd
  5299                           
  5300                           ;./flex_lcd.h: 107: while(*buffer)
  5301  0CA6  2CB3               	goto	l1975
  5302  0CA7                     l1971:
  5303                           
  5304                           ;./flex_lcd.h: 108: {;./flex_lcd.h: 109:     Lcd_Chr_CP(*buffer);
  5305  0CA7  0874               	movf	Lcd_Out@buffer,w
  5306  0CA8  0084               	movwf	4
  5307  0CA9  0875               	movf	Lcd_Out@buffer+1,w
  5308  0CAA  0085               	movwf	5
  5309  0CAB  0800               	movf	0,w	;code access
  5310  0CAC  318E  2683  318C   	fcall	_Lcd_Chr_CP
  5311  0CAF                     l1973:
  5312                           
  5313                           ;./flex_lcd.h: 110:     buffer++;
  5314  0CAF  3001               	movlw	1
  5315  0CB0  07F4               	addwf	Lcd_Out@buffer,f
  5316  0CB1  3000               	movlw	0
  5317  0CB2  3DF5               	addwfc	Lcd_Out@buffer+1,f
  5318  0CB3                     l1975:
  5319                           
  5320                           ;./flex_lcd.h: 107: while(*buffer)
  5321  0CB3  0874               	movf	Lcd_Out@buffer,w
  5322  0CB4  0084               	movwf	4
  5323  0CB5  0875               	movf	Lcd_Out@buffer+1,w
  5324  0CB6  0085               	movwf	5
  5325  0CB7  0012               	moviw fsr0++
  5326  0CB8  1D03               	btfss	3,2
  5327  0CB9  2CBB               	goto	u1701
  5328  0CBA  2CBC               	goto	u1700
  5329  0CBB                     u1701:
  5330  0CBB  2CA7               	goto	l1971
  5331  0CBC                     u1700:
  5332  0CBC                     l78:
  5333  0CBC  0008               	return
  5334  0CBD                     __end_of_Lcd_Out:
  5335                           
  5336                           	psect	text17
  5337  0E83                     __ptext17:	
  5338 ;; *************** function _Lcd_Chr_CP *****************
  5339 ;; Defined at:
  5340 ;;		line 137 in file "./flex_lcd.h"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  data            1    wreg     unsigned char 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  data            1    2[COMMON] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5354 ;;      Params:         0       0       0       0       0       0       0       0
  5355 ;;      Locals:         1       0       0       0       0       0       0       0
  5356 ;;      Temps:          2       0       0       0       0       0       0       0
  5357 ;;      Totals:         3       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        3 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		_Lcd_Out
  5364 ;;		_Lcd_Out2
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           
  5369                           ;psect for function _Lcd_Chr_CP
  5370  0E83                     _Lcd_Chr_CP:
  5371                           
  5372                           ;incstack = 0
  5373                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0]
  5374                           ;Lcd_Chr_CP@data stored from wreg
  5375  0E83  00F2               	movwf	Lcd_Chr_CP@data
  5376  0E84                     l1847:
  5377                           
  5378                           ;./flex_lcd.h: 138: PORTBbits.RB6 = 0; PORTBbits.RB4 = 1;
  5379  0E84  0140               	movlb	0	; select bank0
  5380  0E85  130D               	bcf	13,6	;volatile
  5381  0E86  160D               	bsf	13,4	;volatile
  5382  0E87                     l1849:
  5383                           
  5384                           ;./flex_lcd.h: 139: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  5385  0E87  0872               	movf	Lcd_Chr_CP@data,w
  5386  0E88  00F0               	movwf	??_Lcd_Chr_CP
  5387  0E89  3007               	movlw	7
  5388  0E8A                     u1615:
  5389  0E8A  36F0               	lsrf	??_Lcd_Chr_CP,f
  5390  0E8B  0B89               	decfsz	9,f
  5391  0E8C  2E8A               	goto	u1615
  5392  0E8D  0870               	movf	??_Lcd_Chr_CP,w
  5393  0E8E  3901               	andlw	1
  5394  0E8F  00F1               	movwf	??_Lcd_Chr_CP+1
  5395  0E90  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5396  0E91  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5397  0E92  080E               	movf	14,w	;volatile
  5398  0E93  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5399  0E94  397F               	andlw	-129
  5400  0E95  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5401  0E96  008E               	movwf	14	;volatile
  5402  0E97  0872               	movf	Lcd_Chr_CP@data,w
  5403  0E98  00F0               	movwf	??_Lcd_Chr_CP
  5404  0E99  3006               	movlw	6
  5405  0E9A                     u1625:
  5406  0E9A  36F0               	lsrf	??_Lcd_Chr_CP,f
  5407  0E9B  0B89               	decfsz	9,f
  5408  0E9C  2E9A               	goto	u1625
  5409  0E9D  0870               	movf	??_Lcd_Chr_CP,w
  5410  0E9E  3901               	andlw	1
  5411  0E9F  00F1               	movwf	??_Lcd_Chr_CP+1
  5412  0EA0  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5413  0EA1  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5414  0EA2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5415  0EA3  080E               	movf	14,w	;volatile
  5416  0EA4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5417  0EA5  39BF               	andlw	-65
  5418  0EA6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5419  0EA7  008E               	movwf	14	;volatile
  5420                           
  5421                           ;./flex_lcd.h: 140: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  5422  0EA8  0872               	movf	Lcd_Chr_CP@data,w
  5423  0EA9  00F0               	movwf	??_Lcd_Chr_CP
  5424  0EAA  3005               	movlw	5
  5425  0EAB                     u1635:
  5426  0EAB  36F0               	lsrf	??_Lcd_Chr_CP,f
  5427  0EAC  0B89               	decfsz	9,f
  5428  0EAD  2EAB               	goto	u1635
  5429  0EAE  0870               	movf	??_Lcd_Chr_CP,w
  5430  0EAF  3901               	andlw	1
  5431  0EB0  00F1               	movwf	??_Lcd_Chr_CP+1
  5432  0EB1  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5433  0EB2  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5434  0EB3  080E               	movf	14,w	;volatile
  5435  0EB4  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5436  0EB5  39DF               	andlw	-33
  5437  0EB6  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5438  0EB7  008E               	movwf	14	;volatile
  5439  0EB8  0872               	movf	Lcd_Chr_CP@data,w
  5440  0EB9  00F0               	movwf	??_Lcd_Chr_CP
  5441  0EBA  3004               	movlw	4
  5442  0EBB                     u1645:
  5443  0EBB  36F0               	lsrf	??_Lcd_Chr_CP,f
  5444  0EBC  0B89               	decfsz	9,f
  5445  0EBD  2EBB               	goto	u1645
  5446  0EBE  0870               	movf	??_Lcd_Chr_CP,w
  5447  0EBF  3901               	andlw	1
  5448  0EC0  00F1               	movwf	??_Lcd_Chr_CP+1
  5449  0EC1  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5450  0EC2  080E               	movf	14,w	;volatile
  5451  0EC3  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5452  0EC4  39EF               	andlw	-17
  5453  0EC5  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5454  0EC6  008E               	movwf	14	;volatile
  5455  0EC7                     l1851:
  5456                           
  5457                           ;./flex_lcd.h: 141: _delay(10);
  5458  0EC7  3003               	movlw	3
  5459  0EC8                     u2147:
  5460  0EC8  0B89               	decfsz	9,f
  5461  0EC9  2EC8               	goto	u2147
  5462  0ECA  0000               	nop
  5463  0ECB                     l1853:
  5464                           
  5465                           ;./flex_lcd.h: 142: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5466  0ECB  0140               	movlb	0	; select bank0
  5467  0ECC  170D               	bsf	13,6	;volatile
  5468  0ECD                     l1855:
  5469  0ECD  0000               	nop
  5470  0ECE                     l1857:
  5471  0ECE  0140               	movlb	0	; select bank0
  5472  0ECF  130D               	bcf	13,6	;volatile
  5473  0ED0                     l1859:
  5474                           
  5475                           ;./flex_lcd.h: 143: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  5476  0ED0  0872               	movf	Lcd_Chr_CP@data,w
  5477  0ED1  00F0               	movwf	??_Lcd_Chr_CP
  5478  0ED2  3003               	movlw	3
  5479  0ED3                     u1655:
  5480  0ED3  36F0               	lsrf	??_Lcd_Chr_CP,f
  5481  0ED4  0B89               	decfsz	9,f
  5482  0ED5  2ED3               	goto	u1655
  5483  0ED6  0870               	movf	??_Lcd_Chr_CP,w
  5484  0ED7  3901               	andlw	1
  5485  0ED8  00F1               	movwf	??_Lcd_Chr_CP+1
  5486  0ED9  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5487  0EDA  0CF1               	rrf	??_Lcd_Chr_CP+1,f
  5488  0EDB  080E               	movf	14,w	;volatile
  5489  0EDC  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5490  0EDD  397F               	andlw	-129
  5491  0EDE  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5492  0EDF  008E               	movwf	14	;volatile
  5493  0EE0                     l1861:
  5494  0EE0  0872               	movf	Lcd_Chr_CP@data,w
  5495  0EE1  00F0               	movwf	??_Lcd_Chr_CP
  5496  0EE2  3002               	movlw	2
  5497  0EE3                     u1665:
  5498  0EE3  36F0               	lsrf	??_Lcd_Chr_CP,f
  5499  0EE4  0B89               	decfsz	9,f
  5500  0EE5  2EE3               	goto	u1665
  5501  0EE6  0870               	movf	??_Lcd_Chr_CP,w
  5502  0EE7  3901               	andlw	1
  5503  0EE8  00F1               	movwf	??_Lcd_Chr_CP+1
  5504  0EE9  0EF1               	swapf	??_Lcd_Chr_CP+1,f
  5505  0EEA  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5506  0EEB  0DF1               	rlf	??_Lcd_Chr_CP+1,f
  5507  0EEC  080E               	movf	14,w	;volatile
  5508  0EED  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5509  0EEE  39BF               	andlw	-65
  5510  0EEF  0671               	xorwf	??_Lcd_Chr_CP+1,w
  5511  0EF0  008E               	movwf	14	;volatile
  5512  0EF1                     l1863:
  5513                           
  5514                           ;./flex_lcd.h: 144: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  5515  0EF1  3672               	lsrf	Lcd_Chr_CP@data,w
  5516  0EF2  3901               	andlw	1
  5517  0EF3  00F0               	movwf	??_Lcd_Chr_CP
  5518  0EF4  0EF0               	swapf	??_Lcd_Chr_CP,f
  5519  0EF5  0DF0               	rlf	??_Lcd_Chr_CP,f
  5520  0EF6  080E               	movf	14,w	;volatile
  5521  0EF7  0670               	xorwf	??_Lcd_Chr_CP,w
  5522  0EF8  39DF               	andlw	-33
  5523  0EF9  0670               	xorwf	??_Lcd_Chr_CP,w
  5524  0EFA  008E               	movwf	14	;volatile
  5525  0EFB                     l1865:
  5526  0EFB  0872               	movf	Lcd_Chr_CP@data,w
  5527  0EFC  3901               	andlw	1
  5528  0EFD  00F0               	movwf	??_Lcd_Chr_CP
  5529  0EFE  0EF0               	swapf	??_Lcd_Chr_CP,f
  5530  0EFF  080E               	movf	14,w	;volatile
  5531  0F00  0670               	xorwf	??_Lcd_Chr_CP,w
  5532  0F01  39EF               	andlw	-17
  5533  0F02  0670               	xorwf	??_Lcd_Chr_CP,w
  5534  0F03  008E               	movwf	14	;volatile
  5535  0F04                     l1867:
  5536                           
  5537                           ;./flex_lcd.h: 145: _delay(10);
  5538  0F04  3003               	movlw	3
  5539  0F05                     u2157:
  5540  0F05  0B89               	decfsz	9,f
  5541  0F06  2F05               	goto	u2157
  5542  0F07  0000               	nop
  5543  0F08                     l1869:
  5544                           
  5545                           ;./flex_lcd.h: 146: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5546  0F08  0140               	movlb	0	; select bank0
  5547  0F09  170D               	bsf	13,6	;volatile
  5548  0F0A                     l1871:
  5549  0F0A  0000               	nop
  5550  0F0B                     l1873:
  5551  0F0B  0140               	movlb	0	; select bank0
  5552  0F0C  130D               	bcf	13,6	;volatile
  5553  0F0D                     l1875:
  5554                           
  5555                           ;./flex_lcd.h: 147: _delay((unsigned long)((5)*(1000000/4000000.0))); _delay((unsigned l
      +                          ong)((5500)*(1000000/4000000.0)));
  5556  0F0D  0000               	nop
  5557  0F0E                     l1877:
  5558  0F0E  30C4               	movlw	196
  5559  0F0F                     u2167:
  5560  0F0F  3200               	nop2
  5561  0F10  3200               	nop2
  5562  0F11  0B89               	decfsz	9,f
  5563  0F12  2F0F               	goto	u2167
  5564  0F13  3200               	nop2
  5565  0F14  0000               	nop
  5566  0F15                     l94:
  5567  0F15  0008               	return
  5568  0F16                     __end_of_Lcd_Chr_CP:
  5569                           
  5570                           	psect	text18
  5571  0D65                     __ptext18:	
  5572 ;; *************** function _Lcd_Init *****************
  5573 ;; Defined at:
  5574 ;;		line 53 in file "./flex_lcd.h"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;		None
  5577 ;; Auto vars:     Size  Location     Type
  5578 ;;  data            1    4[COMMON] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  1    wreg      void 
  5581 ;; Registers used:
  5582 ;;		wreg, status,2, status,0, pclath, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5588 ;;      Params:         0       0       0       0       0       0       0       0
  5589 ;;      Locals:         1       0       0       0       0       0       0       0
  5590 ;;      Temps:          1       0       0       0       0       0       0       0
  5591 ;;      Totals:         2       0       0       0       0       0       0       0
  5592 ;;Total ram usage:        2 bytes
  5593 ;; Hardware stack levels used: 1
  5594 ;; Hardware stack levels required when called: 1
  5595 ;; This function calls:
  5596 ;;		_Lcd_Cmd
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function _Lcd_Init
  5604  0D65                     _Lcd_Init:
  5605  0D65                     l1929:	
  5606                           ;incstack = 0
  5607                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5608                           
  5609                           
  5610                           ;./flex_lcd.h: 54: unsigned char data;;./flex_lcd.h: 55: TRISCbits.TRISC7 = 0;
  5611  0D65  0140               	movlb	0	; select bank0
  5612  0D66  1394               	bcf	20,7	;volatile
  5613                           
  5614                           ;./flex_lcd.h: 56: TRISCbits.TRISC6 = 0;
  5615  0D67  1314               	bcf	20,6	;volatile
  5616                           
  5617                           ;./flex_lcd.h: 57: TRISCbits.TRISC5 = 0;
  5618  0D68  1294               	bcf	20,5	;volatile
  5619                           
  5620                           ;./flex_lcd.h: 58: TRISCbits.TRISC4 = 0;
  5621  0D69  1214               	bcf	20,4	;volatile
  5622                           
  5623                           ;./flex_lcd.h: 59: TRISBbits.TRISB6 = 0;
  5624  0D6A  1313               	bcf	19,6	;volatile
  5625                           
  5626                           ;./flex_lcd.h: 60: TRISBbits.TRISB4 = 0;
  5627  0D6B  1213               	bcf	19,4	;volatile
  5628                           
  5629                           ;./flex_lcd.h: 61: PORTCbits.RC7 = 0;
  5630  0D6C  138E               	bcf	14,7	;volatile
  5631                           
  5632                           ;./flex_lcd.h: 62: PORTCbits.RC6 = 0;
  5633  0D6D  130E               	bcf	14,6	;volatile
  5634                           
  5635                           ;./flex_lcd.h: 63: PORTCbits.RC5 = 0;
  5636  0D6E  128E               	bcf	14,5	;volatile
  5637                           
  5638                           ;./flex_lcd.h: 64: PORTCbits.RC4 = 0;
  5639  0D6F  120E               	bcf	14,4	;volatile
  5640                           
  5641                           ;./flex_lcd.h: 65: PORTBbits.RB6 = 0;
  5642  0D70  130D               	bcf	13,6	;volatile
  5643                           
  5644                           ;./flex_lcd.h: 66: PORTBbits.RB4 = 0;
  5645  0D71  120D               	bcf	13,4	;volatile
  5646  0D72                     l1931:
  5647                           
  5648                           ;./flex_lcd.h: 67: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5649  0D72  30C4               	movlw	196
  5650  0D73                     u2177:
  5651  0D73  3200               	nop2
  5652  0D74  3200               	nop2
  5653  0D75  0B89               	decfsz	9,f
  5654  0D76  2D73               	goto	u2177
  5655  0D77  3200               	nop2
  5656  0D78  0000               	nop
  5657                           
  5658                           ;./flex_lcd.h: 68: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5659  0D79  30C4               	movlw	196
  5660  0D7A                     u2187:
  5661  0D7A  3200               	nop2
  5662  0D7B  3200               	nop2
  5663  0D7C  0B89               	decfsz	9,f
  5664  0D7D  2D7A               	goto	u2187
  5665  0D7E  3200               	nop2
  5666  0D7F  0000               	nop
  5667                           
  5668                           ;./flex_lcd.h: 69: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5669  0D80  30C4               	movlw	196
  5670  0D81                     u2197:
  5671  0D81  3200               	nop2
  5672  0D82  3200               	nop2
  5673  0D83  0B89               	decfsz	9,f
  5674  0D84  2D81               	goto	u2197
  5675  0D85  3200               	nop2
  5676  0D86  0000               	nop
  5677                           
  5678                           ;./flex_lcd.h: 70: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5679  0D87  30C4               	movlw	196
  5680  0D88                     u2207:
  5681  0D88  3200               	nop2
  5682  0D89  3200               	nop2
  5683  0D8A  0B89               	decfsz	9,f
  5684  0D8B  2D88               	goto	u2207
  5685  0D8C  3200               	nop2
  5686  0D8D  0000               	nop
  5687                           
  5688                           ;./flex_lcd.h: 71: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5689  0D8E  30C4               	movlw	196
  5690  0D8F                     u2217:
  5691  0D8F  3200               	nop2
  5692  0D90  3200               	nop2
  5693  0D91  0B89               	decfsz	9,f
  5694  0D92  2D8F               	goto	u2217
  5695  0D93  3200               	nop2
  5696  0D94  0000               	nop
  5697                           
  5698                           ;./flex_lcd.h: 72: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5699  0D95  30C4               	movlw	196
  5700  0D96                     u2227:
  5701  0D96  3200               	nop2
  5702  0D97  3200               	nop2
  5703  0D98  0B89               	decfsz	9,f
  5704  0D99  2D96               	goto	u2227
  5705  0D9A  3200               	nop2
  5706  0D9B  0000               	nop
  5707  0D9C                     l1933:
  5708                           
  5709                           ;./flex_lcd.h: 73: for(data = 1; data < 4; data ++)
  5710  0D9C  01F4               	clrf	Lcd_Init@data
  5711  0D9D  0AF4               	incf	Lcd_Init@data,f
  5712  0D9E                     l63:
  5713                           
  5714                           ;./flex_lcd.h: 74: {;./flex_lcd.h: 75:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbi
      +                          ts.RC5 = 1; PORTCbits.RC4 = 1; PORTBbits.RB6 = 0;
  5715  0D9E  0140               	movlb	0	; select bank0
  5716  0D9F  138E               	bcf	14,7	;volatile
  5717  0DA0  130E               	bcf	14,6	;volatile
  5718  0DA1  168E               	bsf	14,5	;volatile
  5719  0DA2  160E               	bsf	14,4	;volatile
  5720  0DA3  130D               	bcf	13,6	;volatile
  5721                           
  5722                           ;./flex_lcd.h: 76:     PORTBbits.RB4 = 0; PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbit
      +                          s.RC5 = 1; PORTCbits.RC4 = 1;
  5723  0DA4  120D               	bcf	13,4	;volatile
  5724  0DA5  138E               	bcf	14,7	;volatile
  5725  0DA6  130E               	bcf	14,6	;volatile
  5726  0DA7  168E               	bsf	14,5	;volatile
  5727  0DA8  160E               	bsf	14,4	;volatile
  5728                           
  5729                           ;./flex_lcd.h: 77:     PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5730  0DA9  170D               	bsf	13,6	;volatile
  5731  0DAA  120D               	bcf	13,4	;volatile
  5732                           
  5733                           ;./flex_lcd.h: 78:     _delay((unsigned long)((5)*(1000000/4000000.0)));
  5734  0DAB  0000               	nop
  5735                           
  5736                           ;./flex_lcd.h: 79:     PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbit
      +                          s.RC4 = 1; PORTBbits.RB6 = 0;
  5737  0DAC  0140               	movlb	0	; select bank0
  5738  0DAD  138E               	bcf	14,7	;volatile
  5739  0DAE  130E               	bcf	14,6	;volatile
  5740  0DAF  168E               	bsf	14,5	;volatile
  5741  0DB0  160E               	bsf	14,4	;volatile
  5742  0DB1  130D               	bcf	13,6	;volatile
  5743                           
  5744                           ;./flex_lcd.h: 80:     PORTBbits.RB4 = 0;
  5745  0DB2  120D               	bcf	13,4	;volatile
  5746  0DB3                     l1937:
  5747                           
  5748                           ;./flex_lcd.h: 81:     _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5749  0DB3  30C4               	movlw	196
  5750  0DB4                     u2237:
  5751  0DB4  3200               	nop2
  5752  0DB5  3200               	nop2
  5753  0DB6  0B89               	decfsz	9,f
  5754  0DB7  2DB4               	goto	u2237
  5755  0DB8  3200               	nop2
  5756  0DB9  0000               	nop
  5757  0DBA                     l1939:
  5758                           
  5759                           ;./flex_lcd.h: 82: }
  5760  0DBA  3001               	movlw	1
  5761  0DBB  00F3               	movwf	??_Lcd_Init
  5762  0DBC  0873               	movf	??_Lcd_Init,w
  5763  0DBD  07F4               	addwf	Lcd_Init@data,f
  5764  0DBE                     l1941:
  5765  0DBE  3004               	movlw	4
  5766  0DBF  0274               	subwf	Lcd_Init@data,w
  5767  0DC0  1C03               	skipc
  5768  0DC1  2DC3               	goto	u1691
  5769  0DC2  2DC4               	goto	u1690
  5770  0DC3                     u1691:
  5771  0DC3  2D9E               	goto	l63
  5772  0DC4                     u1690:
  5773  0DC4                     l64:
  5774                           
  5775                           ;./flex_lcd.h: 83: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5776  0DC4  0140               	movlb	0	; select bank0
  5777  0DC5  138E               	bcf	14,7	;volatile
  5778  0DC6  130E               	bcf	14,6	;volatile
  5779  0DC7  168E               	bsf	14,5	;volatile
  5780  0DC8  120E               	bcf	14,4	;volatile
  5781  0DC9  130D               	bcf	13,6	;volatile
  5782  0DCA  120D               	bcf	13,4	;volatile
  5783                           
  5784                           ;./flex_lcd.h: 84: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 1; PORTBbits.RB4 = 0;
  5785  0DCB  138E               	bcf	14,7	;volatile
  5786  0DCC  130E               	bcf	14,6	;volatile
  5787  0DCD  168E               	bsf	14,5	;volatile
  5788  0DCE  120E               	bcf	14,4	;volatile
  5789  0DCF  170D               	bsf	13,6	;volatile
  5790  0DD0  120D               	bcf	13,4	;volatile
  5791                           
  5792                           ;./flex_lcd.h: 85: _delay((unsigned long)((5)*(1000000/4000000.0)));
  5793  0DD1  0000               	nop
  5794                           
  5795                           ;./flex_lcd.h: 86: PORTCbits.RC7 = 0; PORTCbits.RC6 = 0; PORTCbits.RC5 = 1; PORTCbits.RC
      +                          4 = 0; PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5796  0DD2  0140               	movlb	0	; select bank0
  5797  0DD3  138E               	bcf	14,7	;volatile
  5798  0DD4  130E               	bcf	14,6	;volatile
  5799  0DD5  168E               	bsf	14,5	;volatile
  5800  0DD6  120E               	bcf	14,4	;volatile
  5801  0DD7  130D               	bcf	13,6	;volatile
  5802  0DD8  120D               	bcf	13,4	;volatile
  5803  0DD9                     l1943:
  5804                           
  5805                           ;./flex_lcd.h: 87: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  5806  0DD9  30C4               	movlw	196
  5807  0DDA                     u2247:
  5808  0DDA  3200               	nop2
  5809  0DDB  3200               	nop2
  5810  0DDC  0B89               	decfsz	9,f
  5811  0DDD  2DDA               	goto	u2247
  5812  0DDE  3200               	nop2
  5813  0DDF  0000               	nop
  5814  0DE0                     l1945:
  5815  0DE0  3028               	movlw	40
  5816  0DE1  318D  25F1  318D   	fcall	_Lcd_Cmd
  5817  0DE4                     l1947:
  5818  0DE4  3010               	movlw	16
  5819  0DE5  318D  25F1  318D   	fcall	_Lcd_Cmd
  5820  0DE8                     l1949:
  5821  0DE8  3001               	movlw	1
  5822  0DE9  318D  25F1  318D   	fcall	_Lcd_Cmd
  5823  0DEC                     l1951:
  5824  0DEC                     l1953:
  5825  0DEC  300F               	movlw	15
  5826  0DED  318D  25F1  318D   	fcall	_Lcd_Cmd
  5827  0DF0                     l65:
  5828  0DF0  0008               	return
  5829  0DF1                     __end_of_Lcd_Init:
  5830                           
  5831                           	psect	text19
  5832  0DF1                     __ptext19:	
  5833 ;; *************** function _Lcd_Cmd *****************
  5834 ;; Defined at:
  5835 ;;		line 151 in file "./flex_lcd.h"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  data            1    wreg     unsigned char 
  5838 ;; Auto vars:     Size  Location     Type
  5839 ;;  data            1    2[COMMON] unsigned char 
  5840 ;; Return value:  Size  Location     Type
  5841 ;;                  1    wreg      void 
  5842 ;; Registers used:
  5843 ;;		wreg, status,2, status,0
  5844 ;; Tracked objects:
  5845 ;;		On entry : 0/0
  5846 ;;		On exit  : 0/0
  5847 ;;		Unchanged: 0/0
  5848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5849 ;;      Params:         0       0       0       0       0       0       0       0
  5850 ;;      Locals:         1       0       0       0       0       0       0       0
  5851 ;;      Temps:          2       0       0       0       0       0       0       0
  5852 ;;      Totals:         3       0       0       0       0       0       0       0
  5853 ;;Total ram usage:        3 bytes
  5854 ;; Hardware stack levels used: 1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_Lcd_Init
  5859 ;;		_Lcd_Out
  5860 ;;		_Lcd_Out2
  5861 ;;		_menu
  5862 ;;		_main
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           
  5867                           ;psect for function _Lcd_Cmd
  5868  0DF1                     _Lcd_Cmd:
  5869                           
  5870                           ;incstack = 0
  5871                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  5872                           ;Lcd_Cmd@data stored from wreg
  5873  0DF1  00F2               	movwf	Lcd_Cmd@data
  5874  0DF2                     l1817:
  5875                           
  5876                           ;./flex_lcd.h: 152: PORTBbits.RB6 = 0; PORTBbits.RB4 = 0;
  5877  0DF2  0140               	movlb	0	; select bank0
  5878  0DF3  130D               	bcf	13,6	;volatile
  5879  0DF4  120D               	bcf	13,4	;volatile
  5880  0DF5                     l1819:
  5881                           
  5882                           ;./flex_lcd.h: 153: PORTCbits.RC7 = (data & 0b10000000)>>7; PORTCbits.RC6 = (data & 0b01
      +                          000000)>>6;
  5883  0DF5  0872               	movf	Lcd_Cmd@data,w
  5884  0DF6  00F0               	movwf	??_Lcd_Cmd
  5885  0DF7  3007               	movlw	7
  5886  0DF8                     u1555:
  5887  0DF8  36F0               	lsrf	??_Lcd_Cmd,f
  5888  0DF9  0B89               	decfsz	9,f
  5889  0DFA  2DF8               	goto	u1555
  5890  0DFB  0870               	movf	??_Lcd_Cmd,w
  5891  0DFC  3901               	andlw	1
  5892  0DFD  00F1               	movwf	??_Lcd_Cmd+1
  5893  0DFE  0CF1               	rrf	??_Lcd_Cmd+1,f
  5894  0DFF  0CF1               	rrf	??_Lcd_Cmd+1,f
  5895  0E00  080E               	movf	14,w	;volatile
  5896  0E01  0671               	xorwf	??_Lcd_Cmd+1,w
  5897  0E02  397F               	andlw	-129
  5898  0E03  0671               	xorwf	??_Lcd_Cmd+1,w
  5899  0E04  008E               	movwf	14	;volatile
  5900  0E05  0872               	movf	Lcd_Cmd@data,w
  5901  0E06  00F0               	movwf	??_Lcd_Cmd
  5902  0E07  3006               	movlw	6
  5903  0E08                     u1565:
  5904  0E08  36F0               	lsrf	??_Lcd_Cmd,f
  5905  0E09  0B89               	decfsz	9,f
  5906  0E0A  2E08               	goto	u1565
  5907  0E0B  0870               	movf	??_Lcd_Cmd,w
  5908  0E0C  3901               	andlw	1
  5909  0E0D  00F1               	movwf	??_Lcd_Cmd+1
  5910  0E0E  0EF1               	swapf	??_Lcd_Cmd+1,f
  5911  0E0F  0DF1               	rlf	??_Lcd_Cmd+1,f
  5912  0E10  0DF1               	rlf	??_Lcd_Cmd+1,f
  5913  0E11  080E               	movf	14,w	;volatile
  5914  0E12  0671               	xorwf	??_Lcd_Cmd+1,w
  5915  0E13  39BF               	andlw	-65
  5916  0E14  0671               	xorwf	??_Lcd_Cmd+1,w
  5917  0E15  008E               	movwf	14	;volatile
  5918                           
  5919                           ;./flex_lcd.h: 154: PORTCbits.RC5 = (data & 0b00100000)>>5; PORTCbits.RC4 = (data & 0b00
      +                          010000)>>4;
  5920  0E16  0872               	movf	Lcd_Cmd@data,w
  5921  0E17  00F0               	movwf	??_Lcd_Cmd
  5922  0E18  3005               	movlw	5
  5923  0E19                     u1575:
  5924  0E19  36F0               	lsrf	??_Lcd_Cmd,f
  5925  0E1A  0B89               	decfsz	9,f
  5926  0E1B  2E19               	goto	u1575
  5927  0E1C  0870               	movf	??_Lcd_Cmd,w
  5928  0E1D  3901               	andlw	1
  5929  0E1E  00F1               	movwf	??_Lcd_Cmd+1
  5930  0E1F  0EF1               	swapf	??_Lcd_Cmd+1,f
  5931  0E20  0DF1               	rlf	??_Lcd_Cmd+1,f
  5932  0E21  080E               	movf	14,w	;volatile
  5933  0E22  0671               	xorwf	??_Lcd_Cmd+1,w
  5934  0E23  39DF               	andlw	-33
  5935  0E24  0671               	xorwf	??_Lcd_Cmd+1,w
  5936  0E25  008E               	movwf	14	;volatile
  5937  0E26  0872               	movf	Lcd_Cmd@data,w
  5938  0E27  00F0               	movwf	??_Lcd_Cmd
  5939  0E28  3004               	movlw	4
  5940  0E29                     u1585:
  5941  0E29  36F0               	lsrf	??_Lcd_Cmd,f
  5942  0E2A  0B89               	decfsz	9,f
  5943  0E2B  2E29               	goto	u1585
  5944  0E2C  0870               	movf	??_Lcd_Cmd,w
  5945  0E2D  3901               	andlw	1
  5946  0E2E  00F1               	movwf	??_Lcd_Cmd+1
  5947  0E2F  0EF1               	swapf	??_Lcd_Cmd+1,f
  5948  0E30  080E               	movf	14,w	;volatile
  5949  0E31  0671               	xorwf	??_Lcd_Cmd+1,w
  5950  0E32  39EF               	andlw	-17
  5951  0E33  0671               	xorwf	??_Lcd_Cmd+1,w
  5952  0E34  008E               	movwf	14	;volatile
  5953  0E35                     l1821:
  5954                           
  5955                           ;./flex_lcd.h: 155: _delay(10);
  5956  0E35  3003               	movlw	3
  5957  0E36                     u2257:
  5958  0E36  0B89               	decfsz	9,f
  5959  0E37  2E36               	goto	u2257
  5960  0E38  0000               	nop
  5961  0E39                     l1823:
  5962                           
  5963                           ;./flex_lcd.h: 156: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  5964  0E39  0140               	movlb	0	; select bank0
  5965  0E3A  170D               	bsf	13,6	;volatile
  5966  0E3B                     l1825:
  5967  0E3B  0000               	nop
  5968  0E3C                     l1827:
  5969  0E3C  0140               	movlb	0	; select bank0
  5970  0E3D  130D               	bcf	13,6	;volatile
  5971  0E3E                     l1829:
  5972                           
  5973                           ;./flex_lcd.h: 157: PORTCbits.RC7 = (data & 0b00001000)>>3; PORTCbits.RC6 = (data & 0b00
      +                          000100)>>2;
  5974  0E3E  0872               	movf	Lcd_Cmd@data,w
  5975  0E3F  00F0               	movwf	??_Lcd_Cmd
  5976  0E40  3003               	movlw	3
  5977  0E41                     u1595:
  5978  0E41  36F0               	lsrf	??_Lcd_Cmd,f
  5979  0E42  0B89               	decfsz	9,f
  5980  0E43  2E41               	goto	u1595
  5981  0E44  0870               	movf	??_Lcd_Cmd,w
  5982  0E45  3901               	andlw	1
  5983  0E46  00F1               	movwf	??_Lcd_Cmd+1
  5984  0E47  0CF1               	rrf	??_Lcd_Cmd+1,f
  5985  0E48  0CF1               	rrf	??_Lcd_Cmd+1,f
  5986  0E49  080E               	movf	14,w	;volatile
  5987  0E4A  0671               	xorwf	??_Lcd_Cmd+1,w
  5988  0E4B  397F               	andlw	-129
  5989  0E4C  0671               	xorwf	??_Lcd_Cmd+1,w
  5990  0E4D  008E               	movwf	14	;volatile
  5991  0E4E                     l1831:
  5992  0E4E  0872               	movf	Lcd_Cmd@data,w
  5993  0E4F  00F0               	movwf	??_Lcd_Cmd
  5994  0E50  3002               	movlw	2
  5995  0E51                     u1605:
  5996  0E51  36F0               	lsrf	??_Lcd_Cmd,f
  5997  0E52  0B89               	decfsz	9,f
  5998  0E53  2E51               	goto	u1605
  5999  0E54  0870               	movf	??_Lcd_Cmd,w
  6000  0E55  3901               	andlw	1
  6001  0E56  00F1               	movwf	??_Lcd_Cmd+1
  6002  0E57  0EF1               	swapf	??_Lcd_Cmd+1,f
  6003  0E58  0DF1               	rlf	??_Lcd_Cmd+1,f
  6004  0E59  0DF1               	rlf	??_Lcd_Cmd+1,f
  6005  0E5A  080E               	movf	14,w	;volatile
  6006  0E5B  0671               	xorwf	??_Lcd_Cmd+1,w
  6007  0E5C  39BF               	andlw	-65
  6008  0E5D  0671               	xorwf	??_Lcd_Cmd+1,w
  6009  0E5E  008E               	movwf	14	;volatile
  6010  0E5F                     l1833:
  6011                           
  6012                           ;./flex_lcd.h: 158: PORTCbits.RC5 = (data & 0b00000010)>>1; PORTCbits.RC4 = (data & 0b00
      +                          000001);
  6013  0E5F  3672               	lsrf	Lcd_Cmd@data,w
  6014  0E60  3901               	andlw	1
  6015  0E61  00F0               	movwf	??_Lcd_Cmd
  6016  0E62  0EF0               	swapf	??_Lcd_Cmd,f
  6017  0E63  0DF0               	rlf	??_Lcd_Cmd,f
  6018  0E64  080E               	movf	14,w	;volatile
  6019  0E65  0670               	xorwf	??_Lcd_Cmd,w
  6020  0E66  39DF               	andlw	-33
  6021  0E67  0670               	xorwf	??_Lcd_Cmd,w
  6022  0E68  008E               	movwf	14	;volatile
  6023  0E69                     l1835:
  6024  0E69  0872               	movf	Lcd_Cmd@data,w
  6025  0E6A  3901               	andlw	1
  6026  0E6B  00F0               	movwf	??_Lcd_Cmd
  6027  0E6C  0EF0               	swapf	??_Lcd_Cmd,f
  6028  0E6D  080E               	movf	14,w	;volatile
  6029  0E6E  0670               	xorwf	??_Lcd_Cmd,w
  6030  0E6F  39EF               	andlw	-17
  6031  0E70  0670               	xorwf	??_Lcd_Cmd,w
  6032  0E71  008E               	movwf	14	;volatile
  6033  0E72                     l1837:
  6034                           
  6035                           ;./flex_lcd.h: 159: _delay(10);
  6036  0E72  3003               	movlw	3
  6037  0E73                     u2267:
  6038  0E73  0B89               	decfsz	9,f
  6039  0E74  2E73               	goto	u2267
  6040  0E75  0000               	nop
  6041  0E76                     l1839:
  6042                           
  6043                           ;./flex_lcd.h: 160: PORTBbits.RB6 = 1; _delay((unsigned long)((5)*(1000000/4000000.0)));
      +                           PORTBbits.RB6 = 0;
  6044  0E76  0140               	movlb	0	; select bank0
  6045  0E77  170D               	bsf	13,6	;volatile
  6046  0E78                     l1841:
  6047  0E78  0000               	nop
  6048  0E79                     l1843:
  6049  0E79  0140               	movlb	0	; select bank0
  6050  0E7A  130D               	bcf	13,6	;volatile
  6051  0E7B                     l1845:
  6052                           
  6053                           ;./flex_lcd.h: 161: _delay((unsigned long)((5500)*(1000000/4000000.0)));
  6054  0E7B  30C4               	movlw	196
  6055  0E7C                     u2277:
  6056  0E7C  3200               	nop2
  6057  0E7D  3200               	nop2
  6058  0E7E  0B89               	decfsz	9,f
  6059  0E7F  2E7C               	goto	u2277
  6060  0E80  3200               	nop2
  6061  0E81  0000               	nop
  6062  0E82                     l97:
  6063  0E82  0008               	return
  6064  0E83                     __end_of_Lcd_Cmd:
  6065  007E                     btemp	set	126	;btemp
  6066  007E                     wtemp0	set	126
  6067                           
  6068                           	psect	config
  6069                           
  6070                           ;Config register CONFIG1 @ 0x8007
  6071                           ;	External Oscillator Mode Selection bits
  6072                           ;	FEXTOSC = OFF, Oscillator not enabled
  6073                           ;	Power-up Default Value for COSC bits
  6074                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  6075                           ;	Clock Out Enable bit
  6076                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  6077                           ;	VDD Range Analog Calibration Selection bit
  6078                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  6079  8007                     	org	32775
  6080  8007  3FED               	dw	16365
  6081                           
  6082                           ;Config register CONFIG2 @ 0x8008
  6083                           ;	Master Clear Enable bit
  6084                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  6085                           ;	Power-up Timer Selection bits
  6086                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6087                           ;	WDT Operating Mode bits
  6088                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  6089                           ;	Brown-out Reset Enable bits
  6090                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  6091                           ;	Brown-out Reset Voltage Selection bit
  6092                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  6093                           ;	PPSLOCKED One-Way Set Enable bit
  6094                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  6095                           ;	Stack Overflow/Underflow Reset Enable bit
  6096                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  6097  8008                     	org	32776
  6098  8008  3FE7               	dw	16359
  6099                           
  6100                           ;Config register CONFIG4 @ 0x800A
  6101                           ;	Boot Block Size Selection bits
  6102                           ;	BBSIZE = BB512, 512 words boot block size
  6103                           ;	Boot Block Enable bit
  6104                           ;	BBEN = OFF, Boot Block is disabled
  6105                           ;	SAF Enable bit
  6106                           ;	SAFEN = OFF, SAF is disabled
  6107                           ;	Application Block Write Protection bit
  6108                           ;	WRTAPP = OFF, Application Block is not write-protected
  6109                           ;	Boot Block Write Protection bit
  6110                           ;	WRTB = OFF, Boot Block is not write-protected
  6111                           ;	Configuration Registers Write Protection bit
  6112                           ;	WRTC = OFF, Configuration Registers are not write-protected
  6113                           ;	Storage Area Flash (SAF) Write Protection bit
  6114                           ;	WRTSAF = OFF, SAF is not write-protected
  6115                           ;	Low Voltage Programming Enable bit
  6116                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  6117  800A                     	org	32778
  6118  800A  3FFF               	dw	16383
  6119                           
  6120                           ;Config register CONFIG5 @ 0x800B
  6121                           ;	User Program Flash Memory Code Protection bit
  6122                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  6123  800B                     	org	32779
  6124  800B  3FFF               	dw	16383

Data Sizes:
    Strings     130
    Constant    2
    Data        1
    BSS         93
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     13      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), s(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_20(CODE[11]), STR_19(CODE[16]), STR_18(CODE[11]), STR_17(CODE[16]), 
		 -> STR_16(CODE[8]), STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[16]), 
		 -> STR_12(CODE[10]), STR_11(CODE[16]), STR_9(CODE[15]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[16]), 
		 -> STR_3(CODE[6]), STR_2(CODE[16]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_20(CODE[11]), STR_19(CODE[16]), STR_18(CODE[11]), STR_17(CODE[16]), 
		 -> STR_16(CODE[8]), STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[16]), 
		 -> STR_12(CODE[10]), STR_11(CODE[16]), STR_9(CODE[15]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[16]), 
		 -> STR_3(CODE[6]), STR_2(CODE[16]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_20(CODE[11]), STR_19(CODE[16]), STR_18(CODE[11]), STR_17(CODE[16]), 
		 -> STR_16(CODE[8]), STR_15(CODE[7]), STR_14(CODE[10]), STR_13(CODE[16]), 
		 -> STR_12(CODE[10]), STR_11(CODE[16]), STR_9(CODE[15]), STR_8(CODE[11]), 
		 -> STR_7(CODE[14]), STR_6(CODE[11]), STR_5(CODE[14]), STR_4(CODE[16]), 
		 -> STR_3(CODE[6]), STR_2(CODE[16]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S610_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), s(BANK1[20]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), s(BANK1[20]), 

    Lcd_Out2@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> CONT(BANK1[20]), s(BANK1[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_10(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_sprintf
    _menu->_sprintf
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_menu
    _menu->_sprintf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   24865
                                             78 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _Lcd_Out2
             _PIN_MANAGER_Initialize
                               _menu
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _menu                                                 8     8      0   12028
                                             76 BANK0      2     2      0
                                              7 BANK1      6     6      0
                            _Lcd_Cmd
                           _Lcd_Out2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4    8241
                                             13 COMMON     1     1      0
                                             72 BANK0      4     0      4
                                              0 BANK1      7     7      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    5971
                                             64 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2    5649
                                             46 BANK0     18    16      2
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out2                                             6     4      2    3421
                                              3 COMMON     6     4      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              7     4      3     685
                                              3 COMMON     7     4      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PIN_MANAGER_Initialize
   _menu
     _Lcd_Cmd
     _Lcd_Out2
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C9       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      D      4B       8       93.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      C9      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 26 11:16:17 2021

                              _S 00A3                                _s 00C9                               l63 0D9E  
                             l64 0DC4                               l65 0DF0                               l91 0C71  
                             l94 0F15                               l78 0CBC                               l97 0E82  
                             _SU 00AE                              l100 0BDB                              l114 0590  
                            l125 050F                              l127 056D                              l139 05C9  
                            l172 07B8                              l174 07CD                              l176 07E4  
                            l361 0FEE                              l362 0FFF                              l348 0132  
                            l349 0143                              l711 0BFF                              l802 0BA0  
                            l741 0D4A                              l814 0D0B                              l822 0C28  
                            l831 0BBA                              l743 0D64                              l751 02E2  
                            l752 02FA                              l825 000A                              l738 0D28  
                            l746 02BC                              l755 036B                              l747 02C5  
                            l780 017E                              l781 0181                              l783 01B3  
                            l776 016C                              l769 03E2                              l778 0178  
                            l779 017B                              l795 0042                              l788 0272  
                            l799 0BA0                              _LDR 0800                              _MAX 00EA  
                            _S_1 00B3                              _S_2 00B2                              _abs 0B87  
                            _pad 0D0C                              wreg 0009                             l2001 03EA  
                           l2011 0404                             l2003 03EB                             ?_abs 0073  
                           l2101 058B                             l2021 0436                             l2013 0416  
                           l2005 03ED                             l2111 05A7                             l2103 0595  
                           l2031 0466                             l2015 041A                             l2023 0441  
                           l2007 03F2                             l2113 05B0                             l2105 059C  
                           l2041 0490                             l2033 046A                             l2025 044A  
                           l2017 0423                             l2009 03FF                             l2201 0777  
                           l2121 05CD                             l2115 05BA                             l2107 05A3  
                           l2051 04BA                             l2043 049D                             l2035 0473  
                           l2027 0455                             l2019 042D                             l2211 07CA  
                           l2203 0784                             l2131 05FC                             l2123 05DA  
                           l2117 05BC                             l2109 05A3                             l2061 04DA  
                           l2053 04BF                             l2045 04A2                             l2037 047D  
                           l2029 045F                             l2213 07CF                             l2205 0796  
                           l2141 0645                             l2133 0601                             l2125 05E2  
                           l2071 0508                             l2063 04E4                             l2055 04C6  
                           l2047 04AF                             l2039 0486                             l2215 07E2  
                           l2207 07B5                             l2151 067F                             l2143 064A  
                           l2135 0612                             l2127 05EF                             l2119 05CA  
                           l1601 006F                             l2081 0531                             l2073 0514  
                           l2065 04F6                             l2057 04CD                             l2049 04B4  
                           l2209 07BA                             l2161 06C0                             l2153 0693  
                           l2145 064F                             l2137 061F                             l2129 05F7  
                           l1611 00B3                             l1603 0079                             l2091 0568  
                           l2083 0543                             l2075 051A                             l2059 04D1  
                           l2067 0501                             l2171 06E9                             l2163 06CB  
                           l2155 0698                             l2147 0660                             l2139 0631  
                           l1621 00CE                             l1613 00B6                             l1605 0098  
                           l1701 02DA                             l2093 0572                             l2085 054E  
                           l2077 051E                             l2069 0506                             l2181 0707  
                           l2173 06F3                             l2165 06D5                             l2157 06A0  
                           l2149 066D                             l1631 0114                             l1623 00F0  
                           l1615 00BE                             l1607 009C                             l1711 0302  
                           l1703 02EA                             l2095 0579                             l2087 0559  
                           l2079 0527                             l2191 0737                             l2183 070F  
                           l2167 06DC                             l2159 06A5                             l2175 06F6  
                           l2281 0C94                             l1625 0100                             l1617 00C2  
                           l1609 00A6                             l1641 0F4C                             l1633 0F16  
                           l1561 0CBD                             l1721 0379                             l1713 0307  
                           l1705 02F0                             l1801 024C                             l2097 057F  
                           l2089 0563                             l2193 0749                             l2185 0714  
                           l2177 06FB                             l2169 06E0                             l1627 0101  
                           l1619 00C6                             l1651 0F87                             l1643 0F6B  
                           l1635 0F17                             l1571 0CF3                             l1563 0CC2  
                           l1731 03AD                             l1723 0386                             l1715 0336  
                           l1707 02F5                             l2099 0583                             l2187 0719  
                           l2195 075C                             l2179 0702                             l1821 0E35  
                           l1629 010F                             l1661 0FD0                             l1653 0F8B  
                           l1645 0F78                             l1637 0F21                             l1573 0D03  
                           l1565 0CC7                             l1581 0C13                             l1741 03C6  
                           l1733 03B2                             l1725 0393                             l1717 033A  
                           l1709 02FF                             l2277 019C                             l1805 024F  
                           l2197 0761                             l2189 072A                             l1831 0E4E  
                           l1823 0E39                             l1911 0C69                             l2279 0C4B  
                           l1903 0C43                             l1655 0FAD                             l1647 0F7B  
                           l1639 0F42                             l1567 0CCC                             l1583 0C18  
                           l1591 0BB4                             l1671 0D26                             l1663 0D0E  
                           l1735 03B7                             l1743 03CF                             l1727 03A1  
                           l1719 033E                             l1807 0268                             l1751 015F  
                           l2199 0766                             l1841 0E78                             l1833 0E5F  
                           l1825 0E3B                             l1817 0DF2                             l1905 0C59  
                           l1657 0FBD                             l1649 0F83                             l1569 0CD6  
                           l1577 0C02                             l1585 0BA2                             l1681 0D58  
                           l1673 0D2B                             l1665 0D13                             l1737 03BD  
                           l1729 03A6                             l1753 0164                             l1921 0BE8  
                           l1843 0E79                             l1835 0E69                             l1827 0E3C  
                           l1819 0DF5                             l1931 0D72                             l1851 0EC7  
                           l1907 0C5E                             l1595 0043                             l1659 0FCB  
                           l1579 0C05                             l1587 0BA7                             l1675 0D37  
                           l1667 0D1C                             l1739 03C2                             l1691 0285  
                           l1771 0189                             l1755 0168                             l1747 0146  
                           l1923 0BEA                             l1845 0E7B                             l1837 0E72  
                           l1829 0E3E                             l1941 0DBE                             l1933 0D9C  
                           l1861 0EE0                             l1853 0ECB                             l1909 0C65  
                           l1597 0044                             l1685 0B87                             l1589 0BAB  
                           l1677 0D3C                             l1669 0D21                             l1693 0298  
                           l1781 01DF                             l1757 016E                             l1773 01AD  
                           l1749 0157                             l1925 0BF7                             l1917 0BDE  
                           l1839 0E76                             l1951 0DEC                             l1943 0DD9  
                           l1871 0F0A                             l1863 0EF1                             l1855 0ECD  
                           l1847 0E84                             l1599 004E                             l1687 0B94  
                           l1679 0D4F                             l1695 029E                             l1791 022B  
                           l1783 01E7                             l1775 01B8                             l1767 0184  
                           l1919 0BE6                             l1953 0DEC                             l1945 0DE0  
                           l1937 0DB3                             l1929 0D65                             l1873 0F0B  
                           l1865 0EFB                             l1857 0ECE                             l1849 0E87  
                           l1961 0C80                             l1697 02C1                             l1689 0275  
                           l1793 0233                             l1785 0200                             l1777 01BC  
                           l1881 0018                             l1947 0DE4                             l1939 0DBA  
                           l1875 0F0D                             l1867 0F04                             l1859 0ED0  
                           l1971 0CA7                             l1963 0C86                             l1955 0C73  
                           l1891 0C2A                             l1699 02D4                             l1795 023E  
                           l1779 01CE                             l1883 001C                             l1949 0DE8  
                           l1877 0F0E                             l1869 0F08                             l1973 0CAF  
                           l1957 0C74                             l1981 0BBB                             l1893 0C2B  
                           l1789 021A                             l1885 0030                             ?_pad 0024  
                           l1975 0CB3                             l1959 0C7A                             l1967 0C8C  
                           l1991 0BC7                             l1983 0BBF                             l1895 0C31  
                           l1799 0244                             l1887 003A                             l1879 0014  
                           l1969 0CA2                             l1993 0BC8                             l1985 0BC1  
                           l1897 0C37                             l1995 0BCD                             l1987 0BC3  
                           l1899 0C3D                             l1997 0BCE                             l1989 0BC5  
                           l1999 03E3                             STR_1 085F                             STR_2 0802  
                           STR_3 087E                             STR_4 0802                             STR_5 0831  
                           STR_6 083F                             STR_7 0831                             STR_8 083F  
                           STR_9 0822                             u1010 0CC2                             u1011 0CC1  
                           u1020 0CC7                             u1021 0CC6                             u1110 00A3  
                           u1030 0CD6                             u1031 0CD5                             u1120 00B3  
                           u1200 0F4C                             u1040 0CF3                             u2000 07E2  
                           u1121 00B2                             u1201 0F4B                             u1041 0CF2  
                           u2001 07E1                             u1130 00C6                             u1050 0C28  
                           u1131 00C5                             u1051 0C27                             u1140 00F0  
                           u1220 0F78                             u1060 0BB4                             u1300 0D4A  
                           _CONT 00B5                             u1141 00EF                             u1221 0F77  
                           u1045 0CEF                             u1061 0BB3                             u1301 0D49  
                           u2005 07DE                             u1150 010F                             u1070 004E  
                           u1230 0F8B                             u1310 0D4F                             u1151 010E  
                           u1071 004D                             u1231 0F8A                             u1311 0D4E  
                           u1160 0114                             u1240 0FAD                             u1320 0B94  
                           u1400 02F5                             u1161 0113                             u1145 00EC  
                           u1241 0FAC                             u1321 0B93                             u1305 0D46  
                           u1401 02F4                             u2017 05DE                             u1090 0079  
                           u1250 0FCB                             u1410 0379                             u1330 0290  
                           u1091 0078                             u1251 0FCA                             u1411 0378  
                           u1331 028E                             u2107 0445                             u2027 05F3  
                           u1260 0FD0                             u1180 0F21                             u1420 0386  
                           u1340 0291                             u1500 01B3                             u1261 0FCF  
                           u1245 0FA9                             u1181 0F20                             u1325 0B90  
                           u1421 0385                             u1501 01B2                             u2117 0496  
                           u2037 0640                             _LATA 0018                             u1430 0393  
                           u1350 029E                             u1510 01B8                             _LATB 0019  
                           u2207 0D88                             u1431 0392                             u1415 0375  
                           u1351 029D                             u1511 01B7                             u2127 04A8  
                           u2047 068E                             _LATC 001A                             u1280 0D13  
                           u1440 03A1                             u1520 01CE                             u2217 0D8F  
                           u1281 0D12                             u1441 03A0                             u1521 01CD  
                           u2137 05C2                             u2057 069C                             u1290 0D21  
                           u1450 03A6                             u1370 02C1                             u1530 01DF  
                           u2227 0D96                             u2147 0EC8                             u1291 0D20  
                           u1451 03A5                             u1435 038F                             u1371 02C0  
                           u1531 01DE                             u2067 070B                             u1700 0CBC  
                           u1460 03AD                             u1380 02D4                             u1540 022B  
                           u1605 0E51                             u2237 0DB4                             u2157 0F05  
                           u1701 0CBB                             u1461 03AC                             u1445 039D  
                           u1381 02D3                             u1541 022A                             u2077 0758  
                           u1470 03B2                             u1390 02F0                             u1710 03F2  
                           u2247 0DDA                             u2167 0F0F                             u1615 0E8A  
                           u1471 03B1                             u1391 02EF                             u1711 03F1  
                           u2087 07A5                             u1480 03BD                             u1800 04BF  
                           u1720 0404                             u2257 0E36                             u2177 0D73  
                           u1625 0E9A                             u1481 03BC                             u1385 02D0  
                           u1801 04BE                             u1721 0403                             u2097 03F8  
                           u1490 0157                             u1810 0506                             u1730 040B  
                           u2267 0E73                             u1555 0DF8                             u2187 0D7A  
                           u1635 0EAB                             u1491 0156                             u1811 0505  
                           u1731 0409                             u1820 0514                             u1740 040C  
                           u1900 064A                             u2277 0E7C                             u1565 0E08  
                           u2197 0D81                             u1645 0EBB                             u1821 0513  
                           u1901 0649                             u1670 003A                             u1830 0563  
                           u1750 0416                             u1910 0698                             u1575 0E19  
                           u1655 0ED3                             u1671 0039                             u1831 0562  
                           u1751 0415                             u1911 0697                             u1680 0C71  
                           u1840 0572                             u1760 045F                             u1920 06A5  
                           u1585 0E29                             u1665 0EE3                             u1681 0C70  
                           u1841 0571                             u1761 045E                             u1921 06A4  
                           u1690 0DC4                             u1850 057F                             u1770 04A2  
                           u1930 06D5                             u1595 0E41                             u1691 0DC3  
                           u1851 057E                             u1771 04A1                             u1931 06D4  
                           u1860 058B                             u1780 04B4                             u1940 06FB  
                           u1861 058A                             u1781 04B3                             u1941 06FA  
                           u1870 0595                             u1790 04BA                             u1950 0707  
                           u1871 0594                             u1791 04B9                             u1951 0706  
                           u1880 05A3                             u1960 0714                             u1881 05A2  
                           u1961 0713                             u1970 0761                             u1890 05FC  
                           u1971 0760                             u1891 05FB                             u1980 07B5  
                           u1981 07B4                             u1990 07CA                             u1991 07C9  
                           u1985 07B1                             u1995 07C6                             _WPUC 1F4F  
                           abs@a 0073                             _dbuf 0120                             _main 05CA  
                           _dtoa 0273                             _menu 03E3                             _prec 00AA  
                           _nout 00A6                             pad@i 0027                             pad@p 0025  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           pad@w 0029                             btemp 007E                             start 0002  
                __end_of_Lcd_Cmd 0E83                  __end_of_Lcd_Out 0CBD                       _Lcd_Chr_CP 0E83  
                          ??_abs 0075                            ??_pad 007C                   Lcd_Out2@buffer 0074  
                __end_of___aodiv 0144                            ?_main 0070                            ?_dtoa 0030  
                __end_of___aomod 1000                            ?_menu 0070                            STR_10 086F  
                          STR_11 0812                            STR_20 084A                            STR_12 0855  
                          STR_13 0812                            STR_14 0855                            STR_15 0877  
                          STR_16 0867                            STR_17 0812                            STR_18 084A  
                          STR_19 0812                     vfpfcnvrt@fmt 004E                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            _flags 00AC  
                          _fputc 0CBD                            _fputs 0C00                            _selec 00A0  
                          pad@fp 002B                            _width 00A8                            _putch 000A  
                          dtoa@d 0030                            dtoa@i 004C                            dtoa@n 0044  
                          dtoa@p 003E                            dtoa@s 0042                            dtoa@w 0040  
                          status 0003                            wtemp0 007E                  __end_of_sprintf 0C00  
               __end_of_Lcd_Init 0DF1                 __end_of_Lcd_Out2 0C72                  __initialization 07E8  
                   __end_of_main 07E8                     __end_of_dtoa 03E3                     __end_of_menu 05CA  
                         ??_main 006E                           ??_dtoa 0038                           ??_menu 006C  
                         ?_fputc 0070                           ?_fputs 0078                           _ANSELA 1F38  
                         ?_putch 0070                           _ANSELB 1F43                           _ANSELC 1F4E  
                         _ODCONA 1F3A                           _ODCONB 1F45                           _ODCONC 1F50  
                         _INLVLA 1F3C                           _INLVLB 1F47                           _INLVLC 1F52  
                         u110lld 0098                           u121lld 0F6B                           u108lld 006D  
                         u117lld 0132                        ??_Lcd_Cmd 0070                    vfpfcnvrt@done 005D  
                         u127lld 0FEE                           u119lld 0F40                           u136lld 02BC  
                      ??_Lcd_Out 0076                     vfprintf@cfmt 0066                      ?_Lcd_Chr_CP 0070  
                      ??___aodiv 0070                        ??___aomod 0070                           pad@buf 0024  
                         dtoa@fp 003D                           _strlen 0BA1                           menu@ok 00E8  
                         fputc@c 0070                           fputs@c 0020                           fputs@i 0021  
                         fputs@s 0023                           putch@c 0070                 __end_of_vfprintf 0043  
                      ??_sprintf 007D          __end_of__initialization 07FD                   __pcstackCOMMON 0070  
                   __pidataBANK1 000B                    __end_of_fputc 0D0C                    __end_of_fputs 0C29  
                  __end_of_putch 000B                        ?_Lcd_Init 0070                        ?_Lcd_Out2 0073  
                        ??_fputc 0073                          ??_fputs 0079              __size_of_Lcd_Chr_CP 0093  
                        ??_putch 0070                       __pbssBANK1 00A0                       __pbssBANK2 0120  
                     __pmaintext 05CA                          ?_strlen 0070               __size_of_vfpfcnvrt 012F  
                     ??_Lcd_Init 0073                       ??_Lcd_Out2 0075                          _SLRCONA 1F3B  
                        _SLRCONB 1F46                          _SLRCONC 1F51                          _Lcd_Cmd 0DF1  
                        _Lcd_Out 0C72                     menu@variable 00E4                          ___aodiv 0043  
                        ___aomod 0F16                        ?_vfprintf 0060                          __ptext1 03E3  
                        __ptext2 0BDC                          __ptext3 0012                          __ptext4 0144  
                        __ptext5 0273                          __ptext6 0D0C                          __ptext7 0BA1  
                        __ptext8 0C00                          __ptext9 0CBD                          _contado 00B0  
                __size_of_strlen 001A                     __size_of_abs 001A                     __size_of_pad 0059  
       ??_PIN_MANAGER_Initialize 0070                          _sprintf 0BDC                          clrloop0 000D  
           end_of_initialization 07FD                          fputc@fp 0072                          fputs@fp 0078  
              __end_of_vfpfcnvrt 0273                     ??_Lcd_Chr_CP 0070                        Lcd_Out2@x 0073  
                      Lcd_Out2@y 0077                       ??_vfprintf 0063                          strlen@a 0073  
                        strlen@s 0074                        _PORTAbits 000C                        _PORTBbits 000D  
                      _PORTCbits 000E                        _TRISBbits 0013                        _TRISCbits 0014  
             __end_of_Lcd_Chr_CP 0F16                      vfpfcnvrt@ap 004F                      vfpfcnvrt@fp 005F  
                    vfpfcnvrt@ll 0055                   __end_of_strlen 0BBB              start_initialization 07E8  
                    __end_of_LDR 0802  __size_of_PIN_MANAGER_Initialize 0021                      __end_of_abs 0BA1  
                    __end_of_pad 0D65                    Lcd_Out@buffer 0074                __size_of_Lcd_Init 008C  
              __size_of_Lcd_Out2 0049                      vfprintf@fmt 0060                      __pdataBANK1 00EA  
                       ??_strlen 0072                        ___latbits 0001                    __pcstackBANK0 0020  
                  __pcstackBANK1 00DD                 ___aodiv@dividend 0028                         ?_Lcd_Cmd 0070  
                       ?_Lcd_Out 0073           _PIN_MANAGER_Initialize 0BBB                         ?___aodiv 0020  
                       ?___aomod 0020                 ___aodiv@quotient 0073                __size_of_vfprintf 0031  
                       ?_sprintf 0068                   __size_of_fputc 004F                   __size_of_fputs 0029  
                 __size_of_putch 0001                         _LATAbits 0018                         _LATCbits 001A  
                      clear_ram0 000C                         Lcd_Out@x 0073                         Lcd_Out@y 0078  
                      _vfpfcnvrt 0144                     Lcd_Init@data 0074                     Lcd_Out2@data 0078  
                       _Lcd_Init 0D65                         _Lcd_Out2 0C29                    menu@operacion 00E7  
               __size_of_Lcd_Cmd 0092                 __size_of_Lcd_Out 004B                       vfprintf@ap 0062  
                     vfprintf@fp 0065                 __size_of___aodiv 0101                 __size_of___aomod 00EA  
                     ?_vfpfcnvrt 004E                  ___aodiv@divisor 0020                  ___aodiv@counter 0071  
                     sprintf@fmt 0068                   Lcd_Chr_CP@data 0072                         _dtoa$683 003B  
                       __ptext10 000A                         __ptext11 0B87                         __ptext12 0F16  
                       __ptext13 0043                         __ptext14 0C29                         __ptext15 0BBB  
                       __ptext16 0C72                         __ptext17 0E83                         __ptext18 0D65  
                       __ptext19 0DF1                         _contador 00B4                 __size_of_sprintf 0024  
                    Lcd_Cmd@data 0072                    __size_of_main 021E                    __size_of_dtoa 0170  
                  __size_of_menu 01E7                         _vfprintf 0012                 ___aomod@dividend 0028  
                    Lcd_Out@data 0079                   __pstringtext10 086F                   __pstringtext11 0877  
                 __pstringtext12 087E                   __pstringtext13 0000                        sprintf@ap 00DD  
        ?_PIN_MANAGER_Initialize 0070                  ___aomod@divisor 0020                      ??_vfpfcnvrt 0050  
                ___aomod@counter 0071                    __pstringtext1 0800                    __pstringtext2 0812  
                  __pstringtext3 0822                    __pstringtext4 0831                    __pstringtext5 083F  
                  __pstringtext6 084A                    __pstringtext7 0855                    __pstringtext8 085F  
                  __pstringtext9 0867                         sprintf@f 00DE                         sprintf@s 00E3  
                   ___aodiv@sign 0072   __end_of_PIN_MANAGER_Initialize 0BDC                     ___aomod@sign 0072  
